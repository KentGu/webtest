<?xml version="1.0" encoding="UTF-8"?>
<jaxb:bindings xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc" xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" xmlns:ci="http://jaxb.dev.java.net/plugin/code-injector" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:simplify="http://jaxb2-commons.dev.java.net/basic/simplify" jaxb:extensionBindingPrefixes="ci simplify" jaxb:version="2.1">
	<jaxb:bindings schemaLocation="dataBean.xsd" node="/xs:schema">
		<!--<jaxb:globalBindings fixedAttributeAsConstantProperty="true" collectionType="java.util.Vector" typesafeEnumBase="xs:NCName" choiceContentProperty="false" typesafeEnumMemberName="generateError" bindingStyle="elementBinding" enableFailFastCheck="false" generateIsSetMethod="false" underscoreBinding="asCharInWord"/>-->
		<!-- <jaxb:globalBindings typesafeEnumMaxMembers="1000"/> -->
		<jaxb:bindings node="//xs:element[@name='dataBean']/xs:complexType">
			<ci:code>
    public java.util.List&lt;DataBeanType&gt; getDataList(){
        return java.util.Arrays.asList(getScenarioData(), getFeatureData(), getSystemData());
    }
			</ci:code>
		</jaxb:bindings>
		<jaxb:bindings node="//xs:complexType[@name='dataBeanType']/xs:choice/xs:element[@name='variable']"> 
			<simplify:as-element-property/>
		</jaxb:bindings>
		<jaxb:bindings node="//xs:complexType[@name='dataBeanType']">
			<ci:code>
    public StringType getVariable(String id) throws Exception {
        return (StringType) com.lombardrisk.util.Biz.filterListById(this.getVariable(), id);
    }

    public LoginCredential getLoginCredential(String id) throws Exception {
        return (LoginCredential) com.lombardrisk.util.Biz.filterListById(this.getLoginCredential(), id);
    }

    public MessageHandler getMessageHandler(String id) throws Exception {
    return (MessageHandler) com.lombardrisk.util.Biz.filterListById(this.getMessageHandler(), id);
    }

    public StaticData getOrganisationStaticData(String id) throws Exception {
    return (StaticData) com.lombardrisk.util.Biz.filterListById(this.getOrganisationStaticData(), id);
}

    public StaticData getCollateralStaticData(String id) throws Exception {
        return (StaticData) com.lombardrisk.util.Biz.filterListById(this.getCollateralStaticData(), id);
    }
    public StaticData getUdfValue(String id) throws Exception {
        return (StaticData) com.lombardrisk.util.Biz.filterListById(this.getUdfValue(), id);
    }


    public StaticData getSystemStaticData(String id) throws Exception {
        return (StaticData) com.lombardrisk.util.Biz.filterListById(this.getSystemStaticData(), id);
    }

    public AgencyRating getAgencyRating(String id) throws Exception {
        return (AgencyRating) com.lombardrisk.util.Biz.filterListById(this.getAgencyRating(), id);
    }

    public OrganisationBook getOrganisationBook(String id) throws Exception {
        return (OrganisationBook) com.lombardrisk.util.Biz.filterListById(this.getOrganisationBook(), id);
    }

    public OrganisationIndustry getOrganisationIndustry(String id) throws Exception {
        return ( OrganisationIndustry) com.lombardrisk.util.Biz.filterListById(this.getOrganisationIndustry(), id);
    }

    public OrganisationSearch getOrganisationSearch(String id) throws Exception {
        return (OrganisationSearch) com.lombardrisk.util.Biz.filterListById(this.getOrganisationSearch(), id);
    }

    public Organisation getOrganisation(String id) throws Exception {
        return (Organisation) com.lombardrisk.util.Biz.filterListById(this.getOrganisation(), id);
    }

    public OrganisationSearchResult getOrganisationSearchResult(String id) throws Exception {
        return (OrganisationSearchResult) com.lombardrisk.util.Biz.filterListById(this.getOrganisationSearchResult(), id);
    }

    public OrganisationGlobalPreference getOrganisationGlobalPreference(String id) throws Exception {
        return (OrganisationGlobalPreference) com.lombardrisk.util.Biz.filterListById(this.getOrganisationGlobalPreference(), id);
    }

    public FxRateSet getFxRateSet(String id) throws Exception {
        return (FxRateSet) com.lombardrisk.util.Biz.filterListById(this.getFxRateSet(), id);
    }

    public Instrument getInstrument(String id) throws Exception {
        return (Instrument) com.lombardrisk.util.Biz.filterListById(this.getInstrument(), id);
    }

    public AgreementSearch getAgreementSearch(String id) throws Exception {
        return (AgreementSearch) com.lombardrisk.util.Biz.filterListById(this.getAgreementSearch(), id);
    }

    public AgreementSearchResult getAgreementSearchResult(String id) throws Exception {
        return (AgreementSearchResult) com.lombardrisk.util.Biz.filterListById(this.getAgreementSearchResult(), id);
    }

    public ExternalExposureList getExternalExposureList(String id) throws Exception {
        return (ExternalExposureList) com.lombardrisk.util.Biz.filterListById(this.getExternalExposureList(), id);
    }

    public AgreementSearchResult getApprovalManagerStatementSearchResult(String id) throws Exception {
        return (AgreementSearchResult) com.lombardrisk.util.Biz.filterListById(this.getApprovalManagerStatementSearchResult(), id);
    }

    public AgreementSearch getApprovalManagerStatementSearch(String id) throws Exception {
        return (AgreementSearch) com.lombardrisk.util.Biz.filterListById(this.getApprovalManagerStatementSearch(), id);
    }

    public ApprovalManagerTradesSearch getApprovalManagerTradesSearch(String id) throws Exception {
        return (ApprovalManagerTradesSearch) com.lombardrisk.util.Biz.filterListById(this.getApprovalManagerTradesSearch(), id);
    }

    public ApprovalManagerTradesSearchResult getApprovalManagerTradesSearchResult(String id) throws Exception {
        return (ApprovalManagerTradesSearchResult) com.lombardrisk.util.Biz.filterListById(this.getApprovalManagerTradesSearchResult(), id);
    }

    public Agreement getAgreement(String id) throws Exception {
        return (Agreement) com.lombardrisk.util.Biz.filterListById(this.getAgreement(), id);
    }

    public AgreementSummary getAgreementSummary(String id) throws Exception {
        return (AgreementSummary) com.lombardrisk.util.Biz.filterListById(this.getAgreementSummary(), id);
    }

    public AgreementStatement getAgreementStatement(String id) throws Exception {
        return (AgreementStatement) com.lombardrisk.util.Biz.filterListById(this.getAgreementStatement(), id);
    }

    public ConcentrationLimitBreached getConcentrationLimitBreached(String id) throws Exception {
        return (ConcentrationLimitBreached) com.lombardrisk.util.Biz.filterListById(this.getConcentrationLimitBreached(), id);
    }

    public EligibilityRuleBreached getEligibilityRuleBreached(String id) throws Exception {
            return (EligibilityRuleBreached) com.lombardrisk.util.Biz.filterListById(this.getEligibilityRuleBreached(), id);
    }

    public TradeDetail getTradeDetail(String id) throws Exception {
        return (TradeDetail) com.lombardrisk.util.Biz.filterListById(this.getTradeDetail(), id);
    }

    public TradeSummary getTradeSummary(String id) throws Exception {
            return (TradeSummary) com.lombardrisk.util.Biz.filterListById(this.getTradeSummary(), id);
        }

    public BookingDetail getBookingDetail(String id) throws Exception {
        return (BookingDetail) com.lombardrisk.util.Biz.filterListById(this.getBookingDetail(), id);
    }

    public AssetBookingSummary getAssetBookingSummary(String id) throws Exception {
        return (AssetBookingSummary) com.lombardrisk.util.Biz.filterListById(this.getAssetBookingSummary(), id);
    }

    public CashMovementDetail getCashMovementDetail(String id) throws Exception {
        return (CashMovementDetail) com.lombardrisk.util.Biz.filterListById(this.getCashMovementDetail(), id);
    }

    public BadStagingFeedReportFilter getBadStagingFeedReportFilter(String id) throws Exception {
        return (BadStagingFeedReportFilter) com.lombardrisk.util.Biz.filterListById(this.getBadStagingFeedReportFilter(), id);
    }

    public CashMovementSummary getCashMovementSummary(String id) throws Exception {
        return (CashMovementSummary) com.lombardrisk.util.Biz.filterListById(this.getCashMovementSummary(), id);
    }

    public EligibilityRulesTemplate getEligibilityRulesTemplate(String id) throws Exception {
        return (EligibilityRulesTemplate) com.lombardrisk.util.Biz.filterListById(this.getEligibilityRulesTemplate(),id);
    }

    public FeedAgreement getFeedAgreement(String id) throws Exception {
        return (FeedAgreement) com.lombardrisk.util.Biz.filterListById(this.getFeedAgreement(), id);
    }

    public FeedAgreementRating getFeedAgreementRating(String id) throws Exception {
        return (FeedAgreementRating) com.lombardrisk.util.Biz.filterListById(this.getFeedAgreementRating(), id);
    }

    public FeedAgreementUDF getFeedAgreementUDF(String id) throws Exception {
        return (FeedAgreementUDF) com.lombardrisk.util.Biz.filterListById(this.getFeedAgreementUDF(), id);
    }

    public FeedCounterpartyAmount getFeedCounterpartyAmount(String id) throws Exception {
        return (FeedCounterpartyAmount) com.lombardrisk.util.Biz.filterListById(this.getFeedCounterpartyAmount(), id);
    }

    public FeedExternalIA getFeedExternalIA(String id) throws Exception {
        return (FeedExternalIA) com.lombardrisk.util.Biz.filterListById(this.getFeedExternalIA(), id);
    }

    public FeedEligibilityRulesTemplate getFeedEligibilityRulesTemplate(String id) throws Exception {
        return (FeedEligibilityRulesTemplate) com.lombardrisk.util.Biz.filterListById(this.getFeedEligibilityRulesTemplate(), id);
    }

    public FeedOrganisation getFeedOrganisation(String id) throws Exception {
        return (FeedOrganisation) com.lombardrisk.util.Biz.filterListById(this.getFeedOrganisation(), id);
    }

    public FeedOrganisationContact getFeedOrganisationContact(String id) throws Exception {
        return (FeedOrganisationContact) com.lombardrisk.util.Biz.filterListById(this.getFeedOrganisationContact(), id);
    }

    public FeedSecurityTemplate getFeedSecurityTemplate(String id) throws Exception {
        return (FeedSecurityTemplate) com.lombardrisk.util.Biz.filterListById(this.getFeedSecurityTemplate(), id);
    }

    public FeedAssetBooking getFeedAssetBooking(String id) throws Exception {
        return (FeedAssetBooking) com.lombardrisk.util.Biz.filterListById(this.getFeedAssetBooking(), id);
    }

    public FeedAssetPricing getFeedAssetPricing(String id) throws Exception {
        return (FeedAssetPricing) com.lombardrisk.util.Biz.filterListById(this.getFeedAssetPricing(), id);
    }

    public FeedAssetRating getFeedAssetRating(String id) throws Exception {
        return (FeedAssetRating) com.lombardrisk.util.Biz.filterListById(this.getFeedAssetRating(), id);
    }

    public FeedInterestAmount getFeedInterestAmount(String id) throws Exception {
        return (FeedInterestAmount) com.lombardrisk.util.Biz.filterListById(this.getFeedInterestAmount(), id);
    }

    public FeedInterestRate getFeedInterestRate(String id) throws Exception {
        return (FeedInterestRate) com.lombardrisk.util.Biz.filterListById(this.getFeedInterestRate(), id);
    }

    public FeedInventoryManager getFeedInventoryManager(String id) throws Exception {
        return (FeedInventoryManager) com.lombardrisk.util.Biz.filterListById(this.getFeedInventoryManager(), id);
    }

    public FeedTrade getFeedTrade(String id) throws Exception {
        return (FeedTrade) com.lombardrisk.util.Biz.filterListById(this.getFeedTrade(), id);
    }

    public FeedRepoTrade getFeedRepoTrade(String id) throws Exception {
        return (FeedRepoTrade) com.lombardrisk.util.Biz.filterListById(this.getFeedRepoTrade(), id);
    }

    public FeedETFTrade getFeedETFTrade(String id) throws Exception {
        return (FeedETFTrade) com.lombardrisk.util.Biz.filterListById(this.getFeedETFTrade(), id);
    }

    public FeedResult getFeedResult(String id) throws Exception {
        return (FeedResult) com.lombardrisk.util.Biz.filterListById(this.getFeedResult(), id);
    }

    public FeedStatus getFeedStatus(String id) throws Exception {
        return (FeedStatus) com.lombardrisk.util.Biz.filterListById(this.getFeedStatus(), id);
    }

    public FeedMtM getFeedMtM(String id) throws Exception {
        return (FeedMtM) com.lombardrisk.util.Biz.filterListById(this.getFeedMtM(), id);
    }

    public InterestRate getInterestRate(String id) throws Exception {
        return (InterestRate) com.lombardrisk.util.Biz.filterListById(this.getInterestRate(), id);
    }

    public SettlementDataSearch getSettlementDataSearch(String id) throws Exception {
        return (SettlementDataSearch) com.lombardrisk.util.Biz.filterListById(this.getSettlementDataSearch(), id);
    }

    public SettlementData getSettlementData(String id) throws Exception {
        return (SettlementData) com.lombardrisk.util.Biz.filterListById(this.getSettlementData(), id);
    }

    public UmbrellaRule getUmbrellaRule(String id) throws Exception {
        return (UmbrellaRule) com.lombardrisk.util.Biz.filterListById(this.getUmbrellaRule(), id);
    }

    public OrganisationSimpleSearch getApprovalManagerOrganisationSearch(String id) throws Exception {
        return (OrganisationSimpleSearch) com.lombardrisk.util.Biz.filterListById(this.getApprovalManagerOrganisationSearch(), id);
    }

    public ExposureEventSearch getExposureEventSearch(String id) throws Exception {
        return (ExposureEventSearch) com.lombardrisk.util.Biz.filterListById(this.getExposureEventSearch(), id);
    }



    public ExposureEventDetail getExposureEventDetail(String id) throws Exception {
        return (ExposureEventDetail) com.lombardrisk.util.Biz.filterListById(this.getExposureEventDetail(), id);
    }
    public ExposureManagementMessage getExposureManagementMessage(String id) throws Exception {
            return (ExposureManagementMessage) com.lombardrisk.util.Biz.filterListById(this.getExposureManagementMessage(), id);
        }

    public AssetDefinition getAssetDefinition(String id) throws Exception {
        return (AssetDefinition) com.lombardrisk.util.Biz.filterListById(this.getAssetDefinition(), id);
    }

    public SecuritySearch getSecuritySearch(String id) throws Exception {
        return (SecuritySearch) com.lombardrisk.util.Biz.filterListById(this.getSecuritySearch(), id);
    }

    public AssetHoldingsAndValuationReportFilter getAssetHoldingsAndValuationReportFilter(String id) throws Exception {
        return (AssetHoldingsAndValuationReportFilter) com.lombardrisk.util.Biz.filterListById(this.getAssetHoldingsAndValuationReportFilter(), id);
    }

    public AssetManagementReportFilter getAssetManagementReportFilter(String id) throws Exception {
        return (AssetManagementReportFilter) com.lombardrisk.util.Biz.filterListById(this.getAssetManagementReportFilter(), id);
    }

    public AssetSettlementReportFilter getAssetSettlementReportFilter(String id) throws Exception {
        return (AssetSettlementReportFilter) com.lombardrisk.util.Biz.filterListById(this.getAssetSettlementReportFilter(), id);
    }

    public CollateralAvailabilityReportFilter getCollateralAvailabilityReportFilter(String id) throws Exception {
        return (CollateralAvailabilityReportFilter) com.lombardrisk.util.Biz.filterListById(this.getCollateralAvailabilityReportFilter(), id);
    }



    public ConcentrationLimitsReportFilter getConcentrationLimitsReportFilter(String id) throws Exception {
        return (ConcentrationLimitsReportFilter) com.lombardrisk.util.Biz.filterListById(this.getConcentrationLimitsReportFilter(), id);
    }

    public CorporateActionsReportFilter getCorporateActionsReportFilter(String id) throws Exception {
        return (CorporateActionsReportFilter) com.lombardrisk.util.Biz.filterListById(this.getCorporateActionsReportFilter(), id);
    }

    public IneligibleAssetReportFilter getIneligibleAssetReportFilter(String id) throws Exception {
        return (IneligibleAssetReportFilter) com.lombardrisk.util.Biz.filterListById(this.getIneligibleAssetReportFilter(), id);
    }

    public InventoryManagerReportFilter getInventoryManagerReportFilter(String id) throws Exception {
        return (InventoryManagerReportFilter) com.lombardrisk.util.Biz.filterListById(this.getInventoryManagerReportFilter(), id);
    }

    public RehypothecationEligibilityReportFilter getRehypothecationEligibilityReportFilter(String id) throws Exception {
        return (RehypothecationEligibilityReportFilter) com.lombardrisk.util.Biz.filterListById(this.getRehypothecationEligibilityReportFilter(), id);
    }

    public SecurityInstrumentsReportFilter getSecurityInstrumentsReportFilter(String id) throws Exception {
        return (SecurityInstrumentsReportFilter) com.lombardrisk.util.Biz.filterListById(this.getSecurityInstrumentsReportFilter(), id);
    }

    public AuditAgreementsReportFilter getAuditAgreementsReportFilter(String id) throws Exception {
        return (AuditAgreementsReportFilter) com.lombardrisk.util.Biz.filterListById(this.getAuditAgreementsReportFilter(), id);
    }

    public AuditAssetDefinitionReportFilter getAuditAssetDefinitionReportFilter(String id) throws Exception {
        return (AuditAssetDefinitionReportFilter) com.lombardrisk.util.Biz.filterListById(this.getAuditAssetDefinitionReportFilter(), id);
    }

    public AuditAssetsReportFilter getAuditAssetsReportFilter(String id) throws Exception {
        return (AuditAssetsReportFilter) com.lombardrisk.util.Biz.filterListById(this.getAuditAssetsReportFilter(), id);
    }

    public AuditEligibilityRuleTemplateReportFilter getAuditEligibilityRuleTemplateReportFilter(String id) throws Exception {
        return (AuditEligibilityRuleTemplateReportFilter) com.lombardrisk.util.Biz.filterListById(this.getAuditEligibilityRuleTemplateReportFilter(), id);
    }

    public AuditHolidayCentresReportFilter getAuditHolidayCentresReportFilter(String id) throws Exception {
        return (AuditHolidayCentresReportFilter) com.lombardrisk.util.Biz.filterListById(this.getAuditHolidayCentresReportFilter(), id);
    }

    public AuditInterestRatesReportFilter getAuditInterestRatesReportFilter(String id) throws Exception {
        return (AuditInterestRatesReportFilter) com.lombardrisk.util.Biz.filterListById(this.getAuditInterestRatesReportFilter(), id);
    }

    public AuditOptimisationRuleReportFilter getAuditOptimisationRuleReportFilter(String id) throws Exception {
        return (AuditOptimisationRuleReportFilter) com.lombardrisk.util.Biz.filterListById(this.getAuditOptimisationRuleReportFilter(), id);
    }

    public AuditOrganisationsReportFilter getAuditOrganisationsReportFilter(String id) throws Exception {
        return (AuditOrganisationsReportFilter) com.lombardrisk.util.Biz.filterListById(this.getAuditOrganisationsReportFilter(), id);
    }

    public AuditRolesAdministrationReportFilter getAuditRolesAdministrationReportFilter(String id) throws Exception {
        return (AuditRolesAdministrationReportFilter) com.lombardrisk.util.Biz.filterListById(this.getAuditRolesAdministrationReportFilter(), id);
    }

    public AuditSettlementDetailsReportFilter getAuditSettlementDetailsReportFilter(String id) throws Exception {
        return (AuditSettlementDetailsReportFilter) com.lombardrisk.util.Biz.filterListById(this.getAuditSettlementDetailsReportFilter(), id);
    }



    public AuditStatementsReportFilter getAuditStatementsReportFilter(String id) throws Exception {
        return (AuditStatementsReportFilter) com.lombardrisk.util.Biz.filterListById(this.getAuditStatementsReportFilter(), id);
    }

     public AuditTradesReportFilter getAuditTradesReportFilter(String id) throws Exception {
        return (AuditTradesReportFilter) com.lombardrisk.util.Biz.filterListById(this.getAuditTradesReportFilter(), id);
    }

    public AuditUserAdministrationReportFilter getAuditUserAdministrationReportFilter(String id) throws Exception {
        return (AuditUserAdministrationReportFilter) com.lombardrisk.util.Biz.filterListById(this.getAuditUserAdministrationReportFilter(), id);
    }

    public FrequencyDistributionLogReportFilter getFrequencyDistributionLogReportFilter(String id) throws Exception {
        return (FrequencyDistributionLogReportFilter) com.lombardrisk.util.Biz.filterListById(this.getFrequencyDistributionLogReportFilter(), id);
    }

    public AgreementsReportFilter getAgreementsReportFilter(String id) throws Exception {
        return (AgreementsReportFilter) com.lombardrisk.util.Biz.filterListById(this.getAgreementsReportFilter(), id);
    }

    public EligibilityRulesTemplateReportFilter getEligibilityRulesTemplateReportFilter(String id) throws Exception {
        return (EligibilityRulesTemplateReportFilter) com.lombardrisk.util.Biz.filterListById(this.getEligibilityRulesTemplateReportFilter(), id);
    }

    public HistoricalFxRatesReportFilter getHistoricalFxRatesReportFilter(String id) throws Exception {
        return (HistoricalFxRatesReportFilter) com.lombardrisk.util.Biz.filterListById(this.getHistoricalFxRatesReportFilter(), id);
    }

    public HistoricalInterestRateReportFilter getHistoricalInterestRateReportFilter(String id) throws Exception {
        return (HistoricalInterestRateReportFilter) com.lombardrisk.util.Biz.filterListById(this.getHistoricalInterestRateReportFilter(), id);
    }

    public LicensingReportFilter getLicensingReportFilter(String id) throws Exception {
        return (LicensingReportFilter) com.lombardrisk.util.Biz.filterListById(this.getLicensingReportFilter(), id);
    }

    public ReportValidationRules getReportValidationRules(String id) throws Exception {
        return (ReportValidationRules) com.lombardrisk.util.Biz.filterListById(this.getReportValidationRules(), id);
    }

    public CollateralPreference getCollateralPreference(String id) throws Exception {
        return (CollateralPreference) com.lombardrisk.util.Biz.filterListById(this.getCollateralPreference(), id);
    }

    public SystemPreference getSystemPreference(String id) throws Exception {
        return (SystemPreference) com.lombardrisk.util.Biz.filterListById(this.getSystemPreference(), id);
    }

    public InterestEventSearch getInterestEventSearch(String id) throws Exception {
        return (InterestEventSearch) com.lombardrisk.util.Biz.filterListById(this.getInterestEventSearch(), id);
    }

    public InterestEventDetail getInterestEventDetail(String id) throws Exception {
         return (InterestEventDetail) com.lombardrisk.util.Biz.filterListById(this.getInterestEventDetail(), id);
    }

    public SubstitutionLetter getSubstitutionLetter(String id) throws Exception {
        return (SubstitutionLetter) com.lombardrisk.util.Biz.filterListById(this.getSubstitutionLetter(), id);
    }

    public MarginLetter getMarginLetter(String id) throws Exception {
        return (MarginLetter) com.lombardrisk.util.Biz.filterListById(this.getMarginLetter(), id);
    }

    public InterestLetter getInterestLetter(String id) throws Exception {
        return (InterestLetter) com.lombardrisk.util.Biz.filterListById(this.getInterestLetter(), id);
    }


    public SubstitutionLetterSummary getSubstitutionLetterSummary(String id) throws Exception {
        return (SubstitutionLetterSummary) com.lombardrisk.util.Biz.filterListById(this.getSubstitutionLetterSummary(), id);
    }

    public MarginLetterSummary getMarginLetterSummary(String id) throws Exception {
        return (MarginLetterSummary) com.lombardrisk.util.Biz.filterListById(this.getMarginLetterSummary(), id);
    }

    public InterestLetterSummary getInterestLetterSummary(String id) throws Exception {
        return (InterestLetterSummary) com.lombardrisk.util.Biz.filterListById(this.getInterestLetterSummary(), id);
    }

    public LetterConfiguration getLetterConfiguration(String id) throws Exception {
        return (LetterConfiguration) com.lombardrisk.util.Biz.filterListById(this.getLetterConfiguration(), id);
    }

    public TsaRule getTsaRule(String id) throws Exception {
        return (TsaRule) com.lombardrisk.util.Biz.filterListById(this.getTsaRule(), id);
    }

    public TaskSchedulerDetail getTaskSchedulerDetail(String id) throws Exception {
        return (TaskSchedulerDetail) com.lombardrisk.util.Biz.filterListById(this.getTaskSchedulerDetail(), id);
    }

    public UserFavourite getUserFavourite(String id) throws Exception {
        return (UserFavourite) com.lombardrisk.util.Biz.filterListById(this.getUserFavourite(), id);
    }

    public UserPreference getUserPreference(String id) throws Exception {
        return (UserPreference) com.lombardrisk.util.Biz.filterListById(this.getUserPreference(), id);
    }

    public HolidayCentre getHolidayCentre(String id) throws Exception {
        return (HolidayCentre) com.lombardrisk.util.Biz.filterListById(this.getHolidayCentre(), id);
    }

    public Region getRegion(String id) throws Exception {
        return (Region) com.lombardrisk.util.Biz.filterListById(this.getRegion(), id);
    }

    public Feed getFeed(String id) throws Exception {
        return (Feed) com.lombardrisk.util.Biz.filterListById(this.getFeed(), id);
    }
    public Dashboard getDashboard(String id) throws Exception {
        return (Dashboard) com.lombardrisk.util.Biz.filterListById(this.getDashboard(), id);
    }

    public FilterType getInventoryManagerFilter(String id) throws Exception{
        return (FilterType) com.lombardrisk.util.Biz.filterListById(this.getInventoryManagerFilter(), id);
    }

    public ExposureManagementFilter getExposureManagementFilter(String id) throws Exception{
        return (ExposureManagementFilter) com.lombardrisk.util.Biz.filterListById(this.getExposureManagementFilter(), id);
    }

    public AgreementExposureAdjustment getAgreementExposureAdjustment(String id) throws Exception{
        return (AgreementExposureAdjustment) com.lombardrisk.util.Biz.filterListById(this.getAgreementExposureAdjustment(), id);
    }

    public SubstitutionEventDetail getSubstitutionEventDetail(String id) throws Exception{
        return (SubstitutionEventDetail) com.lombardrisk.util.Biz.filterListById(this.getSubstitutionEventDetail(), id);
    }

    public SubstitutionEventSearch getSubstitutionEventSearch(String id) throws Exception{
        return (SubstitutionEventSearch) com.lombardrisk.util.Biz.filterListById(this.getSubstitutionEventSearch(), id);
    }

    public StpConfiguration getStpConfigurations(String id) throws Exception{
        return (StpConfiguration) com.lombardrisk.util.Biz.filterListById(this.getStpConfigurations(), id);
    }

    public ApprovalProfile getApprovalProfile(String id) throws Exception{
        return (ApprovalProfile) com.lombardrisk.util.Biz.filterListById(this.getApprovalProfile(), id);
    }

    public AdministerRole getAdministerRole(String id) throws Exception{
        return (AdministerRole) com.lombardrisk.util.Biz.filterListById(this.getAdministerRole(), id);
    }

    public User getUser(String id) throws Exception{
        return (User) com.lombardrisk.util.Biz.filterListById(this.getUser(), id);
    }

    public EventLogSearch getEventLogSearch(String id) throws Exception{
        return (EventLogSearch) com.lombardrisk.util.Biz.filterListById(this.getEventLogSearch(), id);
    }

    public RejectedTradesReportFilter getRepoEtfsblRejectedTradesReportFilter(String id) throws Exception{
        return (RejectedTradesReportFilter) com.lombardrisk.util.Biz.filterListById(this.getRepoEtfsblRejectedTradesReportFilter(), id);
    }

    public RoleApprovalReportFilter getRoleApprovalReportFilter(String id) throws Exception{
        return (RoleApprovalReportFilter) com.lombardrisk.util.Biz.filterListById(this.getRoleApprovalReportFilter(), id);
    }

    public UserProfileReportFilter getUserProfileReportFilter(String id) throws Exception{
        return (UserProfileReportFilter) com.lombardrisk.util.Biz.filterListById(this.getUserProfileReportFilter(), id);
    }

    public StpDashboardReportFilter getStpDashboardReportFilter(String id) throws Exception{
        return (StpDashboardReportFilter) com.lombardrisk.util.Biz.filterListById(this.getStpDashboardReportFilter(), id);
    }

    public PriceVarianceExceptionsReportFilter getPriceVarianceExceptionsReportFilter(String id) throws Exception{
        return (PriceVarianceExceptionsReportFilter) com.lombardrisk.util.Biz.filterListById(this.getPriceVarianceExceptionsReportFilter(), id);
    }

    public ReconciliationOutputReportFilter getReconciliationOutputReportFilter(String id) throws Exception{
        return (ReconciliationOutputReportFilter) com.lombardrisk.util.Biz.filterListById(this.getReconciliationOutputReportFilter(), id);
    }
    public ReconciliationTradesOutputReportFilter getReconciliationTradesOutputReportFilter(String id) throws Exception{
        return (ReconciliationTradesOutputReportFilter) com.lombardrisk.util.Biz.filterListById(this.getReconciliationTradesOutputReportFilter(), id);
    }


    public PriceExceptionsReportFilter getPriceExceptionsReportFilter(String id) throws Exception{
        return (PriceExceptionsReportFilter) com.lombardrisk.util.Biz.filterListById(this.getPriceExceptionsReportFilter(), id);
    }

    public PriceAgeExceptionsReportFilter getPriceAgeExceptionsReportFilter(String id) throws Exception{
        return (PriceAgeExceptionsReportFilter) com.lombardrisk.util.Biz.filterListById(this.getPriceAgeExceptionsReportFilter(), id);
    }

    public ManuallyOverriddenAssetPriceReportFilter getManuallyOverriddenAssetPriceReportFilter(String id) throws Exception{
        return (ManuallyOverriddenAssetPriceReportFilter) com.lombardrisk.util.Biz.filterListById(this.getManuallyOverriddenAssetPriceReportFilter(), id);
    }

    public WhatIfScenarioReportFilter getWhatIfScenarioReportFilter(String id) throws Exception{
        return (WhatIfScenarioReportFilter) com.lombardrisk.util.Biz.filterListById(this.getWhatIfScenarioReportFilter(), id);
    }

    public OptimisationResultReportFilter getOptimisationResultReportFilter(String id) throws Exception{
        return (OptimisationResultReportFilter) com.lombardrisk.util.Biz.filterListById(this.getOptimisationResultReportFilter(), id);
    }

    public OptimisationRuleReportFilter getOptimisationRuleReportFilter(String id) throws Exception{
        return (OptimisationRuleReportFilter) com.lombardrisk.util.Biz.filterListById(this.getOptimisationRuleReportFilter(), id);
    }



    public TsaReportFilter getTsaReportFilter(String id) throws Exception{
        return (TsaReportFilter) com.lombardrisk.util.Biz.filterListById(this.getTsaReportFilter(), id);
    }

    public RepoEtfsblDailyExporesureReportFilter getRepoEtfsblDailyExporesureReportFilter(String id) throws Exception{
            return (RepoEtfsblDailyExporesureReportFilter) com.lombardrisk.util.Biz.filterListById(this.getRepoEtfsblDailyExporesureReportFilter(), id);
        }

    public RepoEtfsblHistoricalExporesureReportFilter getRepoEtfsblHistoricalExporesureReportFilter(String id) throws Exception{
        return (RepoEtfsblHistoricalExporesureReportFilter) com.lombardrisk.util.Biz.filterListById(this.getRepoEtfsblHistoricalExporesureReportFilter(), id);
    }

    public MtmComparisonReportFilter getMtmComparisonReportFilter(String id) throws Exception{
        return (MtmComparisonReportFilter) com.lombardrisk.util.Biz.filterListById(this.getMtmComparisonReportFilter(), id);
    }

    public MisReportFilter getMisReportFilter(String id) throws Exception{
        return (MisReportFilter) com.lombardrisk.util.Biz.filterListById(this.getMisReportFilter(), id);
    }

    public InternalReviewReportFilter getInternalReviewReportFilter(String id) throws Exception{
        return (InternalReviewReportFilter) com.lombardrisk.util.Biz.filterListById(this.getInternalReviewReportFilter(), id);
    }

    public HistoricalExposureReportFilter getHistoricalExposureReportFilter(String id) throws Exception{
        return (HistoricalExposureReportFilter) com.lombardrisk.util.Biz.filterListById(this.getHistoricalExposureReportFilter(), id);
    }

    public DisputeReportFilter getDisputeReportFilter(String id) throws Exception{
        return (DisputeReportFilter) com.lombardrisk.util.Biz.filterListById(this.getDisputeReportFilter(), id);
    }


    public DisputeHistoryReportFilter getDisputeHistoryReportFilter(String id) throws Exception{
        return (DisputeHistoryReportFilter) com.lombardrisk.util.Biz.filterListById(this.getDisputeHistoryReportFilter(), id);
    }


    public DailyExposureReportFilter getDailyExposureReportFilter(String id) throws Exception{
        return (DailyExposureReportFilter) com.lombardrisk.util.Biz.filterListById(this.getDailyExposureReportFilter(), id);
    }

    public TradesOutputReportFilter getTradesOutputReportFilter(String id) throws Exception{
        return (TradesOutputReportFilter) com.lombardrisk.util.Biz.filterListById(this.getTradesOutputReportFilter(), id);
    }

    public RepoEtfsblTradesOutputReportFilter getRepoEtfsblTradesOutputReportFilter(String id) throws Exception{
        return (RepoEtfsblTradesOutputReportFilter) com.lombardrisk.util.Biz.filterListById(this.getRepoEtfsblTradesOutputReportFilter(), id);
    }

    public RejectedTradesReportFilter getRejectedTradesReportFilter(String id) throws Exception{
        return (RejectedTradesReportFilter) com.lombardrisk.util.Biz.filterListById(this.getRejectedTradesReportFilter(), id);
    }

    public MonthEndReportFilter getMonthEndReportFilter(String id) throws Exception{
        return (MonthEndReportFilter) com.lombardrisk.util.Biz.filterListById(this.getMonthEndReportFilter(), id);
    }

    public InterestChangesReportFilter getInterestChangesReportFilter(String id) throws Exception{
        return (InterestChangesReportFilter) com.lombardrisk.util.Biz.filterListById(this.getInterestChangesReportFilter(), id);
    }

    public InterestCalculationsScheduleReportFilter getInterestCalculationsScheduleReportFilter(String id) throws Exception{
        return (InterestCalculationsScheduleReportFilter) com.lombardrisk.util.Biz.filterListById(this.getInterestCalculationsScheduleReportFilter(), id);
    }

    public InterestAppliedReportFilter getInterestAppliedReportFilter(String id) throws Exception{
        return (InterestAppliedReportFilter) com.lombardrisk.util.Biz.filterListById(this.getInterestAppliedReportFilter(), id);
    }

    public CashAndAccrualReportFilter getCashAndAccrualReportFilter(String id) throws Exception{
        return (CashAndAccrualReportFilter) com.lombardrisk.util.Biz.filterListById(this.getCashAndAccrualReportFilter(), id);
    }

    public SettlementInstructionsReportFilter getSettlementInstructionsReportFilter(String id) throws Exception{
        return (SettlementInstructionsReportFilter) com.lombardrisk.util.Biz.filterListById(this.getSettlementInstructionsReportFilter(), id);
    }

    public OrganisationAgreementsReportFilter getOrganisationAgreementsReportFilter(String id) throws Exception{
        return (OrganisationAgreementsReportFilter) com.lombardrisk.util.Biz.filterListById(this.getOrganisationAgreementsReportFilter(), id);
    }

    public OrganisationThresholdReportFilter getOrganisationThresholdReportFilter(String id) throws Exception{
            return (OrganisationThresholdReportFilter) com.lombardrisk.util.Biz.filterListById(this.getOrganisationThresholdReportFilter(), id);
        }

    public PasswordChange getPasswordChange(String id) throws Exception{
        return (PasswordChange) com.lombardrisk.util.Biz.filterListById(this.getPasswordChange(), id);
    }

    public SavedReport getSavedReport(String id) throws Exception{
        return (SavedReport) com.lombardrisk.util.Biz.filterListById(this.getSavedReport(), id);
    }

    public AgreementExposureSummary getAgreementExposureSummary(String id) throws Exception{
        return (AgreementExposureSummary) com.lombardrisk.util.Biz.filterListById(this.getAgreementExposureSummary(), id);
    }

    public MultiModelAgreementStatement getMultiModelAgreementStatement(String id) throws Exception{
        return (MultiModelAgreementStatement) com.lombardrisk.util.Biz.filterListById(this.getMultiModelAgreementStatement(), id);
    }

    public EtdAgreementStatement getEtdAgreementStatement(String id) throws Exception{
        return (EtdAgreementStatement) com.lombardrisk.util.Biz.filterListById(this.getEtdAgreementStatement(), id);
    }

    public EtfAgreementStatement getEtfAgreementStatement(String id) throws Exception{
        return (EtfAgreementStatement) com.lombardrisk.util.Biz.filterListById(this.getEtfAgreementStatement(), id);
    }

    public TradeSearch getTradeSearch(String id) throws Exception{
        return (TradeSearch) com.lombardrisk.util.Biz.filterListById(this.getTradeSearch(), id);
    }

    public StatementArchiveSearch getStatementArchiveSearch(String id) throws Exception{
        return (StatementArchiveSearch) com.lombardrisk.util.Biz.filterListById(this.getStatementArchiveSearch(), id);
    }

    public TradeSearchResult getTradeSearchResult(String id) throws Exception{
        return (TradeSearchResult) com.lombardrisk.util.Biz.filterListById(this.getTradeSearchResult(), id);
    }
	public TsaRule getCashflowRule(String id) throws Exception{
        return (TsaRule) com.lombardrisk.util.Biz.filterListById(this.getCashflowRule(), id);
    }

    public TsaReportFilter getCashflowReportFilter(String id) throws Exception{
        return (TsaReportFilter) com.lombardrisk.util.Biz.filterListById(this.getCashflowReportFilter(), id);
    }

    public FeedPortfolioTSA getFeedPortfolioCashflow(String id) throws Exception{
        return (FeedPortfolioTSA) com.lombardrisk.util.Biz.filterListById(this.getFeedPortfolioCashflow(), id);
    }
    public AgreementIaValue getAgreementIaValue(String id) throws Exception{
        return (AgreementIaValue) com.lombardrisk.util.Biz.filterListById(this.getAgreementIaValue(), id);
    }

    public SettlementStatusSummary getSettlementStatusSummary(String id) throws Exception {
        return (SettlementStatusSummary) com.lombardrisk.util.Biz.filterListById(this.getSettlementStatusSummary(), id);
    }

    public SettlementStatusSearch getSettlementStatusSearch(String id) throws Exception {
        return (SettlementStatusSearch) com.lombardrisk.util.Biz.filterListById(this.getSettlementStatusSearch(), id);
    }

    public EligibilityRulesTemplateSearchResult getApprovalManagerEligibilityRulesTemplateSearchResult(String id) throws Exception {
        return (EligibilityRulesTemplateSearchResult) com.lombardrisk.util.Biz.filterListById(this.getApprovalManagerEligibilityRulesTemplateSearchResult(), id);
    }

    public SecuritySearchResult getApprovalManagerSecuritiesDataSearchResult(String id) throws Exception {
        return (SecuritySearchResult) com.lombardrisk.util.Biz.filterListById(this.getApprovalManagerSecuritiesDataSearchResult(), id);
    }

    public AgreementSearchResult getApprovalManagerAgreementSearchResult(String id) throws Exception {
        return (AgreementSearchResult) com.lombardrisk.util.Biz.filterListById(this.getApprovalManagerAgreementSearchResult(), id);
    }

    public CollateralAssetHoldingSummary getCollateralAssetHoldingSummary(String id) throws Exception {
            return (CollateralAssetHoldingSummary) com.lombardrisk.util.Biz.filterListById(this.getCollateralAssetHoldingSummary(), id);
        }

    public OrganisationSearchResult getApprovalManagerOrganisationSearchResult(String id) throws Exception {
        return (OrganisationSearchResult) com.lombardrisk.util.Biz.filterListById(this.getApprovalManagerOrganisationSearchResult(), id);
    }

    public SecuritySearch getApprovalManagerSecuritiesDataSearch(String id) throws Exception {
        return (SecuritySearch) com.lombardrisk.util.Biz.filterListById(this.getApprovalManagerSecuritiesDataSearch(), id);
    }

    public AgreementSearch getApprovalManagerAgreementSearch(String id) throws Exception {
        return (AgreementSearch) com.lombardrisk.util.Biz.filterListById(this.getApprovalManagerAgreementSearch(), id);
    }

    public SettlementInstructionsSearchResult getApprovalManagerSettlementInstructionsSearchResult(String id) throws Exception {
        return (SettlementInstructionsSearchResult) com.lombardrisk.util.Biz.filterListById(this.getApprovalManagerSettlementInstructionsSearchResult(), id);
    }

    public WorkflowSearchResult getApprovalManagerWorkflowSearchResult(String id) throws Exception {
        return (WorkflowSearchResult) com.lombardrisk.util.Biz.filterListById(this.getApprovalManagerWorkflowSearchResult(), id);
    }

    public AgreementSearch getApprovalManagerWorkflowSearch(String id) throws Exception {
            return (AgreementSearch) com.lombardrisk.util.Biz.filterListById(this.getApprovalManagerWorkflowSearch(), id);
        }

    public SettlementInstructionsSearch getApprovalManagerSettlementInstructions(String id) throws Exception {
        return (SettlementInstructionsSearch) com.lombardrisk.util.Biz.filterListById(this.getApprovalManagerSettlementInstructions(), id);
    }

    public InternalReviewSummary getInternalReviewSummary(String id) throws Exception {
        return (InternalReviewSummary) com.lombardrisk.util.Biz.filterListById(this.getInternalReviewSummary(), id);
    }

    public InternalReviewSearch getInternalReviewSearch(String id) throws Exception {
        return (InternalReviewSearch) com.lombardrisk.util.Biz.filterListById(this.getInternalReviewSearch(), id);
    }

    public SecurityMovementSummary getSecurityMovementSummary(String id) throws Exception {
        return (SecurityMovementSummary) com.lombardrisk.util.Biz.filterListById(this.getSecurityMovementSummary(), id);
    }

    public SecurityMovementSearch getSecurityMovementSearch(String id) throws Exception {
        return (SecurityMovementSearch) com.lombardrisk.util.Biz.filterListById(this.getSecurityMovementSearch(), id);
    }

    public SettlementStatusDetail getSettlementStatusDetail(String id) throws Exception {
        return (SettlementStatusDetail) com.lombardrisk.util.Biz.filterListById(this.getSettlementStatusDetail(), id);
    }

    public EligibilityRulesTemplateSimpleSearch getApprovalManagerEligibilityRulesTemplateSearch(String id) throws Exception {
        return (EligibilityRulesTemplateSimpleSearch) com.lombardrisk.util.Biz.filterListById(this.getApprovalManagerEligibilityRulesTemplateSearch(), id);
    }

    public EligibilityRulesTemplateSearch getEligibilityRulesTemplateSearch(String id) throws Exception {
        return (EligibilityRulesTemplateSearch) com.lombardrisk.util.Biz.filterListById(this.getEligibilityRulesTemplateSearch(), id);
    }

    public EligibilityRulesTemplateSearchResult getEligibilityRulesTemplateSearchResult(String id) throws Exception {
        return (EligibilityRulesTemplateSearchResult) com.lombardrisk.util.Biz.filterListById(this.getEligibilityRulesTemplateSearchResult(), id);
    }

    public StartupDashboard getStartupDashboard(String id) throws Exception {
        return (StartupDashboard) com.lombardrisk.util.Biz.filterListById(this.getStartupDashboard(), id);
    }

    public SecuritySearchResult getSecuritySearchResult(String id) throws Exception {
        return (SecuritySearchResult) com.lombardrisk.util.Biz.filterListById(this.getSecuritySearchResult(), id);
    }

    public FeedRepoSettlement getFeedRepoSettlement(String id) throws Exception{
        return (FeedRepoSettlement) com.lombardrisk.util.Biz.filterListById(this.getFeedRepoSettlement(), id);
    }

    public FeedSettlementInstruction getFeedSettlementInstruction(String id) throws Exception{
        return (FeedSettlementInstruction) com.lombardrisk.util.Biz.filterListById(this.getFeedSettlementInstruction(), id);
    }

    public FeedPortfolioTSA getFeedPortfolioTSA(String id) throws Exception{
        return (FeedPortfolioTSA) com.lombardrisk.util.Biz.filterListById(this.getFeedPortfolioTSA(), id);
    }

    public FeedNAV getFeedNAV(String id) throws Exception {
        return (FeedNAV) com.lombardrisk.util.Biz.filterListById(this.getFeedNAV(), id);
    }

    public FeedFxRate getFeedFxRate(String id) throws Exception {
        return (FeedFxRate) com.lombardrisk.util.Biz.filterListById(this.getFeedFxRate(), id);
    }

    public FeedStaticData getFeedStaticData(String id) throws Exception{
        return (FeedStaticData) com.lombardrisk.util.Biz.filterListById(this.getFeedStaticData(), id);
    }

    public FeedEtdBalances getFeedEtdBalances(String id) throws Exception{
        return (FeedEtdBalances) com.lombardrisk.util.Biz.filterListById(this.getFeedEtdBalances(), id);
    }

    public FeedEtdAdjustment getFeedEtdAdjustment(String id) throws Exception{
        return (FeedEtdAdjustment) com.lombardrisk.util.Biz.filterListById(this.getFeedEtdAdjustment(), id);
    }

    public FeedWeekend getFeedWeekend(String id) throws Exception{
        return (FeedWeekend) com.lombardrisk.util.Biz.filterListById(this.getFeedWeekend(), id);
    }

    public FeedHolidayCentre getFeedHolidayCentre(String id) throws Exception {
        return (FeedHolidayCentre) com.lombardrisk.util.Biz.filterListById(this.getFeedHolidayCentre(), id);
    }

    public InterestReportDetails getInterestReportDetails(String id) throws Exception{
            return (InterestReportDetails) com.lombardrisk.util.Biz.filterListById(this.getInterestReportDetails(), id);
    }

    public TaskSchedulerMessage getTaskSchedulerMessage(String id) throws Exception{
        return (TaskSchedulerMessage) com.lombardrisk.util.Biz.filterListById(this.getTaskSchedulerMessage(), id);
    }

    public SecurityMovementDetail getSecurityMovementDetail(String id) throws Exception {
        return (SecurityMovementDetail) com.lombardrisk.util.Biz.filterListById(this.getSecurityMovementDetail(), id);
    }

    public Privileges getPrivileges(String id) throws Exception {
        return (Privileges) com.lombardrisk.util.Biz.filterListById(this.getPrivileges(), id);
     }

    public OptimisationRule getOptimisationRule(String id) throws Exception {
        return (OptimisationRule) com.lombardrisk.util.Biz.filterListById(this.getOptimisationRule(), id);
    }
    public ExposureStatement getExposureStatement(String id) throws Exception {
        return (ExposureStatement) com.lombardrisk.util.Biz.filterListById(this.getExposureStatement(), id);
    }

    public SettlementDataSearchResult getSettlementDataSearchResult(String id) throws Exception {
            return (SettlementDataSearchResult) com.lombardrisk.util.Biz.filterListById(this.getSettlementDataSearchResult(), id);
        }

    public OptimisationRuleDetail getOptimisationRuleDetail(String id) throws Exception {
            return (OptimisationRuleDetail) com.lombardrisk.util.Biz.filterListById(this.getOptimisationRuleDetail(), id);
        }

    public DatabaseQuery getDatabaseQuery(String id) throws Exception {
            return (DatabaseQuery) com.lombardrisk.util.Biz.filterListById(this.getDatabaseQuery(), id);
        }

    public OptimisationResultDetail getOptimisationResultDetail(String id) throws Exception {
            return (OptimisationResultDetail) com.lombardrisk.util.Biz.filterListById(this.getOptimisationResultDetail(), id);
        }

    public OptimisationResultDetail getOptimisationResultSearch(String id) throws Exception {
            return (OptimisationResultDetail) com.lombardrisk.util.Biz.filterListById(this.getOptimisationResultDetail(), id);
        }

    public DatabaseQueryResult getDatabaseQueryResult(String id) throws Exception {
            return (DatabaseQueryResult) com.lombardrisk.util.Biz.filterListById(this.getDatabaseQueryResult(), id);
        }
    public StatementCalcRule getStatementCalcRule(String id) throws Exception {
            return (StatementCalcRule) com.lombardrisk.util.Biz.filterListById(this.getStatementCalcRule(), id);
        }
            </ci:code>
        </jaxb:bindings>
        <jaxb:bindings node="//xs:complexType[@name='eligibilityRulesTemplate']">
            <ci:code>
                public CollateralAssetClass getCollateralAssetClass(String name) throws Exception {
                    return (CollateralAssetClass) com.lombardrisk.util.Biz.filterListByName(this.getCollateralAssetClass(), name);
                }
			</ci:code>
		</jaxb:bindings>
		<jaxb:bindings node="//xs:complexType[@name='databaseQueryResultRow']">
                    <ci:code>
    public java.util.Map&lt;String, String&gt; convertDatabaseQueryResultRowToMap() {
        java.util.Map&lt;String, String&gt; map = new java.util.HashMap&lt;String, String&gt;();
        if (this.getDatabaseQueryResultCell() != null &amp;&amp; !this.getDatabaseQueryResultCell().isEmpty()) {
            for (DatabaseQueryResultCell databaseQueryResultCell : this.getDatabaseQueryResultCell()){
                map.put(databaseQueryResultCell.getDatabaseQueryResultColumnName().getRealValue(), databaseQueryResultCell.getDatabaseQueryResultColumnValue().getRealValue());
            }
        }
        return map;
    }
        			</ci:code>
        		</jaxb:bindings>
		<jaxb:bindings node="//xs:complexType[@name='agreement']">
            <ci:code>
    /**
    *  Convert Agreement to AgreementSearch
    *
    *  @return
    *      possible object is
    *      {@link AgreementSearch }
    *
    */
    public AgreementSearch toAgreementSearch(){
        AgreementSearch agreementSearch = new AgreementSearch();
        AdvancedSearch advancedSearch = new AdvancedSearch();
        if(getAgreementId() != null)
            getAgreementId().getRealValue();
            agreementSearch.setSystemId(getAgreementId());
        if(getPrincipal() != null) {
            if(getPrincipal().getRole() != null)
                getPrincipal().getRole().getRealValue();
            if(getPrincipal().getLinkage() != null)
                getPrincipal().getLinkage().getRealValue();
            if(getPrincipal().getFilter() != null)
                getPrincipal().getFilter().getRealValue();
            if(getPrincipal().getLinkText() != null)
                getPrincipal().getLinkText().getRealValue();
            agreementSearch.setPrincipal(getPrincipal());
        }
        if(getCounterparty() != null) {
            if(getCounterparty().getRole() != null)
                getCounterparty().getRole().getRealValue();
            if(getCounterparty().getLinkage() != null)
                getCounterparty().getLinkage().getRealValue();
            if(getCounterparty().getFilter() != null)
                getCounterparty().getFilter().getRealValue();
            if(getCounterparty().getLinkText() != null)
                getCounterparty().getLinkText().getRealValue();
            agreementSearch.setCounterparty(getCounterparty());
        }
        if(getRegion() != null) {
            getRegion().getRealValue();
            agreementSearch.getRegion().add(getRegion());
        }
        if(getGroup() != null) {
            getGroup().getRealValue();
            agreementSearch.getGroup().add(getGroup());
        }
        agreementSearch.setDocumentation(new StringType(getMasterDocumentation()));
        if(getAgreementDescription() != null) {
            getAgreementDescription().getRealValue();
            SimpleSearch simpleSearch = new SimpleSearch();
            simpleSearch.setFilter(getAgreementDescription());
            simpleSearch.setLinkText(getAgreementDescription());
            agreementSearch.setDescription(simpleSearch);
        }

        if(getExternalId() != null) {
            getExternalId().getRealValue();
            SimpleSearch simpleSearch = new SimpleSearch();
            simpleSearch.setFilter(getExternalId());
            simpleSearch.setLinkText(getExternalId());
            agreementSearch.setExternalId(simpleSearch);
        }

        if(getAgreementStatus() != null &amp;&amp; !getAgreementStatus().isEmpty())
            agreementSearch.getStatus().add(getAgreementStatus().get(getAgreementStatus().size() - 1));
        agreementSearch.getUmbrellaRuleName().add(getUmbrellaRule());
        agreementSearch.getTsaRule().add(getTsaRule());
        agreementSearch.getCollateralEligibilityRule().add(getEligibilityRulesTemplate());
        agreementSearch.setIncludeSubAgreement(isUmbrellaAgreement());
        AdditionalFieldSimpleSearch additionalFieldSimpleSearch = new AdditionalFieldSimpleSearch();

        for (Field field : getAdditionalField()) {
            additionalFieldSimpleSearch.setUdfName(field.getFieldName());
            additionalFieldSimpleSearch.setFilter(field.getValue());
            agreementSearch.getAdditionalField().add(additionalFieldSimpleSearch);
            additionalFieldSimpleSearch.setType(null);
        }

        if(getCcp() != null) {
            getCcp().getRealValue();
            SimpleSearch simpleSearch = new SimpleSearch();
            simpleSearch.setFilter(getCcp());
            simpleSearch.setLinkText(getCcp());
            advancedSearch.getCcp().add(simpleSearch);
        }

        for (StringType stringType : getLinkageSet()) {
            SimpleSearch simpleSearch = new SimpleSearch();
            simpleSearch.setFilter(stringType);
            simpleSearch.setLinkText(stringType);
            advancedSearch.getLinkageSet().add(simpleSearch);
        }

        if(getBusinessLine() != null)
            advancedSearch.getBusinessLine().add(new StringType(getBusinessLine().value()));

        agreementSearch.setAdvancedSearch(advancedSearch);

        return agreementSearch;
    }

    /**
     *  Convert Agreement to AgreementSearchResult
     *
     *  @return
     *      possible object is
     *      {@link AgreementSearchResult }
     *
     */
    public AgreementSearchResult toAgreementSearchResult(){
        AgreementSearchResult agreementSearchResult = new AgreementSearchResult();
        if(getPrincipal() != null &amp;&amp; getPrincipal().getLinkText() != null)
            agreementSearchResult.setPrincipal(getPrincipal().getLinkText());
        if(getCounterparty() != null &amp;&amp; getCounterparty().getLinkText() != null){
            agreementSearchResult.setCounterparty(getCounterparty().getLinkText());
            if(getCounterparty().getType() == SearchType.CODE) {
                agreementSearchResult.setCptyId(getCounterparty().getLinkText());
            }
        }
        agreementSearchResult.setCreditSupportDocumentation(new StringType(getCreditSupportDocumentation()));
        agreementSearchResult.setDescription(getAgreementDescription());
        if(getBusinessLine()!=null &amp;&amp; getBusinessLine().value() != null)
            agreementSearchResult.setBusinessLine(new StringType(getBusinessLine().value()));
        if(getAgreementStatus() != null &amp;&amp; !getAgreementStatus().isEmpty())
            agreementSearchResult.setStatus(new StringType(getAgreementStatus().get(getAgreementStatus().size() - 1).value()));
        agreementSearchResult.setRegion(getRegion());
        agreementSearchResult.setAgreementId(getAgreementId());
        agreementSearchResult.setExternalId(getExternalId());
//        agreementSearchResult.setRequiremenInAgreementBaseCcy(getBaseCurrency());
        agreementSearchResult.setSignoffDate(getSignoffDate());
        agreementSearchResult.setSignoffBy(getSignoffBy());

        return agreementSearchResult;
    }

    /**
     * Convert Agreement to FeedAgreement
     *
     * @return possible object is
     * {@link FeedAgreement }
     */
    public FeedAgreement toFeedAgreement() {
        FeedAgreement feedAgreement = new FeedAgreement();
        if (getLinkageSet() != null &amp;&amp; !getLinkageSet().isEmpty()) {
            StringBuffer stringBuffer = new StringBuffer();
            java.util.Iterator&lt;StringType&gt; iterator = getLinkageSet().iterator();
            while (iterator.hasNext()) {
                StringType stringType = (StringType) iterator.next();
                stringBuffer.append(stringType.getRealValue());
                if (iterator.hasNext())
                    stringBuffer.append(",");
            }
            feedAgreement.setLinkageSet(new StringType(stringBuffer.toString()));
        }
        if (getPrincipal() != null &amp;&amp; getPrincipal().getLinkText() != null)
            feedAgreement.setPrincipal(new StringType(getPrincipal().getLinkText().getRealValue()));
        if (getPrincipalRole() != null)
            feedAgreement.setPrincipalRole(getPrincipalRole());
        if (getCounterparty() != null &amp;&amp; getCounterparty().getLinkText() != null)
            feedAgreement.setCounterpartycode(new StringType(getCounterparty().getLinkText().getRealValue()));
        if (getCustodian() != null &amp;&amp; getCustodian().getLinkText() != null)
            feedAgreement.setCustodian(new StringType(getCustodian().getLinkText().getRealValue()));
        if (getBusinessLine() != null)
            feedAgreement.setBusinessLine(new StringType(getBusinessLine().value()));
        if (Boolean.TRUE.equals(isFamilyAgreement()))
            feedAgreement.setFamilyAgreement(true);
        else
            feedAgreement.setFamilyAgreement(false);
        if (Boolean.TRUE.equals(isMultiModel()))
            feedAgreement.setMultiModel(true);
//        if (Boolean.TRUE.equals(isConfigurableRule()))
//            protected Boolean configurableRule;
        if (getCcp() != null)
            feedAgreement.setCCP(new StringType(getCcp().getRealValue()));
        if (Boolean.TRUE.equals(isRegulatoryAgreement()))
            feedAgreement.setRegulatoryAgreement(true);
        else
            feedAgreement.setRegulatoryAgreement(false);
        if (getAgreedJurisdiction() != null &amp;&amp; getAgreedJurisdiction().getLinkText() != null)
            feedAgreement.setAgreedJurisdiction(new StringType(getAgreedJurisdiction().getLinkText().getRealValue()));
        if (getOtherJurisdiction() != null &amp;&amp; !getOtherJurisdiction().isEmpty()) {
            StringBuffer stringBuffer = new StringBuffer();
            java.util.Iterator&lt;SimpleSearch&gt; iterator = getOtherJurisdiction().iterator();
            while (iterator.hasNext()) {
                SimpleSearch simpleSearch = (SimpleSearch) iterator.next();
                if (simpleSearch.getLinkText() != null)
                    stringBuffer.append(simpleSearch.getLinkText().getRealValue());
                if (iterator.hasNext())
                    stringBuffer.append(",");
            }
            feedAgreement.setOtherJurisdiction(new StringType(stringBuffer.toString()));
        }
        if (Boolean.TRUE.equals(isUmbrellaAgreement()))
            feedAgreement.setUmbrellaAgreement(true);
        else
            feedAgreement.setUmbrellaAgreement(false);
//        if (getUmbrellaRule() != null)
//            protected StringType umbrellaRule;
        if (getIndividualOrders() != null &amp;&amp; !getIndividualOrders().isEmpty()) {
            StringBuffer stringBuffer = new StringBuffer();
            java.util.Iterator&lt;StringType&gt; iterator = getIndividualOrders().iterator();
            while (iterator.hasNext()) {
                StringType stringType = (StringType) iterator.next();
                stringBuffer.append(stringType.getRealValue());
                if (iterator.hasNext())
                    stringBuffer.append(",");
            }
            feedAgreement.setIndividualOrders(new StringType(stringBuffer.toString()));
        }
        if (getAgreementDescription() != null)
            feedAgreement.setAgreementDescription(new StringType(getAgreementDescription().getRealValue()));
        if (getComment() != null)
            feedAgreement.setComment(new StringType(getComment().getRealValue()));
        if (getGroup() != null)
            feedAgreement.setGroup(new StringType(getGroup().getRealValue()));
        if (getCounterpartyOrgRegion() != null)
            feedAgreement.setCptyOrgRegion(new StringType(getCounterpartyOrgRegion().getRealValue()));
        if (getRegion() != null)
            feedAgreement.setRegion(new StringType(getRegion().getRealValue()));
        if (getCategory() != null)
            feedAgreement.setCategory(new StringType(getCategory().getRealValue()));
        if (getCollateralManager() != null)
            feedAgreement.setColManager(new StringType(getCollateralManager().getRealValue()));
        if (getNotes() != null)
            feedAgreement.setNotes(new StringType(getNotes().getRealValue()));
        if (getAgreementName() != null)
            feedAgreement.setAgreementName(new StringType(getAgreementName().getRealValue()));
        if (getExternalId() != null)
            feedAgreement.setLegalId(new StringType(getExternalId().getRealValue()));
        if (getRank() != null)
            feedAgreement.setRank(new StringType(getRank().getRealValue()));
        if (getPrincipalInformation() != null) {
            PartyBranchInformation partyBranchInformation = getPrincipalInformation();
            if (partyBranchInformation.getPrimaryContact() != null)
                feedAgreement.setPrincipalContact(
                        new StringType(partyBranchInformation.getPrimaryContact().getRealValue()));
//            if (partyBranchInformation.getCcEmailContact() != null &amp;&amp; !partyBranchInformation.getCcEmailContact().isEmpty())
//                protected List&lt;StringType&gt; ccEmailContact;
            if (partyBranchInformation.getInterestContact() != null)
                feedAgreement.setPrincipalinterestcontact(
                        new StringType(partyBranchInformation.getInterestContact().getRealValue()));
//            if (partyBranchInformation.getInterestCcEmailContact() != null)
//                protected List&lt;StringType&gt; interestCcEmailContact;
            if (partyBranchInformation.getPartyBranch() != null &amp;&amp; !partyBranchInformation.getPartyBranch().isEmpty()) {
                FeedAgreement.PrincipalBranches branches = new FeedAgreement.PrincipalBranches();
                for (StringType stringType : partyBranchInformation.getPartyBranch()) {
                    branches.getBranch().add(new StringType(stringType.getRealValue()));
                }
            }
            if (partyBranchInformation.getPartyNav() != null)
                feedAgreement.setPrincipalNAV(new StringType(partyBranchInformation.getPartyNav().getRealValue()));
            if (partyBranchInformation.getPartyNavCurrency() != null)
                feedAgreement.setPrincipalCCy(
                        new StringType(partyBranchInformation.getPartyNavCurrency().getRealValue()));
            if (Boolean.TRUE.equals(partyBranchInformation.isValuationAgent()))
                feedAgreement.setValuationAgent(new StringType("P"));
//            if (Boolean.TRUE.equals(partyBranchInformation.isAllPartyBranches()))
//                protected Boolean allPartyBranches;
        }
        if (getCounterpartyInformation() != null) {
            PartyBranchInformation partyBranchInformation = getCounterpartyInformation();
            if (partyBranchInformation.getPrimaryContact() != null)
                feedAgreement.setPrincipalContact(
                        new StringType(partyBranchInformation.getPrimaryContact().getRealValue()));
//            if (partyBranchInformation.getCcEmailContact() != null &amp;&amp; !partyBranchInformation.getCcEmailContact().isEmpty())
//                protected List&lt;StringType&gt; ccEmailContact;
            if (partyBranchInformation.getInterestContact() != null)
                feedAgreement.setPrincipalinterestcontact(
                        new StringType(partyBranchInformation.getInterestContact().getRealValue()));
//            if (partyBranchInformation.getInterestCcEmailContact() != null)
//                protected List&lt;StringType&gt; interestCcEmailContact;
            if (partyBranchInformation.getPartyBranch() != null &amp;&amp; !partyBranchInformation.getPartyBranch().isEmpty()) {
                FeedAgreement.PrincipalBranches branches = new FeedAgreement.PrincipalBranches();
                for (StringType stringType : partyBranchInformation.getPartyBranch()) {
                    branches.getBranch().add(new StringType(stringType.getRealValue()));
                }
            }
            if (partyBranchInformation.getPartyNav() != null)
                feedAgreement.setPrincipalNAV(new StringType(partyBranchInformation.getPartyNav().getRealValue()));
            if (partyBranchInformation.getPartyNavCurrency() != null)
                feedAgreement.setPrincipalCCy(
                        new StringType(partyBranchInformation.getPartyNavCurrency().getRealValue()));
            if (Boolean.TRUE.equals(partyBranchInformation.isValuationAgent()))
                feedAgreement.setValuationAgent(new StringType("P"));
//            if (Boolean.TRUE.equals(partyBranchInformation.isAllPartyBranches()))
//                protected Boolean allPartyBranches;
        }
        if (getMasterDocumentation() != null)
            feedAgreement.setMasterDocumentation(new StringType(getMasterDocumentation()));
        if (getCreationDate() != null)
            feedAgreement.setCreateDate(new StringType(getCreationDate().getRealValue()));
        if (getCreditSupportDocumentation() != null)
            feedAgreement.setCreditSupportDocumentation(new StringType(getCreditSupportDocumentation()));
        if (getSignoffDate() != null)
            feedAgreement.setSignOffDate(new StringType(getSignoffDate().getRealValue()));
        if (getReciprocity() != null)
            feedAgreement.setReciprocity(new StringType(getReciprocity().value()));
        if (getSignoffBy() != null)
            feedAgreement.setSignOffBy(new StringType(getSignoffBy().getRealValue()));
        if (getAnnex() != null &amp;&amp; !getAnnex().isEmpty()) {
            StringBuffer stringBuffer = new StringBuffer();
            java.util.Iterator&lt;StringType&gt; iterator = getAnnex().iterator();
            while (iterator.hasNext()) {
                StringType stringType = (StringType) iterator.next();
                stringBuffer.append(stringType.getRealValue());
                if (iterator.hasNext())
                    stringBuffer.append(",");
            }
            feedAgreement.setAnnexes(new StringType(stringBuffer.toString()));
        }
        if (getBaseCurrency() != null)
            feedAgreement.setBaseCurrency(new StringType(getBaseCurrency().getRealValue()));
        if (getAgreementDate() != null)
            feedAgreement.setOriginalDate(new StringType(getAgreementDate().getRealValue()));
        if (getPrincipalTransferCurrency() != null)
            feedAgreement.setPrcTransferCcy(new StringType(getPrincipalTransferCurrency().getRealValue()));
        if (getCounterpartyTransferCurrency() != null)
            feedAgreement.setCptyTransferCcy(new StringType(getCounterpartyTransferCurrency().getRealValue()));
        if (getPrincipalTerminationCurrency() != null)
            feedAgreement.setPrcTerminationCcy(new StringType(getPrincipalTerminationCurrency().getRealValue()));
        if (getCounterpartyTerminationCurrency() != null)
            feedAgreement.setCptyTerminationCcy(new StringType(getCounterpartyTerminationCurrency().getRealValue()));
        if (getType() != null)
            feedAgreement.setColType(new StringType(getType().getRealValue()));
        if (getReviewDate() != null)
            feedAgreement.setReviewDate(new StringType(getReviewDate().getRealValue()));
        if (Boolean.TRUE.equals(isRehypothecationRights()) || Boolean.TRUE.equals(isVmRehypothecationRights())) {
            feedAgreement.setRehypothecationFlag(new StringType(Boolean.TRUE.toString()));
            if (getRehypothecation() != null)
                feedAgreement.setRehypothecation(new StringType(getRehypothecation().value()));
            else if (getVmRehypothecation() != null)
                feedAgreement.setRehypothecation(new StringType(getVmRehypothecation().value()));
        } else {
            feedAgreement.setRehypothecationFlag(new StringType(Boolean.FALSE.toString()));
        }
        if (Boolean.FALSE.equals(isImRehypothecationRights())) {
            feedAgreement.setImRehypothecationFlag(new StringType(Boolean.TRUE.toString()));
            if (getImRehypothecation() != null)
                feedAgreement.setImRehypothecation(new StringType(getImRehypothecation().value()));
        } else {
            feedAgreement.setImRehypothecationFlag(new StringType(Boolean.FALSE.toString()));
        }
        if (getCreditContingentReuseRights() != null)
            feedAgreement.setCreditContReuseRights(new StringType(getCreditContingentReuseRights().getRealValue()));
        if (getSignoffNotes() != null)
            feedAgreement.setSignOffNotes(new StringType(getSignoffNotes().getRealValue()));
        if (getValuationDate() != null)
            feedAgreement.setValuationDate(new StringType(getValuationDate().getRealValue()));
        if (Boolean.TRUE.equals(isTsa()) || Boolean.TRUE.equals(isCashflow())) {
            feedAgreement.setTSA(new StringType(Boolean.TRUE.toString()));
            if (getTsaRule() != null) {
                feedAgreement.setTSARule(new StringType(getTsaRule().getRealValue()));
            } else if (getCashflowRule() != null) {
                feedAgreement.setTSARule(new StringType(getCashflowRule().getRealValue()));
            }
            if (getTsaLevel() != null || getCashflowLevel() != null) {
                TsaLevelType tsaLevelType = getTsaLevel() != null? getTsaLevel() : getCashflowLevel();
                feedAgreement.setTsaLevel(new StringType(tsaLevelType.value()));
            }
        } else {
            feedAgreement.setTSA(new StringType(Boolean.FALSE.toString()));
        }
        if (getGrossCalc() != null || getVmGrossCalc() != null) {
            InterestCalcType interestCalcType = getGrossCalc() != null ? getGrossCalc() : getVmGrossCalc();
            feedAgreement.setNettingCalc(new StringType(interestCalcType.value()));
        }
        if (getImGrossCalc() != null)
            feedAgreement.setImNettingCalc(new StringType(getImGrossCalc().value()));
        if (Boolean.TRUE.equals(isNetVMIMEventsInSameDirection())) {
            feedAgreement.setNetVmImEventInSameDirection(true);
        } else {
            feedAgreement.setNetVmImEventInSameDirection(false);
        }
        if (Boolean.TRUE.equals(isNetVMIMInterest())) {
            feedAgreement.setNetVmImInterest(true);
        } else {
            feedAgreement.setNetVmImInterest(false);
        }
        if (getNettingIAandMtM() != null)
            feedAgreement.setNettingMTMAndIA(new StringType(getNettingIAandMtM().value()));
        if (getDefaultFund() != null)
            feedAgreement.setDefaultFund(new StringType(getDefaultFund()));
        if (Boolean.TRUE.equals(isSegregation())) {
            feedAgreement.setSegregation(true);
            if (getPrincipalSeg() != null || getPrincipalVMSeg() != null) {
                SegregationType segregationType = getPrincipalSeg() != null ? getPrincipalSeg() : getPrincipalVMSeg();
                feedAgreement.setPrinSegType(new StringType(segregationType.value()));
            }
            if (getCounterpartySeg() != null || getCounterpartyVMSeg() != null) {
                SegregationType segregationType = getCounterpartySeg() != null ? getCounterpartySeg() : getCounterpartyVMSeg();
                feedAgreement.setCptySegType(new StringType(segregationType.value()));
            }
            if (getPrincipalIMSeg() != null)
                feedAgreement.setPrinIMSegType(new StringType(getPrincipalIMSeg().value()));
            if (getCounterpartyIMSeg() != null)
                feedAgreement.setCptyIMSegType(new StringType(getCounterpartyIMSeg().value()));
            if (getSegregationPrincipalCustodianName() != null || getVmSegregationPrincipalCustodianName() != null) {
                OrganisationSearch organisationSearch = getSegregationPrincipalCustodianName() != null ? getSegregationPrincipalCustodianName() : getVmSegregationPrincipalCustodianName();
                if (organisationSearch.getLinkText() != null)
                    feedAgreement.setPrinCustodianName(new StringType(organisationSearch.getLinkText().getRealValue()));
            }
            if (getSegregationCounterpartyCustodianName() != null || getVmSegregationCounterpartyCustodianName() != null) {
                OrganisationSearch organisationSearch = getSegregationCounterpartyCustodianName() != null ? getSegregationCounterpartyCustodianName() : getVmSegregationCounterpartyCustodianName();
                if (organisationSearch.getLinkText() != null)
                    feedAgreement.setCptyCustodianName(new StringType(organisationSearch.getLinkText().getRealValue()));
            }
            if (getImSegregationPrincipalCustodianName() != null &amp;&amp; getImSegregationPrincipalCustodianName().getLinkText() != null)
                feedAgreement.setIMPrinCustodianName(
                        new StringType(getImSegregationPrincipalCustodianName().getLinkText().getRealValue()));
            if (getImSegregationCounterpartyCustodianName() != null &amp;&amp; getImSegregationCounterpartyCustodianName().getLinkText() != null)
                feedAgreement.setIMCptyCustodianName(
                        new StringType(getImSegregationCounterpartyCustodianName().getLinkText().getRealValue()));
        } else {
            feedAgreement.setSegregation(false);
        }
        if (Boolean.TRUE.equals(isFlush())) {
            feedAgreement.setFlush(new StringType(Boolean.TRUE.toString()));
            if (getFlushType() != null)
                feedAgreement.setFlushType(new StringType(getFlushType().value()));
        } else {
            feedAgreement.setFlush(new StringType(Boolean.FALSE.toString()));
        }
        if (getInterestCalc() != null)
            feedAgreement.setNettingInterest(new StringType(getInterestCalc().value()));
        if (getFxRate() != null)
            feedAgreement.setFxRateRule(new StringType(getFxRate().getRealValue()));
        if (getPriceSource() != null)
            feedAgreement.setPriceSource(new StringType(getPriceSource().getRealValue()));
        if (getInterestLetter() != null)
            feedAgreement.setInterestLetter(new StringType(getInterestLetter().getRealValue()));
        if (getEventAggregation() != null)
            feedAgreement.setEventAggregation(new StringType(getEventAggregation().getRealValue()));
        if (getMarginType() != null)
            feedAgreement.setMarginType(new StringType(getMarginType()));
        if (getStatementCalc() != null)
            feedAgreement.setStatementCalc(new StringType(getStatementCalc()));
//        if (getUserDefinedStatementCalc() != null)
//            protected StringType userDefinedStatementCalc;
        if (Boolean.TRUE.equals(isAllowAdj()))
            feedAgreement.setAllowAdjustments(true);
        else
            feedAgreement.setAllowAdjustments(false);
        if (getClientType() != null)
            feedAgreement.setClientType(new StringType(getClientType()));
        FeedAgreement.SendConfirmationLetter sendConfirmationLetter = new FeedAgreement.SendConfirmationLetter();
        sendConfirmationLetter.setCounterparty(Boolean.TRUE.equals(isSendConfirmationLetterToCounterparty()));
        sendConfirmationLetter.setCustodian(Boolean.TRUE.equals(isSendConfirmationLetterToCustodian()));
        if (getCustodianInformation() != null) {
            PartyBranchInformation partyBranchInformation = getCustodianInformation();
            if (partyBranchInformation.getPrimaryContact() != null)
                sendConfirmationLetter.setCustodianContact(
                        new StringType(partyBranchInformation.getPrimaryContact().getRealValue()));
        }
        feedAgreement.setSendConfirmationLetter(sendConfirmationLetter);
        if (getCallFrequency() != null || getVmCallFrequency() != null) {
            CallFrequency callFrequency = getCallFrequency() != null ? getCallFrequency() : getVmCallFrequency();
            if (callFrequency.getLegalReviewFrequency() != null)
                feedAgreement.setFrequency(new StringType(callFrequency.getLegalReviewFrequency().value()));
            if (callFrequency.getAdjustType() != null)
                feedAgreement.setNonWorkingdayAdjusttype(new StringType(callFrequency.getAdjustType().value()));
            if (callFrequency.getFrequencyStart() != null)
                feedAgreement.setFrequencyStart(new StringType(callFrequency.getFrequencyStart().getRealValue()));
            if (callFrequency.getNotificationTime() != null &amp;&amp; !callFrequency.getNotificationTime().isEmpty()) {
                StringBuffer stringBuffer = new StringBuffer();
                java.util.Iterator&lt;StringType&gt; iterator = callFrequency.getNotificationTime().iterator();
                while (iterator.hasNext()) {
                    StringType stringType = (StringType) iterator.next();
                    stringBuffer.append(stringType.getRealValue());
                    if (iterator.hasNext())
                        stringBuffer.append(",");
                }
                feedAgreement.setNotificationTime(new StringType(stringBuffer.toString()));
            }
            if (callFrequency.getResolutionTime() != null)
                feedAgreement.setResolutionTime(new StringType(callFrequency.getResolutionTime().getRealValue()));
            if (callFrequency.getResolutionTimeType() != null)
                feedAgreement.setResolutionDay(new StringType(callFrequency.getResolutionTimeType().getRealValue()));
        }
        if (getImCallFrequency() != null) {
            CallFrequency callFrequency = getImCallFrequency();
            if (callFrequency.getLegalReviewFrequency() != null)
                feedAgreement.setImFrequency(new StringType(callFrequency.getLegalReviewFrequency().value()));
            if (callFrequency.getAdjustType() != null)
                feedAgreement.setImNonWorkingdayAdjusttype(new StringType(callFrequency.getAdjustType().value()));
            if (callFrequency.getFrequencyStart() != null)
                feedAgreement.setImFrequencyStart(new StringType(callFrequency.getFrequencyStart().getRealValue()));
            if (callFrequency.getNotificationTime() != null &amp;&amp; !callFrequency.getNotificationTime().isEmpty()) {
                StringBuffer stringBuffer = new StringBuffer();
                java.util.Iterator&lt;StringType&gt; iterator = callFrequency.getNotificationTime().iterator();
                while (iterator.hasNext()) {
                    StringType stringType = (StringType) iterator.next();
                    stringBuffer.append(stringType.getRealValue());
                    if (iterator.hasNext())
                        stringBuffer.append(",");
                }
                feedAgreement.setImNotificationTime(new StringType(stringBuffer.toString()));
            }
            if (callFrequency.getResolutionTime() != null)
                feedAgreement.setImResolutionTime(new StringType(callFrequency.getResolutionTime().getRealValue()));
            if (callFrequency.getResolutionTimeType() != null)
                feedAgreement.setImResolutionDay(new StringType(callFrequency.getResolutionTimeType().getRealValue()));
        }
        if (getDfCallFrequency() != null) {
            CallFrequency callFrequency = getDfCallFrequency();
            if (callFrequency.getLegalReviewFrequency() != null)
                feedAgreement.setDfFrequency(new StringType(callFrequency.getLegalReviewFrequency().value()));
            if (callFrequency.getAdjustType() != null)
                feedAgreement.setDfNonWorkingdayAdjusttype(new StringType(callFrequency.getAdjustType().value()));
            if (callFrequency.getFrequencyStart() != null)
                feedAgreement.setDfFrequencyStart(new StringType(callFrequency.getFrequencyStart().getRealValue()));
            if (callFrequency.getNotificationTime() != null &amp;&amp; !callFrequency.getNotificationTime().isEmpty()) {
                StringBuffer stringBuffer = new StringBuffer();
                java.util.Iterator&lt;StringType&gt; iterator = callFrequency.getNotificationTime().iterator();
                while (iterator.hasNext()) {
                    StringType stringType = (StringType) iterator.next();
                    stringBuffer.append(stringType.getRealValue());
                    if (iterator.hasNext())
                        stringBuffer.append(",");
                }
                feedAgreement.setDfNotificationTime(new StringType(stringBuffer.toString()));
            }
            if (callFrequency.getResolutionTime() != null)
                feedAgreement.setDfResolutionTime(new StringType(callFrequency.getResolutionTime().getRealValue()));
            if (callFrequency.getResolutionTimeType() != null)
                feedAgreement.setDfResolutionDay(new StringType(callFrequency.getResolutionTimeType().getRealValue()));
        }
        if (getTimeZone() != null)
            feedAgreement.setTimeZone(new StringType(getTimeZone().getRealValue()));
        if (getHolidayCentre() != null &amp;&amp; !getHolidayCentre().isEmpty()) {
            StringBuffer stringBuffer = new StringBuffer();
            java.util.Iterator&lt;StringType&gt; iterator = getHolidayCentre().iterator();
            while (iterator.hasNext()) {
                StringType stringType = (StringType) iterator.next();
                stringBuffer.append(stringType.getRealValue());
                if (iterator.hasNext())
                    stringBuffer.append(",");
            }
            feedAgreement.setHolidayCentre(new StringType(stringBuffer.toString()));
        }
        if (Boolean.TRUE.equals(isClientReleaseRequired())) {
            feedAgreement.setClientRelease(true);
        } else {
            feedAgreement.setClientRelease(false);
        }
        if (getDefaultTradeValuationRule() != null)
            feedAgreement.setTradeValuationRule(new StringType(getDefaultTradeValuationRule().value()));
        if (getSharesPerCreationUnit() != null)
            feedAgreement.setSharesPerCreationUnit(new StringType(getSharesPerCreationUnit().getRealValue()));
//        if (Boolean.TRUE.equals(isTradeMappingRuleFlag()))
//            protected Boolean tradeMappingRuleFlag;
        if (getTradeMappingRule() != null &amp;&amp; !getTradeMappingRule().isEmpty()) {
            List&lt;FeedAgreement.TradeMappingRule&gt; list = feedAgreement.getTradeMappingRule();
            for (TradeMappingRuleType tradeMappingRuleType : getTradeMappingRule()) {
                FeedAgreement.TradeMappingRule tradeMappingRule = new FeedAgreement.TradeMappingRule();
                if (tradeMappingRuleType.getField() != null)
                    tradeMappingRule.setTmrField(new StringType(tradeMappingRuleType.getField().getRealValue()));
                if (tradeMappingRuleType.getRule() != null)
                    tradeMappingRule.setTmrRule(new StringType(tradeMappingRuleType.getRule().value()));
                if (tradeMappingRuleType.getValue() != null)
                    tradeMappingRule.setTmrValue(new StringType(tradeMappingRuleType.getValue().getRealValue()));
                if (tradeMappingRuleType.getOperator() != null)
                    tradeMappingRule.setTmrOperator(new StringType(tradeMappingRuleType.getOperator().value()));
                list.add(tradeMappingRule);
            }
        }
        if (getTradeCalcRule() != null) {
            TradeCalcRuleType tradeCalcRuleType = getTradeCalcRule();
            FeedAgreement.TradeCalcRule tradeCalcRule = new FeedAgreement.TradeCalcRule();
            if (Boolean.TRUE.equals(tradeCalcRuleType.isIncludeFailedOpenLeg()))
                tradeCalcRule.setIncludeFailedOpenLeg(true);
            else
                tradeCalcRule.setIncludeFailedOpenLeg(false);
            if (Boolean.TRUE.equals(tradeCalcRuleType.isIncludeFailedCloseLeg()))
                tradeCalcRule.setIncludeFailedCloseLeg(true);
            else
                tradeCalcRule.setIncludeFailedCloseLeg(false);
//            if (Boolean.TRUE.equals(tradeCalcRuleType.isIncludeFailedTradeValuations()))
//                protected Boolean includeFailedTradeValuations;
            feedAgreement.setTradeCalcRule(tradeCalcRule);
        }
        if (getAgreementIA() != null) {
            Product product = getAgreementIA();
            FeedAgreement.AgreementIA agreementIA = new FeedAgreement.AgreementIA();
            if (Boolean.TRUE.equals(product.isCheck())) {
                agreementIA.setIndependentAmount(new StringType(Boolean.TRUE.toString()));
                if (product.getUpfrontCalculationMethodology() != null)
                    agreementIA.setUpfrontCalculMethodology(
                            new StringType(product.getUpfrontCalculationMethodology().value()));
                if (product.getExternalIADetail() != null) {
                    IndependentAmountDetail independentAmountDetail = product.getExternalIADetail();
                    if (Boolean.TRUE.equals(independentAmountDetail.isPrincipalUpfronts())) {
                        agreementIA.setPrincipleUpfronts(new StringType(Boolean.TRUE.toString()));
                    } else if (Boolean.TRUE.equals(independentAmountDetail.isCptyUpfronts())) {
                        agreementIA.setPrincipleUpfronts(new StringType(Boolean.FALSE.toString()));
                    }
                    if (independentAmountDetail.getFixedValue() != null)
                        agreementIA.setFixedValue(
                                new StringType(independentAmountDetail.getFixedValue().getRealValue()));
                    if (independentAmountDetail.getFixedPercentage() != null)
                        agreementIA.setFixedPerc(
                                new StringType(independentAmountDetail.getFixedPercentage().getRealValue()));
                }
            } else {
                agreementIA.setIndependentAmount(new StringType(Boolean.FALSE.toString()));
            }
            feedAgreement.setAgreementIA(agreementIA);
        }
        if (getScaleUpMargin() != null) {
            Product product = getScaleUpMargin();
            if (Boolean.TRUE.equals(product.isCheck())) {
                feedAgreement.setScaleUpMargin(true);
                if (product.getUpfrontCalculationMethodology() != null)
                    feedAgreement.setScaleUpCalcMethod(
                            new StringType(product.getUpfrontCalculationMethodology().value()));
                if (product.getExternalIADetail() != null) {
                    IndependentAmountDetail independentAmountDetail = product.getExternalIADetail();
                    if (independentAmountDetail.getFixedValue() != null)
                        feedAgreement.setScaleUpValue(
                                new StringType(independentAmountDetail.getFixedValue().getRealValue()));
                    if (independentAmountDetail.getAggregationRules() != null)
                        feedAgreement.setScaleUpAggregation(
                                new StringType(independentAmountDetail.getAggregationRules().getRealValue()));
                }
            } else {
                feedAgreement.setScaleUpMargin(false);
            }
        }
        if (getExposureProfile() != null)
            feedAgreement.setExposureProfile(new StringType(getExposureProfile().getRealValue()));
        if (getProduct() != null &amp;&amp; !getProduct().isEmpty()) {
            List&lt;FeedAgreement.Product&gt; list = feedAgreement.getProduct();
            for (Product product : getProduct()) {
                FeedAgreement.Product feedProduct = new FeedAgreement.Product();
                if (product.getProductName() != null)
                    feedProduct.setProductName(new StringType(product.getProductName().getRealValue()));
                if (product.getExposurePercentageMTM() != null)
                    feedProduct.setExposurePerc(new StringType(product.getExposurePercentageMTM().getRealValue()));
                if (product.getSettlementPeriod() != null)
                    feedProduct.setSettlementPeriod(new StringType(product.getSettlementPeriod()));
                if (product.getUpfrontCalculationMethodology() != null)
                    feedProduct.setUpfrontCalculMethod(
                            new StringType(product.getUpfrontCalculationMethodology().value()));
                if (product.getHaircutCalculationMethodology() != null)
                    feedProduct.setHaircutCalcMethod(
                            new StringType(product.getHaircutCalculationMethodology().getRealValue()));
                if (Boolean.TRUE.equals(product.isIncludeValuation()))
                    feedProduct.setIncludeValuation(true);
                if (product.getNettingRule() != null) {
                    ProductNettingRule productNettingRule = product.getNettingRule();
                    FeedAgreement.Product.IaCalNettingRules iaCalNettingRules = new FeedAgreement.Product.IaCalNettingRules();
                    if (productNettingRule.getTradeRule() != null)
                        iaCalNettingRules.setTradeRule(new StringType(productNettingRule.getTradeRule().value()));
                    if (productNettingRule.getNettingRule() != null)
                        iaCalNettingRules.setNettingRule(new StringType(productNettingRule.getNettingRule().value()));
                    if (productNettingRule.getNettingCalculation() != null)
                        iaCalNettingRules.setNettingCalculation(
                                new StringType(productNettingRule.getNettingCalculation().value()));
                    if (productNettingRule.getRateDefinition() != null &amp;&amp; !productNettingRule.getRateDefinition().isEmpty()) {
                        FeedAgreement.Product.IaCalNettingRules.RateDefinitions rateDefinitions = new FeedAgreement.Product.IaCalNettingRules.RateDefinitions();
                        List&lt;FeedAgreement.Product.IaCalNettingRules.RateDefinitions.RateDefinition&gt; rateDefinitionList = rateDefinitions.getRateDefinition();
                        for (RateDefinition rd : productNettingRule.getRateDefinition()) {
                            FeedAgreement.Product.IaCalNettingRules.RateDefinitions.RateDefinition rateDefinition = new FeedAgreement.Product.IaCalNettingRules.RateDefinitions.RateDefinition();
                            if (rd.getRate() != null)
                                rateDefinition.setRate(new StringType(rd.getRate().getRealValue()));
                            if (rd.getCurrency() != null &amp;&amp; !rd.getCurrency().isEmpty()) {
                                StringBuffer stringBuffer = new StringBuffer();
                                java.util.Iterator&lt;StringType&gt; iterator = rd.getCurrency().iterator();
                                while (iterator.hasNext()) {
                                    StringType stringType = (StringType) iterator;
                                    stringBuffer.append(stringType.getRealValue());
                                    if (iterator.hasNext())
                                        stringBuffer.append(",");
                                }
                                rateDefinition.setCurrency(new StringType(stringBuffer.toString()));
                            }
                            if (rd.getCurrencyGroup() != null)
                                rateDefinition.setCurrencyGroup(new StringType(rd.getCurrencyGroup().getRealValue()));
                            rateDefinitionList.add(rateDefinition);
                        }
                    }
                    feedProduct.setIaCalNettingRules(iaCalNettingRules);
                }
                if (product.getExternalIADetail() != null) {
                    IndependentAmountDetail independentAmountDetail = product.getExternalIADetail();
                    if (Boolean.TRUE.equals(independentAmountDetail.isPrincipalUpfronts())) {
                        feedProduct.setPrincipleUpfronts(true);
                    } else if (Boolean.TRUE.equals(independentAmountDetail.isCptyUpfronts())) {
                        feedProduct.setPrincipleUpfronts(false);
                    }
                    if (independentAmountDetail.getFixedPercentage() != null)
                        feedProduct.setPrincipleFixedPerc(
                                new javax.xml.bind.JAXBElement(new javax.xml.namespace.QName("principleFixedPerc"), StringType.class,
                                        new StringType(independentAmountDetail.getFixedPercentage().getRealValue())));
                    if (independentAmountDetail.getFixedValue() != null)
                        feedProduct.setPrincipleFixedValue(
                                new javax.xml.bind.JAXBElement(new javax.xml.namespace.QName("principleFixedValue"), StringType.class,
                                        new StringType(independentAmountDetail.getFixedValue().getRealValue())));
                    if (independentAmountDetail.getCcy() != null)
                        feedProduct.setPerOfNotionalCcy(
                                new StringType(independentAmountDetail.getCcy().getRealValue()));
                    FeedAgreement.Product.ExternalIaSettings externalIaSettings = new FeedAgreement.Product.ExternalIaSettings();
                    List&lt;FeedAgreement.Product.ExternalIaSettings.ExternalIaSetting&gt; externalIaSettingList = externalIaSettings.getExternalIaSetting();
                    FeedAgreement.Product.ExternalIaSettings.ExternalIaSetting externalIaSetting = new FeedAgreement.Product.ExternalIaSettings.ExternalIaSetting();
                    if (independentAmountDetail.getCurrencySet() != null)
                        externalIaSetting.setCurrencySet(
                                new StringType(independentAmountDetail.getCurrencySet().getRealValue()));
                    if (product.getFeeCalculationMethodology() != null)
                        externalIaSetting.setCalcMethod(new StringType(product.getFeeCalculationMethodology().value()));
                    if (independentAmountDetail.getConfidenceLevel() != null)
                        externalIaSetting.setConfidenceLevel(
                                new StringType(independentAmountDetail.getConfidenceLevel().getRealValue()));
                    if (independentAmountDetail.getDays() != null)
                        externalIaSetting.setDays(new StringType(independentAmountDetail.getDays().getRealValue()));
                    if (independentAmountDetail.getMultiplier() != null)
                        externalIaSetting.setMultiplier(
                                new StringType(independentAmountDetail.getMultiplier().getRealValue()));
                    if (independentAmountDetail.getMinimumCollateral() != null)
                        externalIaSetting.setMinimumCollateral(
                                new StringType(independentAmountDetail.getMinimumCollateral().getRealValue()));
                    if (independentAmountDetail.getMaturityBucket() != null)
                        externalIaSetting.setMaturityBucket(
                                new StringType(independentAmountDetail.getMaturityBucket().getRealValue()));
                    if (independentAmountDetail.getRiskHistory() != null)
                        externalIaSetting.setRiskHistory(
                                new StringType(independentAmountDetail.getRiskHistory().getRealValue()));
                    if (independentAmountDetail.getRiskModelCalibrationPeriod() != null)
                        externalIaSetting.setRiskModelCalPeriod(
                                new StringType(independentAmountDetail.getRiskModelCalibrationPeriod().value()));
                    if (independentAmountDetail.getAssetsClassToHedge() != null)
                        externalIaSetting.setAssetsClassToHedge(
                                new StringType(independentAmountDetail.getAssetsClassToHedge().getRealValue()));
                    if (independentAmountDetail.getComments() != null)
                        externalIaSetting.setComments(
                                new StringType(independentAmountDetail.getComments().getRealValue()));
                    if (independentAmountDetail.getMic1() != null)
                        externalIaSetting.setMisc1(new StringType(independentAmountDetail.getMic1().getRealValue()));
                    if (independentAmountDetail.getMic2() != null)
                        externalIaSetting.setMisc2(new StringType(independentAmountDetail.getMic2().getRealValue()));
                    if (independentAmountDetail.getMic3() != null)
                        externalIaSetting.setMisc3(new StringType(independentAmountDetail.getMic3().getRealValue()));
                    if (independentAmountDetail.getMic4() != null)
                        externalIaSetting.setMisc4(new StringType(independentAmountDetail.getMic4().getRealValue()));
                    if (independentAmountDetail.getMic5() != null)
                        externalIaSetting.setMisc5(new StringType(independentAmountDetail.getMic5().getRealValue()));
                    externalIaSettingList.add(externalIaSetting);
                }
//                protected FeedAgreement.Product.IaDurationSchedules iaDurationSchedules;
                list.add(feedProduct);
            }
        }
        if (getModel() != null) {
            Model model = getModel();
            if (Boolean.TRUE.equals(model.isTradeModelDeterminedByFeed()))
                feedAgreement.setModelDetByFeed(true);
            else
                feedAgreement.setModelDetByFeed(false);
            if (model.getSettlementLevel() != null)
                feedAgreement.setSettlementLevel(new StringType(model.getSettlementLevel().value()));
            if (model.getModelEligibilityRule() != null &amp;&amp; !model.getModelEligibilityRule().isEmpty()) {
                FeedAgreement.ModelEligRules modelEligRules = new FeedAgreement.ModelEligRules();
                List&lt;FeedAgreement.ModelEligRules.ModelEligRule&gt; modelEligRuleList = modelEligRules.getModelEligRule();
                for (ModelEligibilityRule mer : model.getModelEligibilityRule()) {
                    FeedAgreement.ModelEligRules.ModelEligRule modelEligRule = new FeedAgreement.ModelEligRules.ModelEligRule();
                    if (mer.getModelName() != null)
                        modelEligRule.setModelName(new StringType(mer.getModelName().getRealValue()));
                    if (mer.getEligibleCurrency() != null)
                        modelEligRule.setEligCurrency(new StringType(mer.getEligibleCurrency().getRealValue()));
                    if (mer.getTradeRule() != null &amp;&amp; !mer.getTradeRule().isEmpty()) {
                        FeedAgreement.ModelEligRules.ModelEligRule.TradeRules tradeRules = new FeedAgreement.ModelEligRules.ModelEligRule.TradeRules();
                        List&lt;FeedAgreement.ModelEligRules.ModelEligRule.TradeRules.TradeRule&gt; tradeRuleList = tradeRules.getTradeRule();
                        for (TradeRule tr : mer.tradeRule) {
                            FeedAgreement.ModelEligRules.ModelEligRule.TradeRules.TradeRule tradeRule = new FeedAgreement.ModelEligRules.ModelEligRule.TradeRules.TradeRule();
                            if (tr.getField() != null)
                                tradeRule.setTradeField(new StringType(tr.getField().getRealValue()));
                            if (tr.getEligibilityRule() != null)
                                tradeRule.setTradeEligRule(new StringType(tr.getEligibilityRule().getRealValue()));
                            if (tr.getValue() != null)
                                tradeRule.setTradeValue(new StringType(tr.getValue().getRealValue()));
                            tradeRuleList.add(tradeRule);
                        }
                        modelEligRule.setTradeRules(tradeRules);
                    }
                }
                feedAgreement.setModelEligRules(modelEligRules);
            }
            if (model.getModelCategory() != null &amp;&amp; !model.getModelCategory().isEmpty()) {
                FeedAgreement.ModelEligRules modelEligRules = feedAgreement.getModelEligRules() != null ? feedAgreement.getModelEligRules() : new FeedAgreement.ModelEligRules();
                List&lt;FeedAgreement.ModelEligRules.ModelEligRule&gt; modelEligRuleList = modelEligRules.getModelEligRule();
                for (ModelCategoryType modelCategoryType : model.getModelCategory()) {
                    FeedAgreement.ModelEligRules.ModelEligRule modelEligRule = new FeedAgreement.ModelEligRules.ModelEligRule();
                    if (modelCategoryType.getModelName() != null)
                        modelEligRule.setModelName(new StringType(modelCategoryType.getModelName().getRealValue()));
                    if (modelCategoryType.getModelDecription() != null)
                        modelEligRule.setModelDescription(
                                new StringType(modelCategoryType.getModelDecription().getRealValue()));
                    if (modelCategoryType.getModelCategory() != null)
                        modelEligRule.setModelCategory(
                                new StringType(modelCategoryType.getModelCategory().getRealValue()));
//                    protected StringType accountType;
                    if (modelCategoryType.getModelBaseCurrency() != null)
                        modelEligRule.setEligCurrency(
                                new StringType(modelCategoryType.getModelBaseCurrency().getRealValue()));
//                    protected StringType displayOrder;
                    if (Boolean.TRUE.equals(modelCategoryType.isMasterModel()))
                        modelEligRule.setMasterModel(true);
                    modelEligRuleList.add(modelEligRule);
                }
                feedAgreement.setModelEligRules(modelEligRules);
            }
        }
        if (Boolean.TRUE.equals(isInterest())) {
            feedAgreement.setEnableInterestCalc(new StringType(Boolean.TRUE.toString()));
            if (getInterestCalculationsMethod() != null || getVminterestCalculationsMethod() != null)
                feedAgreement.setInterestCalcMethod(new StringType(
                        getInterestCalculationsMethod() != null ? getInterestCalculationsMethod().value() : getVminterestCalculationsMethod().value()));
            if (getCalculationRule() != null || getVmCalculationRule() != null)
                feedAgreement.setCalcRule(new StringType(
                        getCalculationRule() != null ? getCalculationRule().value() : getVmCalculationRule().value()));
            if (getPayMethod() != null || getVmPayMethod() != null)
                feedAgreement.setInterestPayMethod(
                        new StringType(getPayMethod() != null ? getPayMethod().value() : getVmPayMethod().value()));
            if (getReceiveMethod() != null || getVmReceiveMethod() != null)
                feedAgreement.setInterestReceiveMethod(new StringType(
                        getReceiveMethod() != null ? getReceiveMethod().value() : getVmReceiveMethod().value()));
            if (getImInterestCalculationsMethod() != null)
                feedAgreement.setImInterestCalcMethod(new StringType(getImInterestCalculationsMethod().value()));
            if (getImCalculationRule() != null)
                feedAgreement.setImCalcRule(new StringType(getImCalculationRule().value()));
            if (getImPayMethod() != null)
                feedAgreement.setImInterestPayMethod(new StringType(getImPayMethod().value()));
            if (getImReceiveMethod() != null)
                feedAgreement.setImInterestReceiveMethod(new StringType(getImReceiveMethod().value()));
        }
        if (Boolean.TRUE.equals(isDfInterest())) {
            feedAgreement.setDfEnableInterestCalc(new StringType(Boolean.TRUE.toString()));
            if (getDfInterestCalculationsMethod() != null)
                feedAgreement.setDfInterestCalcMethod(new StringType(getDfInterestCalculationsMethod().value()));
            if (getDfCalculationRule() != null)
                feedAgreement.setDfCalcRule(new StringType(getDfCalculationRule().value()));
            if (getDfPayMethod() != null)
                feedAgreement.setDfInterestPayMethod(new StringType(getDfPayMethod().value()));
            if (getDfReceiveMethod() != null)
                feedAgreement.setDfInterestReceiveMethod(new StringType(getDfReceiveMethod().value()));
        }
        if (getInterestSettlementDate() != null)
            feedAgreement.setCalcDate(new StringType(getInterestSettlementDate().value()));
        if (Boolean.TRUE.equals(isAllowNegativeEffectiveInterestRate()))
            feedAgreement.setAllowNegativeEffRate(true);
        if (getApplicableBalanceInterestCalculation() != null)
            feedAgreement.setInterestApplicableBalance(
                    new StringType(getApplicableBalanceInterestCalculation().value()));
        if (getConcentrationLimitTrigger() != null)
            feedAgreement.setConcentrationLimitTrigger(new StringType(getConcentrationLimitTrigger().getRealValue()));
        if (getConcentrationLimitBreachAdjustment() != null)
            feedAgreement.setConcentrationLimitBreachAdjustment(
                    new StringType(getConcentrationLimitBreachAdjustment().value()));
        if (getRatingMethod() != null) {
            RatingMethod ratingMethod = getRatingMethod();
            if (Boolean.TRUE.equals(ratingMethod.isUseIssueRating()) || Boolean.TRUE.equals(
                    ratingMethod.isUseIssuerRating())) {
                if (Boolean.TRUE.equals(ratingMethod.isUseIssueRating()) &amp;&amp; Boolean.TRUE.equals(
                        ratingMethod.isUseIssuerRating()))
                    feedAgreement.setRatingMethod(new StringType("Both"));
                else if (Boolean.TRUE.equals(ratingMethod.isUseIssueRating()))
                    feedAgreement.setRatingMethod(new StringType("Issue"));
                else if (Boolean.TRUE.equals(ratingMethod.isUseIssuerRating()))
                    feedAgreement.setRatingMethod(new StringType("Issuer"));
            }
        }
        if (getEligibilityRulesTemplate() != null)
            feedAgreement.setEligRuleTemplate(new StringType(getEligibilityRulesTemplate().getRealValue()));
        if (getGracePeriod() != null)
            feedAgreement.setGracePeriod(new StringType(getGracePeriod().getRealValue()));
        if (Boolean.TRUE.equals(isApplicableAgencies()) &amp;&amp; getCollateralApplicableAgency() != null) {
            CollateralApplicableAgency collateralApplicableAgency = getCollateralApplicableAgency();
            FeedAgreement.ApplicableAgencies applicableAgencies = new FeedAgreement.ApplicableAgencies();
            if (collateralApplicableAgency.getDebtClassification() != null)
                applicableAgencies.setDebtClassification(
                        new StringType(collateralApplicableAgency.getDebtClassification().getRealValue()));
            if (collateralApplicableAgency.getReferenceRatingAgencies() != null &amp;&amp; !collateralApplicableAgency.getReferenceRatingAgencies().isEmpty()) {
                StringBuffer stringBuffer = new StringBuffer();
                java.util.Iterator&lt;StringType&gt; iterator = collateralApplicableAgency.getReferenceRatingAgencies().iterator();
                while (iterator.hasNext()) {
                    StringType stringType = (StringType) iterator.next();
                    stringBuffer.append(stringType.getRealValue());
                    if (iterator.hasNext())
                        stringBuffer.append(",");
                }
                applicableAgencies.setReferenceRatingAgencies(new StringType(stringBuffer.toString()));
            }
            if (collateralApplicableAgency.getApplicationOfRatings() != null)
                applicableAgencies.setApplicableOfRating(
                        new StringType(collateralApplicableAgency.getApplicationOfRatings().value()));
            if (collateralApplicableAgency.getSelectionOfAgencyUseValue() != null || collateralApplicableAgency.getSelectionOfAgencyUseType() != null) {
                FeedAgreement.ApplicableAgencies.SelectionOfAgency selectionOfAgency = new FeedAgreement.ApplicableAgencies.SelectionOfAgency();
                if (collateralApplicableAgency.getSelectionOfAgencyUseValue() != null)
                    selectionOfAgency.setUse(
                            new StringType(collateralApplicableAgency.getSelectionOfAgencyUseValue().getRealValue()));
                if (collateralApplicableAgency.getSelectionOfAgencyUseType() != null)
                    selectionOfAgency.setDirection(
                            new StringType(collateralApplicableAgency.getSelectionOfAgencyUseType().value()));
                applicableAgencies.setSelectionOfAgency(selectionOfAgency);
            }
            feedAgreement.setApplicableAgencies(applicableAgencies);
        }
        if (Boolean.TRUE.equals(isExposureCushionRule())) {
            feedAgreement.setExposureCushion(new StringType(Boolean.TRUE.toString()));
            if (getCollateralExposureCushionRule() != null) {
                CollateralExposureCushionRule collateralExposureCushionRule = getCollateralExposureCushionRule();
                if (collateralExposureCushionRule.getECPercentage() != null)
                    feedAgreement.setEcPercentage(
                            new StringType(collateralExposureCushionRule.getECPercentage().getRealValue()));
                if (collateralExposureCushionRule.getECFixedValue() != null)
                    feedAgreement.setEcFixedValue(
                            new StringType(collateralExposureCushionRule.getECFixedValue().getRealValue()));
                if (collateralExposureCushionRule.getECCalculationMethod() != null)
                    feedAgreement.setEcCalculationMethodology(
                            new StringType(collateralExposureCushionRule.getECCalculationMethod().getRealValue()));
                if (collateralExposureCushionRule.getECAssetClassApplicability() != null)
                    feedAgreement.setEcAssetClassApplicability(new StringType(
                            collateralExposureCushionRule.getECAssetClassApplicability().getRealValue()));
                if (collateralExposureCushionRule.getECDirection() != null)
                    feedAgreement.setEcDirection(
                            new StringType(collateralExposureCushionRule.getECDirection().getRealValue()));
            }
        }
        if (getApplicableParty() != null)
            feedAgreement.setApplicableToBoth(new StringType(getApplicableParty().value()));
        if (getApplicableType() != null)
            feedAgreement.setApplicableToVI(new StringType(getApplicableType().value()));
        convertAssetClassToFeedObject(feedAgreement, getCollateralAssetClass(), "PC", "VI");
        convertAssetClassToFeedObject(feedAgreement, getPrincipalCollateralAssetClass(), "P", "VI");
        convertAssetClassToFeedObject(feedAgreement, getCounterpartyCollateralAssetClass(), "C", "VI");
        convertAssetClassToFeedObject(feedAgreement, getVmCollateralAssetClass(), "PC", "V");
        convertAssetClassToFeedObject(feedAgreement, getImCollateralAssetClass(), "PC", "I");
        convertAssetClassToFeedObject(feedAgreement, getPrincipalVMCollateralAssetClass(), "P", "V");
        convertAssetClassToFeedObject(feedAgreement, getPrincipalIMCollateralAssetClass(), "P", "I");
        convertAssetClassToFeedObject(feedAgreement, getCounterpartyVMCollateralAssetClass(), "C", "V");
        convertAssetClassToFeedObject(feedAgreement, getCounterpartyIMCollateralAssetClass(), "C", "I");
        if (Boolean.TRUE.equals(isApplyOrganisationThreshold()))
            feedAgreement.setApplyOrganisationThreshold(new StringType(Boolean.TRUE.toString()));
        if (getRounding() != null || getVMrounding() != null) {
            Rounding rouding = getRounding() != null? getRounding() : getVMrounding();
            if (rouding.getDelivery() != null)
                feedAgreement.setRoundingDelivery(new StringType(rouding.getDelivery().value()));
            if (rouding.getRecall() != null)
                feedAgreement.setRoundingRecall(new StringType(rouding.getRecall().value()));
        }
        if (getIMrounding() != null) {
            Rounding rouding = getIMrounding();
            if (rouding.getDelivery() != null)
                feedAgreement.setRoundingIMDelivery(new StringType(rouding.getDelivery().value()));
            if (rouding.getRecall() != null)
                feedAgreement.setRoundingIMRecall(new StringType(rouding.getRecall().value()));
        }
        if (getSplitTheDifferenceValue() != null) {
            feedAgreement.setStdValue(new StringType(getSplitTheDifferenceValue().getRealValue()));
            feedAgreement.setStdIMValue(new StringType(getSplitTheDifferenceValue().getRealValue()));
        }
        if (getSplitTheDifferenceType() != null)
            feedAgreement.setStdType(new StringType(getSplitTheDifferenceType().getRealValue()));
        if (Boolean.TRUE.equals(isFinra4210Adjustment())) {
            feedAgreement.setFinra4210Adjustment(true);
            if (getFinra4210Applicability() != null &amp;&amp; !getFinra4210Applicability().isEmpty()) {
                StringBuffer stringBuffer = new StringBuffer();
                for (Finra4210Applicability finra4210Applicability : getFinra4210Applicability()) {
                    if (Finra4210Applicability.PRINCIPAL.equals(finra4210Applicability))
                        stringBuffer.append("P");
                    else if (Finra4210Applicability.COUNTERPARTY.equals(finra4210Applicability))
                        stringBuffer.append("C");
                }
                feedAgreement.setFinra4210Applicability(new StringType(stringBuffer.toString()));
            }
        }
        if (getPrincipalFixedTrigger() != null || getVmPrincipalFixedTrigger() != null) {
            TriggerType triggerType = getPrincipalFixedTrigger() != null? getPrincipalFixedTrigger() : getVmPrincipalFixedTrigger();
            if (triggerType.getFixedValues() != null) {
                feedAgreement.setPrincipaltriggertype(new StringType("Fixed"));
                FixedValues fixedValues = triggerType.getFixedValues();
                if (fixedValues.getThreshold() != null) {
                    Threshold threshold = fixedValues.getThreshold();
                    if (threshold.getInfinity() != null) {
                        feedAgreement.setPrincipalFixedThresholdType(new StringType("Infinity"));
                    }else if (threshold.getFixedAmount() != null) {
                        Money money = threshold.getFixedAmount();
                        feedAgreement.setPrincipalFixedThresholdType(new StringType("Fixed"));
                        if (money.getAmount() != null)
                            feedAgreement.setPrincipalFixedThresholdValue(new StringType(money.getAmount().getRealValue()));
                        if (money.getCurrency() != null)
                            feedAgreement.setPrincipalFixedThresholdCcy(new StringType(money.getCurrency().getRealValue()));
                    }else if (threshold.getPercentageOfNAV() != null) {
                        feedAgreement.setPrincipalFixedThresholdType(new StringType("Percentage of NAV"));
                        feedAgreement.setPrincipalFixedThresholdValue(new StringType(threshold.getPercentageOfNAV().getRealValue()));
                    }else if (threshold.getPercentageOfNAVAddIA() != null) {
                        feedAgreement.setPrincipalFixedThresholdType(new StringType("Percentage of NAV+IA"));
                        feedAgreement.setPrincipalFixedThresholdValue(new StringType(threshold.getPercentageOfNAVAddIA().getRealValue()));
                    }else if (threshold.getPercentageOfIAAddMTM() != null) {
                        feedAgreement.setPrincipalFixedThresholdType(new StringType("Percentage of IA+MTM"));
                        feedAgreement.setPrincipalFixedThresholdValue(new StringType(threshold.getPercentageOfIAAddMTM().getRealValue()));
                    }else if (threshold.getPercentageOfEXPSubstractCOL() != null) {
                        feedAgreement.setPrincipalFixedThresholdType(new StringType("Percentage of EXP-COL"));
                        feedAgreement.setPrincipalFixedThresholdValue(new StringType(threshold.getPercentageOfEXPSubstractCOL().getRealValue()));
                    }else if (threshold.getPercentageOfNotional() != null) {
                        feedAgreement.setPrincipalFixedThresholdType(new StringType("Percentage of Notional"));
                        feedAgreement.setPrincipalFixedThresholdValue(new StringType(threshold.getPercentageOfNotional().getRealValue()));
                    }
                }
                if (fixedValues.getMinimumTransfer() != null) {
                    MinimumTransfer minimumTransfer = fixedValues.getMinimumTransfer();
                    if (minimumTransfer.getFixedAmount() != null) {
                        Money money = minimumTransfer.getFixedAmount();
                        feedAgreement.setPrincipalFixedMTAType(new StringType("Fixed"));
                        if (money.getAmount() != null)
                            feedAgreement.setPrincipalFixedMTAValue(new StringType(money.getAmount().getRealValue()));
                        if (money.getCurrency() != null)
                            feedAgreement.setPrincipalFixedMtaCcy(new StringType(money.getCurrency().getRealValue()));
                    }else if (minimumTransfer.getPercentageOfNAV() != null) {
                        feedAgreement.setPrincipalFixedMTAType(new StringType("Percentage of NAV"));
                        feedAgreement.setPrincipalFixedMTAValue(new StringType(minimumTransfer.getPercentageOfNAV().getRealValue()));
                    }else if (minimumTransfer.getPercentageOfNAVAddIA() != null) {
                        feedAgreement.setPrincipalFixedMTAType(new StringType("Percentage of NAV+IA"));
                        feedAgreement.setPrincipalFixedMTAValue(new StringType(minimumTransfer.getPercentageOfNAVAddIA().getRealValue()));
                    }else if (minimumTransfer.getPercentageOfNAVAddThreshold() != null) {
                        feedAgreement.setPrincipalFixedMTAType(new StringType("Percentage of IA+Threshold"));
                        feedAgreement.setPrincipalFixedMTAValue(new StringType(minimumTransfer.getPercentageOfNAVAddThreshold().getRealValue()));
                    }else if (minimumTransfer.getPercentageOfIAAddMTM() != null) {
                        feedAgreement.setPrincipalFixedMTAType(new StringType("Percentage of IA+MTM"));
                        feedAgreement.setPrincipalFixedMTAValue(new StringType(minimumTransfer.getPercentageOfIAAddMTM().getRealValue()));
                    }else if (minimumTransfer.getPercentageOfEXPSubstractCOL() != null) {
                        feedAgreement.setPrincipalFixedMTAType(new StringType("Percentage of EXP-COL"));
                        feedAgreement.setPrincipalFixedMTAValue(new StringType(minimumTransfer.getPercentageOfEXPSubstractCOL().getRealValue()));
                    }else if (minimumTransfer.getPercentageOfNotional() != null) {
                        feedAgreement.setPrincipalFixedMTAType(new StringType("Percentage of Notional"));
                        feedAgreement.setPrincipalFixedMTAValue(new StringType(minimumTransfer.getPercentageOfNotional().getRealValue()));
                    }
                }
                if (fixedValues.getRoundingAmount() != null) {
                    Money money = fixedValues.getRoundingAmount();
                    if (money.getAmount() != null)
                        feedAgreement.setPrincipalFixedRoundingAmount(new StringType(money.getAmount().getRealValue()));
                    if (money.getCurrency() != null)
                        feedAgreement.setPrincipalFixedRoundingAmountCcy(new StringType(money.getCurrency().getRealValue()));
                }
            }else if (triggerType.getTimeContingentValues() != null) {
                feedAgreement.setPrincipaltriggertype(new StringType("Time"));
            }else if (triggerType.getRatingContingentValues() != null) {
                feedAgreement.setPrincipaltriggertype(new StringType("Rating"));
                RatingRuleTrigger ratingRuleTrigger = triggerType.getRatingContingentValues();
                if (ratingRuleTrigger.getUseCounterpartyRating() != null &amp;&amp; ratingRuleTrigger.getUseCounterpartyRating().getLinkText() != null)
                    feedAgreement.setPrincipalRatingOrg(new StringType(ratingRuleTrigger.getUseCounterpartyRating().getLinkText().getRealValue()));
                if (ratingRuleTrigger.getReferenceRatingAgencies() != null &amp;&amp; !ratingRuleTrigger.getReferenceRatingAgencies().isEmpty()) {
                    StringBuffer stringBuffer = new StringBuffer();
                    java.util.Iterator&lt;ReferenceRatingAgenciesType&gt; iterator = ratingRuleTrigger.getReferenceRatingAgencies().iterator();
                    while (iterator.hasNext()) {
                        ReferenceRatingAgenciesType referenceRatingAgenciesType = (ReferenceRatingAgenciesType) iterator.next();
                        stringBuffer.append(referenceRatingAgenciesType.value());
                        if (iterator.hasNext())
                            stringBuffer.append(",");
                    }
                    feedAgreement.setPrincipalReferenceRatingAgencies(new StringType(stringBuffer.toString()));
                }
                if (ratingRuleTrigger.getDebtClassification() != null &amp;&amp; !ratingRuleTrigger.getDebtClassification().isEmpty()) {
                    StringBuffer stringBuffer = new StringBuffer();
                    java.util.Iterator&lt;DebtClassificationType&gt; iterator = ratingRuleTrigger.getDebtClassification().iterator();
                    while (iterator.hasNext()) {
                        DebtClassificationType debtClassificationType = (DebtClassificationType) iterator.next();
                        stringBuffer.append(debtClassificationType.value());
                        if (iterator.hasNext())
                            stringBuffer.append(",");
                    }
                    feedAgreement.setPrincipalDebtClassification(new StringType(stringBuffer.toString()));
                }
                if (ratingRuleTrigger.getApplicationOfRatings() != null) {
                    if (ApplicationOfRatingsType.IF_NOT_RATED_BY_ANY_AGENCY.equals(ratingRuleTrigger.getApplicationOfRatings()))
                        feedAgreement.setPrincipalNotRatedAssumeNR(true);
                    else
                        feedAgreement.setPrincipalApplicationOfRatings(new StringType(ratingRuleTrigger.getApplicationOfRatings().value()));
                }
                if (ratingRuleTrigger.getIfNotRatedByAnyAgency() != null) {
                    feedAgreement.setPrincipalNotRatedAssumeNR(true);
                }
            }else if (triggerType.getNavContingentValues() != null) {
                feedAgreement.setPrincipaltriggertype(new StringType("NAV"));
            }
        }
        if (getImPrincipalFixedTrigger() != null) {
            TriggerType triggerType = getImPrincipalFixedTrigger();
            if (triggerType.getFixedValues() != null) {
                feedAgreement.setPrincipalIMTriggerType(new StringType("Fixed"));
                FixedValues fixedValues = triggerType.getFixedValues();
                if (fixedValues.getThreshold() != null) {
                    Threshold threshold = fixedValues.getThreshold();
                    if (threshold.getInfinity() != null) {
                        feedAgreement.setPrincipalIMFixedThresholdType(new StringType("Infinity"));
                    }else if (threshold.getFixedAmount() != null) {
                        Money money = threshold.getFixedAmount();
                        feedAgreement.setPrincipalIMFixedThresholdType(new StringType("Fixed"));
                        if (money.getAmount() != null)
                            feedAgreement.setPrincipalIMFixedThresholdValue(new StringType(money.getAmount().getRealValue()));
                        if (money.getCurrency() != null)
                            feedAgreement.setPrincipalIMFixedThresholdCcy(new StringType(money.getCurrency().getRealValue()));
                    }else if (threshold.getPercentageOfNAV() != null) {
                        feedAgreement.setPrincipalIMFixedThresholdType(new StringType("Percentage of NAV"));
                        feedAgreement.setPrincipalIMFixedThresholdValue(new StringType(threshold.getPercentageOfNAV().getRealValue()));
                    }else if (threshold.getPercentageOfNAVAddIA() != null) {
                        feedAgreement.setPrincipalIMFixedThresholdType(new StringType("Percentage of NAV+IA"));
                        feedAgreement.setPrincipalIMFixedThresholdValue(new StringType(threshold.getPercentageOfNAVAddIA().getRealValue()));
                    }else if (threshold.getPercentageOfIAAddMTM() != null) {
                        feedAgreement.setPrincipalIMFixedThresholdType(new StringType("Percentage of IA+MTM"));
                        feedAgreement.setPrincipalIMFixedThresholdValue(new StringType(threshold.getPercentageOfIAAddMTM().getRealValue()));
                    }else if (threshold.getPercentageOfEXPSubstractCOL() != null) {
                        feedAgreement.setPrincipalIMFixedThresholdType(new StringType("Percentage of EXP-COL"));
                        feedAgreement.setPrincipalIMFixedThresholdValue(new StringType(threshold.getPercentageOfEXPSubstractCOL().getRealValue()));
                    }else if (threshold.getPercentageOfNotional() != null) {
                        feedAgreement.setPrincipalIMFixedThresholdType(new StringType("Percentage of Notional"));
                        feedAgreement.setPrincipalIMFixedThresholdValue(new StringType(threshold.getPercentageOfNotional().getRealValue()));
                    }
                }
                if (fixedValues.getMinimumTransfer() != null) {
                    MinimumTransfer minimumTransfer = fixedValues.getMinimumTransfer();
                    if (minimumTransfer.getFixedAmount() != null) {
                        Money money = minimumTransfer.getFixedAmount();
                        feedAgreement.setPrincipalIMFixedMTAType(new StringType("Fixed"));
                        if (money.getAmount() != null)
                            feedAgreement.setPrincipalIMFixedMTAValue(new StringType(money.getAmount().getRealValue()));
                        if (money.getCurrency() != null)
                            feedAgreement.setPrincipalIMFixedMtaCcy(new StringType(money.getCurrency().getRealValue()));
                    }else if (minimumTransfer.getPercentageOfNAV() != null) {
                        feedAgreement.setPrincipalIMFixedMTAType(new StringType("Percentage of NAV"));
                        feedAgreement.setPrincipalIMFixedMTAValue(new StringType(minimumTransfer.getPercentageOfNAV().getRealValue()));
                    }else if (minimumTransfer.getPercentageOfNAVAddIA() != null) {
                        feedAgreement.setPrincipalIMFixedMTAType(new StringType("Percentage of NAV+IA"));
                        feedAgreement.setPrincipalIMFixedMTAValue(new StringType(minimumTransfer.getPercentageOfNAVAddIA().getRealValue()));
                    }else if (minimumTransfer.getPercentageOfNAVAddThreshold() != null) {
                        feedAgreement.setPrincipalIMFixedMTAType(new StringType("Percentage of IA+Threshold"));
                        feedAgreement.setPrincipalIMFixedMTAValue(new StringType(minimumTransfer.getPercentageOfNAVAddThreshold().getRealValue()));
                    }else if (minimumTransfer.getPercentageOfIAAddMTM() != null) {
                        feedAgreement.setPrincipalIMFixedMTAType(new StringType("Percentage of IA+MTM"));
                        feedAgreement.setPrincipalIMFixedMTAValue(new StringType(minimumTransfer.getPercentageOfIAAddMTM().getRealValue()));
                    }else if (minimumTransfer.getPercentageOfEXPSubstractCOL() != null) {
                        feedAgreement.setPrincipalIMFixedMTAType(new StringType("Percentage of EXP-COL"));
                        feedAgreement.setPrincipalIMFixedMTAValue(new StringType(minimumTransfer.getPercentageOfEXPSubstractCOL().getRealValue()));
                    }else if (minimumTransfer.getPercentageOfNotional() != null) {
                        feedAgreement.setPrincipalIMFixedMTAType(new StringType("Percentage of Notional"));
                        feedAgreement.setPrincipalIMFixedMTAValue(new StringType(minimumTransfer.getPercentageOfNotional().getRealValue()));
                    }
                }
                if (fixedValues.getRoundingAmount() != null) {
                    Money money = fixedValues.getRoundingAmount();
                    if (money.getAmount() != null)
                        feedAgreement.setPrincipalIMFixedRoundingAmount(new StringType(money.getAmount().getRealValue()));
                    if (money.getCurrency() != null)
                        feedAgreement.setPrincipalIMFixedRoundingAmountCcy(new StringType(money.getCurrency().getRealValue()));
                }
            }else if (triggerType.getTimeContingentValues() != null) {
                feedAgreement.setPrincipalIMTriggerType(new StringType("Time"));
            }else if (triggerType.getRatingContingentValues() != null) {
                feedAgreement.setPrincipalIMTriggerType(new StringType("Rating"));
                RatingRuleTrigger ratingRuleTrigger = triggerType.getRatingContingentValues();
                if (ratingRuleTrigger.getUseCounterpartyRating() != null &amp;&amp; ratingRuleTrigger.getUseCounterpartyRating().getLinkText() != null)
                    feedAgreement.setPrincipalIMRatingOrg((new StringType(ratingRuleTrigger.getUseCounterpartyRating().getLinkText().getRealValue())));
                if (ratingRuleTrigger.getReferenceRatingAgencies() != null &amp;&amp; !ratingRuleTrigger.getReferenceRatingAgencies().isEmpty()) {
                    StringBuffer stringBuffer = new StringBuffer();
                    java.util.Iterator&lt;ReferenceRatingAgenciesType&gt; iterator = ratingRuleTrigger.getReferenceRatingAgencies().iterator();
                    while (iterator.hasNext()) {
                        ReferenceRatingAgenciesType referenceRatingAgenciesType = (ReferenceRatingAgenciesType) iterator.next();
                        stringBuffer.append(referenceRatingAgenciesType.value());
                        if (iterator.hasNext())
                            stringBuffer.append(",");
                    }
                    feedAgreement.setPrincipalIMReferenceRatingAgencies(new StringType(stringBuffer.toString()));
                }
                if (ratingRuleTrigger.getDebtClassification() != null &amp;&amp; !ratingRuleTrigger.getDebtClassification().isEmpty()) {
                    StringBuffer stringBuffer = new StringBuffer();
                    java.util.Iterator&lt;DebtClassificationType&gt; iterator = ratingRuleTrigger.getDebtClassification().iterator();
                    while (iterator.hasNext()) {
                        DebtClassificationType debtClassificationType = (DebtClassificationType) iterator.next();
                        stringBuffer.append(debtClassificationType.value());
                        if (iterator.hasNext())
                            stringBuffer.append(",");
                    }
                    feedAgreement.setPrincipalIMDebtClassification(new StringType(stringBuffer.toString()));
                }
                if (ratingRuleTrigger.getApplicationOfRatings() != null) {
                    if (ApplicationOfRatingsType.IF_NOT_RATED_BY_ANY_AGENCY.equals(ratingRuleTrigger.getApplicationOfRatings()))
                        feedAgreement.setPrincipalIMNotRatedAssumeNR(true);
                    else
                        feedAgreement.setPrincipalIMApplicationOfRatings(new StringType(ratingRuleTrigger.getApplicationOfRatings().value()));
                }
                if (ratingRuleTrigger.getIfNotRatedByAnyAgency() != null) {
                    feedAgreement.setPrincipalIMNotRatedAssumeNR(true);
                }
            }else if (triggerType.getNavContingentValues() != null) {
                feedAgreement.setPrincipalIMTriggerType(new StringType("NAV"));
            }
        }
        if (getCounterpartyFixedTrigger() != null || getVmCounterpartyFixedTrigger() != null) {
            TriggerType triggerType = getCounterpartyFixedTrigger() != null? getCounterpartyFixedTrigger() : getVmCounterpartyFixedTrigger();
            if (triggerType.getFixedValues() != null) {
                feedAgreement.setCptytriggertype(new StringType("Fixed"));
                FixedValues fixedValues = triggerType.getFixedValues();
                if (fixedValues.getThreshold() != null) {
                    Threshold threshold = fixedValues.getThreshold();
                    if (threshold.getInfinity() != null) {
                        feedAgreement.setCptyFixedThresholdType(new StringType("Infinity"));
                    }else if (threshold.getFixedAmount() != null) {
                        Money money = threshold.getFixedAmount();
                        feedAgreement.setCptyFixedThresholdType(new StringType("Fixed"));
                        if (money.getAmount() != null)
                            feedAgreement.setCptyFixedThresholdValue(new StringType(money.getAmount().getRealValue()));
                        if (money.getCurrency() != null)
                            feedAgreement.setCptyFixedThresholdCcy(new StringType(money.getCurrency().getRealValue()));
                    }else if (threshold.getPercentageOfNAV() != null) {
                        feedAgreement.setCptyFixedThresholdType(new StringType("Percentage of NAV"));
                        feedAgreement.setCptyFixedThresholdValue(new StringType(threshold.getPercentageOfNAV().getRealValue()));
                    }else if (threshold.getPercentageOfNAVAddIA() != null) {
                        feedAgreement.setCptyFixedThresholdType(new StringType("Percentage of NAV+IA"));
                        feedAgreement.setCptyFixedThresholdValue(new StringType(threshold.getPercentageOfNAVAddIA().getRealValue()));
                    }else if (threshold.getPercentageOfIAAddMTM() != null) {
                        feedAgreement.setCptyFixedThresholdType(new StringType("Percentage of IA+MTM"));
                        feedAgreement.setCptyFixedThresholdValue(new StringType(threshold.getPercentageOfIAAddMTM().getRealValue()));
                    }else if (threshold.getPercentageOfEXPSubstractCOL() != null) {
                        feedAgreement.setCptyFixedThresholdType(new StringType("Percentage of EXP-COL"));
                        feedAgreement.setCptyFixedThresholdValue(new StringType(threshold.getPercentageOfEXPSubstractCOL().getRealValue()));
                    }else if (threshold.getPercentageOfNotional() != null) {
                        feedAgreement.setCptyFixedThresholdType(new StringType("Percentage of Notional"));
                        feedAgreement.setCptyFixedThresholdValue(new StringType(threshold.getPercentageOfNotional().getRealValue()));
                    }
                }
                if (fixedValues.getMinimumTransfer() != null) {
                    MinimumTransfer minimumTransfer = fixedValues.getMinimumTransfer();
                    if (minimumTransfer.getFixedAmount() != null) {
                        Money money = minimumTransfer.getFixedAmount();
                        feedAgreement.setCptyFixedMTAType(new StringType("Fixed"));
                        if (money.getAmount() != null)
                            feedAgreement.setCptyFixedMTAValue(new StringType(money.getAmount().getRealValue()));
                        if (money.getCurrency() != null)
                            feedAgreement.setCptyFixedMtaCcy(new StringType(money.getCurrency().getRealValue()));
                    }else if (minimumTransfer.getPercentageOfNAV() != null) {
                        feedAgreement.setCptyFixedMTAType(new StringType("Percentage of NAV"));
                        feedAgreement.setCptyFixedMTAValue(new StringType(minimumTransfer.getPercentageOfNAV().getRealValue()));
                    }else if (minimumTransfer.getPercentageOfNAVAddIA() != null) {
                        feedAgreement.setCptyFixedMTAType(new StringType("Percentage of NAV+IA"));
                        feedAgreement.setCptyFixedMTAValue(new StringType(minimumTransfer.getPercentageOfNAVAddIA().getRealValue()));
                    }else if (minimumTransfer.getPercentageOfNAVAddThreshold() != null) {
                        feedAgreement.setCptyFixedMTAType(new StringType("Percentage of IA+Threshold"));
                        feedAgreement.setCptyFixedMTAValue(new StringType(minimumTransfer.getPercentageOfNAVAddThreshold().getRealValue()));
                    }else if (minimumTransfer.getPercentageOfIAAddMTM() != null) {
                        feedAgreement.setCptyFixedMTAType(new StringType("Percentage of IA+MTM"));
                        feedAgreement.setCptyFixedMTAValue(new StringType(minimumTransfer.getPercentageOfIAAddMTM().getRealValue()));
                    }else if (minimumTransfer.getPercentageOfEXPSubstractCOL() != null) {
                        feedAgreement.setCptyFixedMTAType(new StringType("Percentage of EXP-COL"));
                        feedAgreement.setCptyFixedMTAValue(new StringType(minimumTransfer.getPercentageOfEXPSubstractCOL().getRealValue()));
                    }else if (minimumTransfer.getPercentageOfNotional() != null) {
                        feedAgreement.setCptyFixedMTAType(new StringType("Percentage of Notional"));
                        feedAgreement.setCptyFixedMTAValue(new StringType(minimumTransfer.getPercentageOfNotional().getRealValue()));
                    }
                }
                if (fixedValues.getRoundingAmount() != null) {
                    Money money = fixedValues.getRoundingAmount();
                    if (money.getAmount() != null)
                        feedAgreement.setCptyFixedRoundingAmount(new StringType(money.getAmount().getRealValue()));
                    if (money.getCurrency() != null)
                        feedAgreement.setCptyFixedRoundingAmountCcy(new StringType(money.getCurrency().getRealValue()));
                }
            }else if (triggerType.getTimeContingentValues() != null) {
                feedAgreement.setCptytriggertype(new StringType("Time"));
            }else if (triggerType.getRatingContingentValues() != null) {
                feedAgreement.setCptytriggertype(new StringType("Rating"));
                RatingRuleTrigger ratingRuleTrigger = triggerType.getRatingContingentValues();
                if (ratingRuleTrigger.getUseCounterpartyRating() != null &amp;&amp; ratingRuleTrigger.getUseCounterpartyRating().getLinkText() != null)
                    feedAgreement.setCptyRatingOrg(new StringType(ratingRuleTrigger.getUseCounterpartyRating().getLinkText().getRealValue()));
                if (ratingRuleTrigger.getReferenceRatingAgencies() != null &amp;&amp; !ratingRuleTrigger.getReferenceRatingAgencies().isEmpty()) {
                    StringBuffer stringBuffer = new StringBuffer();
                    java.util.Iterator&lt;ReferenceRatingAgenciesType&gt; iterator = ratingRuleTrigger.getReferenceRatingAgencies().iterator();
                    while (iterator.hasNext()) {
                        ReferenceRatingAgenciesType referenceRatingAgenciesType = (ReferenceRatingAgenciesType) iterator.next();
                        stringBuffer.append(referenceRatingAgenciesType.value());
                        if (iterator.hasNext())
                            stringBuffer.append(",");
                    }
                    feedAgreement.setCptyReferenceRatingAgencies(new StringType(stringBuffer.toString()));
                }
                if (ratingRuleTrigger.getDebtClassification() != null &amp;&amp; !ratingRuleTrigger.getDebtClassification().isEmpty()) {
                    StringBuffer stringBuffer = new StringBuffer();
                    java.util.Iterator&lt;DebtClassificationType&gt; iterator = ratingRuleTrigger.getDebtClassification().iterator();
                    while (iterator.hasNext()) {
                        DebtClassificationType debtClassificationType = (DebtClassificationType) iterator.next();
                        stringBuffer.append(debtClassificationType.value());
                        if (iterator.hasNext())
                            stringBuffer.append(",");
                    }
                    feedAgreement.setCptyDebtClassification(new StringType(stringBuffer.toString()));
                }
                if (ratingRuleTrigger.getApplicationOfRatings() != null) {
                    if (ApplicationOfRatingsType.IF_NOT_RATED_BY_ANY_AGENCY.equals(ratingRuleTrigger.getApplicationOfRatings()))
                        feedAgreement.setCptyNotRatedAssumeNR(true);
                    else
                        feedAgreement.setCptyApplicationOfRatings(new StringType(ratingRuleTrigger.getApplicationOfRatings().value()));
                }
                if (ratingRuleTrigger.getIfNotRatedByAnyAgency() != null) {
                    feedAgreement.setCptyNotRatedAssumeNR(true);
                }
            }else if (triggerType.getNavContingentValues() != null) {
                feedAgreement.setCptytriggertype(new StringType("NAV"));
            }
        }

        if (getImCounterpartyFixedTrigger() != null) {
            TriggerType triggerType = getImCounterpartyFixedTrigger();
            if (triggerType.getFixedValues() != null) {
                feedAgreement.setCptyIMTriggerType(new StringType("Fixed"));
                FixedValues fixedValues = triggerType.getFixedValues();
                if (fixedValues.getThreshold() != null) {
                    Threshold threshold = fixedValues.getThreshold();
                    if (threshold.getInfinity() != null) {
                        feedAgreement.setCptyIMFixedThresholdType(new StringType("Infinity"));
                    }else if (threshold.getFixedAmount() != null) {
                        Money money = threshold.getFixedAmount();
                        feedAgreement.setCptyIMFixedThresholdType(new StringType("Fixed"));
                        if (money.getAmount() != null)
                            feedAgreement.setCptyIMFixedThresholdValue(new StringType(money.getAmount().getRealValue()));
                        if (money.getCurrency() != null)
                            feedAgreement.setCptyIMFixedThresholdCcy(new StringType(money.getCurrency().getRealValue()));
                    }else if (threshold.getPercentageOfNAV() != null) {
                        feedAgreement.setCptyIMFixedThresholdType(new StringType("Percentage of NAV"));
                        feedAgreement.setCptyIMFixedThresholdValue(new StringType(threshold.getPercentageOfNAV().getRealValue()));
                    }else if (threshold.getPercentageOfNAVAddIA() != null) {
                        feedAgreement.setCptyIMFixedThresholdType(new StringType("Percentage of NAV+IA"));
                        feedAgreement.setCptyIMFixedThresholdValue(new StringType(threshold.getPercentageOfNAVAddIA().getRealValue()));
                    }else if (threshold.getPercentageOfIAAddMTM() != null) {
                        feedAgreement.setCptyIMFixedThresholdType(new StringType("Percentage of IA+MTM"));
                        feedAgreement.setCptyIMFixedThresholdValue(new StringType(threshold.getPercentageOfIAAddMTM().getRealValue()));
                    }else if (threshold.getPercentageOfEXPSubstractCOL() != null) {
                        feedAgreement.setCptyIMFixedThresholdType(new StringType("Percentage of EXP-COL"));
                        feedAgreement.setCptyIMFixedThresholdValue(new StringType(threshold.getPercentageOfEXPSubstractCOL().getRealValue()));
                    }else if (threshold.getPercentageOfNotional() != null) {
                        feedAgreement.setCptyIMFixedThresholdType(new StringType("Percentage of Notional"));
                        feedAgreement.setCptyIMFixedThresholdValue(new StringType(threshold.getPercentageOfNotional().getRealValue()));
                    }
                }
                if (fixedValues.getMinimumTransfer() != null) {
                    MinimumTransfer minimumTransfer = fixedValues.getMinimumTransfer();
                    if (minimumTransfer.getFixedAmount() != null) {
                        Money money = minimumTransfer.getFixedAmount();
                        feedAgreement.setCptyIMFixedMTAType(new StringType("Fixed"));
                        if (money.getAmount() != null)
                            feedAgreement.setCptyIMFixedMTAValue(new StringType(money.getAmount().getRealValue()));
                        if (money.getCurrency() != null)
                            feedAgreement.setCptyIMFixedMtaCcy(new StringType(money.getCurrency().getRealValue()));
                    }else if (minimumTransfer.getPercentageOfNAV() != null) {
                        feedAgreement.setCptyIMFixedMTAType(new StringType("Percentage of NAV"));
                        feedAgreement.setCptyIMFixedMTAValue(new StringType(minimumTransfer.getPercentageOfNAV().getRealValue()));
                    }else if (minimumTransfer.getPercentageOfNAVAddIA() != null) {
                        feedAgreement.setCptyIMFixedMTAType(new StringType("Percentage of NAV+IA"));
                        feedAgreement.setCptyIMFixedMTAValue(new StringType(minimumTransfer.getPercentageOfNAVAddIA().getRealValue()));
                    }else if (minimumTransfer.getPercentageOfNAVAddThreshold() != null) {
                        feedAgreement.setCptyIMFixedMTAType(new StringType("Percentage of IA+Threshold"));
                        feedAgreement.setCptyIMFixedMTAValue(new StringType(minimumTransfer.getPercentageOfNAVAddThreshold().getRealValue()));
                    }else if (minimumTransfer.getPercentageOfIAAddMTM() != null) {
                        feedAgreement.setCptyIMFixedMTAType(new StringType("Percentage of IA+MTM"));
                        feedAgreement.setCptyIMFixedMTAValue(new StringType(minimumTransfer.getPercentageOfIAAddMTM().getRealValue()));
                    }else if (minimumTransfer.getPercentageOfEXPSubstractCOL() != null) {
                        feedAgreement.setCptyIMFixedMTAType(new StringType("Percentage of EXP-COL"));
                        feedAgreement.setCptyIMFixedMTAValue(new StringType(minimumTransfer.getPercentageOfEXPSubstractCOL().getRealValue()));
                    }else if (minimumTransfer.getPercentageOfNotional() != null) {
                        feedAgreement.setCptyIMFixedMTAType(new StringType("Percentage of Notional"));
                        feedAgreement.setCptyIMFixedMTAValue(new StringType(minimumTransfer.getPercentageOfNotional().getRealValue()));
                    }
                }
                if (fixedValues.getRoundingAmount() != null) {
                    Money money = fixedValues.getRoundingAmount();
                    if (money.getAmount() != null)
                        feedAgreement.setCptyIMFixedRoundingAmount(new StringType(money.getAmount().getRealValue()));
                    if (money.getCurrency() != null)
                        feedAgreement.setCptyIMFixedRoundingAmountCcy(new StringType(money.getCurrency().getRealValue()));
                }
            }else if (triggerType.getTimeContingentValues() != null) {
                feedAgreement.setCptyIMTriggerType(new StringType("Time"));
            }else if (triggerType.getRatingContingentValues() != null) {
                feedAgreement.setCptyIMTriggerType(new StringType("Rating"));
                RatingRuleTrigger ratingRuleTrigger = triggerType.getRatingContingentValues();
                if (ratingRuleTrigger.getUseCounterpartyRating() != null &amp;&amp; ratingRuleTrigger.getUseCounterpartyRating().getLinkText() != null)
                    feedAgreement.setCptyIMRatingOrg(new StringType(ratingRuleTrigger.getUseCounterpartyRating().getLinkText().getRealValue()));
                if (ratingRuleTrigger.getReferenceRatingAgencies() != null &amp;&amp; !ratingRuleTrigger.getReferenceRatingAgencies().isEmpty()) {
                    StringBuffer stringBuffer = new StringBuffer();
                    java.util.Iterator&lt;ReferenceRatingAgenciesType&gt; iterator = ratingRuleTrigger.getReferenceRatingAgencies().iterator();
                    while (iterator.hasNext()) {
                        ReferenceRatingAgenciesType referenceRatingAgenciesType = (ReferenceRatingAgenciesType) iterator.next();
                        stringBuffer.append(referenceRatingAgenciesType.value());
                        if (iterator.hasNext())
                            stringBuffer.append(",");
                    }
                    feedAgreement.setCptyIMReferenceRatingAgencies(new StringType(stringBuffer.toString()));
                }
                if (ratingRuleTrigger.getDebtClassification() != null &amp;&amp; !ratingRuleTrigger.getDebtClassification().isEmpty()) {
                    StringBuffer stringBuffer = new StringBuffer();
                    java.util.Iterator&lt;DebtClassificationType&gt; iterator = ratingRuleTrigger.getDebtClassification().iterator();
                    while (iterator.hasNext()) {
                        DebtClassificationType debtClassificationType = (DebtClassificationType) iterator.next();
                        stringBuffer.append(debtClassificationType.value());
                        if (iterator.hasNext())
                            stringBuffer.append(",");
                    }
                    feedAgreement.setCptyIMDebtClassification(new StringType(stringBuffer.toString()));
                }
                if (ratingRuleTrigger.getApplicationOfRatings() != null) {
                    if (ApplicationOfRatingsType.IF_NOT_RATED_BY_ANY_AGENCY.equals(ratingRuleTrigger.getApplicationOfRatings()))
                        feedAgreement.setCptyIMNotRatedAssumeNR(true);
                    else
                        feedAgreement.setCptyIMApplicationOfRatings(new StringType(ratingRuleTrigger.getApplicationOfRatings().value()));
                }
                if (ratingRuleTrigger.getIfNotRatedByAnyAgency() != null) {
                    feedAgreement.setCptyIMNotRatedAssumeNR(true);
                }
            }else if (triggerType.getNavContingentValues() != null) {
                feedAgreement.setCptyIMTriggerType(new StringType("NAV"));
            }
        }
        if (getSettlement() != null)
            feedAgreement.setSettlement(new StringType(getSettlement().value()));
        if (getSettlementBucket() != null &amp;&amp; !getSettlementBucket().isEmpty()) {
            FeedAgreement.SettlementInstructions settlementInstructions = new FeedAgreement.SettlementInstructions();
            List&lt;FeedAgreement.SettlementInstructions.SettlementInstruction&gt; settlementInstructionList = settlementInstructions.getSettlementInstruction();
            for (SettlementBucket settlementBucket : getSettlementBucket()) {
                FeedAgreement.SettlementInstructions.SettlementInstruction settlementInstruction = new FeedAgreement.SettlementInstructions.SettlementInstruction();
                if (settlementBucket.getModel() != null) {
                    ModelCategoryType modelCategoryType = settlementBucket.getModel();
                    if (modelCategoryType.getModelName() != null)
                        settlementInstruction.setModelName(new StringType(modelCategoryType.getModelName().getRealValue()));
                    if (modelCategoryType.getModelCategory() != null)
                        settlementInstruction.setModelCategory(new StringType(modelCategoryType.getModelCategory().getRealValue()));
                }
                if (settlementBucket.getBookingType() != null)
                    settlementInstruction.setBookingType(new StringType(settlementBucket.getBookingType().value()));
                if (settlementBucket.getComponent() != null)
                    settlementInstruction.setComponent(new StringType(settlementBucket.getComponent().value()));
                if (settlementBucket.getDirection() != null)
                    settlementInstruction.setDirection(new StringType(settlementBucket.getDirection().value()));
                if (settlementBucket.getBucket() != null &amp;&amp; settlementBucket.getBucket().getLinkText() != null)
                    settlementInstruction.setBucket(new StringType(settlementBucket.getBucket().getLinkText().getRealValue()));
                settlementInstructionList.add(settlementInstruction);
            }
            feedAgreement.setSettlementInstructions(settlementInstructions);
        }
//        protected ApplyThresholdMTARoundingType applyThresholdMTARounding;
//        protected List&lt;Field&gt; additionalField;
//        protected List&lt;SubAgreementSearch&gt; subAgreement;
        if (getLetterDistributionMedium() != null &amp;&amp; !getLetterDistributionMedium().isEmpty()) {
            StringBuffer stringBuffer = new StringBuffer();
            java.util.Iterator&lt;LetterDistributionMediumType&gt; iterator = getLetterDistributionMedium().iterator();
            while (iterator.hasNext()) {
                LetterDistributionMediumType letterDistributionMediumType = (LetterDistributionMediumType) iterator.next();
                stringBuffer.append(letterDistributionMediumType.value());
                if (iterator.hasNext())
                    stringBuffer.append(",");
            }
            feedAgreement.setDistMedium(new StringType(stringBuffer.toString()));
        }
        if (getLetterAndDeliveryGroupDetails() != null) {
            LetterAndDeliveryGroupDetail letterAndDeliveryGroupDetail = getLetterAndDeliveryGroupDetails();
            if (letterAndDeliveryGroupDetail.getPricipalDeliveryGroup() != null &amp;&amp; !letterAndDeliveryGroupDetail.getPricipalDeliveryGroup().isEmpty()) {
                StringBuffer stringBuffer = new StringBuffer();
                java.util.Iterator&lt;OrganisationSearch&gt; iterator = letterAndDeliveryGroupDetail.getPricipalDeliveryGroup().iterator();
                while (iterator.hasNext()) {
                    OrganisationSearch organisationSearch = (OrganisationSearch) iterator.next();
                    if (organisationSearch.getLinkText() != null)
                        stringBuffer.append(organisationSearch.getLinkText().getRealValue());
                    if (iterator.hasNext())
                        stringBuffer.append(",");
                }
                feedAgreement.setDeliveryGroup(new StringType(stringBuffer.toString()));
            }
            if (letterAndDeliveryGroupDetail.getNotificationLetterType() != null)
                feedAgreement.setNotifLetterType(new StringType(letterAndDeliveryGroupDetail.getNotificationLetterType().getRealValue()));
            if (letterAndDeliveryGroupDetail.getLetterTemplateType() != null)
                feedAgreement.setLetterTemplateType(new StringType(letterAndDeliveryGroupDetail.getLetterTemplateType().getRealValue()));
            if (letterAndDeliveryGroupDetail.getExposureStatementTemplateType() != null)
                feedAgreement.setExposureTemplateType(new StringType(letterAndDeliveryGroupDetail.getExposureStatementTemplateType().getRealValue()));
            if (letterAndDeliveryGroupDetail.getLetterDistributionMedium() != null &amp;&amp; !letterAndDeliveryGroupDetail.getLetterDistributionMedium().isEmpty()) {
                StringBuffer stringBuffer = new StringBuffer();
                java.util.Iterator&lt;LetterDistributionMediumType&gt; iterator = letterAndDeliveryGroupDetail.getLetterDistributionMedium().iterator();
                while (iterator.hasNext()) {
                    LetterDistributionMediumType letterDistributionMediumType = (LetterDistributionMediumType) iterator.next();
                    stringBuffer.append(letterDistributionMediumType.value());
                    if (iterator.hasNext())
                        stringBuffer.append(",");
                }
                if (feedAgreement.getDistMedium() == null)
                    feedAgreement.setDistMedium(new StringType(stringBuffer.toString()));
            }
            if (letterAndDeliveryGroupDetail.getInventoryDeliveryGroup() != null)
                feedAgreement.setInventoryDeliveryGroup(new StringType(letterAndDeliveryGroupDetail.getInventoryDeliveryGroup().getRealValue()));
            if (letterAndDeliveryGroupDetail.getLetterAttachmentMedium() != null &amp;&amp; !letterAndDeliveryGroupDetail.getLetterAttachmentMedium().isEmpty()) {
                StringBuffer stringBuffer = new StringBuffer();
                java.util.Iterator&lt;StringType&gt; iterator = letterAndDeliveryGroupDetail.getLetterAttachmentMedium().iterator();
                while (iterator.hasNext()) {
                    StringType stringType = (StringType)iterator.next();
                    stringBuffer.append(stringType.getRealValue());
                    if (iterator.hasNext())
                        stringBuffer.append(",");
                }
                feedAgreement.setLetterAttachMedium(new StringType(stringBuffer.toString()));
            }
//            protected List&lt;StringType&gt; messageWorkflow;
        }
        if (getPayFourEyeConditions() != null) {
            FourEyeCondition fourEyeCondition = getPayFourEyeConditions();
            if (fourEyeCondition.getConditionRule() != null)
                feedAgreement.setConditionRule(new StringType(fourEyeCondition.getConditionRule().value()));
            if (fourEyeCondition.getFixedValue() != null) {
                Money money = fourEyeCondition.getFixedValue();
                if (money.getAmount() != null)
                    feedAgreement.setConditionFixedAmount(new StringType(money.getAmount().getRealValue()));
                if (money.getCurrency() != null)
                    feedAgreement.setConditionFixedCcy(new StringType(money.getCurrency().getRealValue()));
            }
            if (fourEyeCondition.getPercentageOftotalExposure() != null)
                feedAgreement.setConditionPercentageOfTotalExposure(new StringType(fourEyeCondition.getPercentageOftotalExposure().getRealValue()));
        }
        if (getReceiveFourEyeConditions() != null) {
            FourEyeCondition fourEyeCondition = getReceiveFourEyeConditions();
            if (fourEyeCondition.getConditionRule() != null)
                feedAgreement.setConditionRuleReceive(new StringType(fourEyeCondition.getConditionRule().value()));
            if (fourEyeCondition.getFixedValue() != null) {
                Money money = fourEyeCondition.getFixedValue();
                if (money.getAmount() != null)
                    feedAgreement.setConditionFixedAmountReceive(new StringType(money.getAmount().getRealValue()));
                if (money.getCurrency() != null)
                    feedAgreement.setConditionFixedCcyReceive(new StringType(money.getCurrency().getRealValue()));
            }
            if (fourEyeCondition.getPercentageOftotalExposure() != null)
                feedAgreement.setConditionPercentageOfTotalExposureReceive(new StringType(fourEyeCondition.getPercentageOftotalExposure().getRealValue()));
        }
        if (getDistributionTask() != null &amp;&amp; !getDistributionTask().isEmpty()) {
            List&lt;FeedAgreement.ReportFreq&gt; reportFreqList = feedAgreement.getReportFreq();
            for (DistributionTask distributionTask : getDistributionTask()) {
                FeedAgreement.ReportFreq reportFreq = new FeedAgreement.ReportFreq();
                if (distributionTask.getDistributionTaskName() != null)
                    reportFreq.setExternalFrequencyName(new StringType(distributionTask.getDistributionTaskName().getRealValue()));
                if (distributionTask.getReport() != null) {
                    StatementIncludeReport statementIncludeReport = distributionTask.getReport();
                    FeedAgreement.ReportFreq.Report report = new FeedAgreement.ReportFreq.Report();
                    if (statementIncludeReport.getDailyExposure() != null) {
                        report.setReportType(new StringType("Daily Exposure"));
                        report.setReportTemplate(new StringType(statementIncludeReport.getDailyExposure().getRealValue()));
                    }else if (statementIncludeReport.getExposures() != null) {
                        report.setReportType(new StringType("Exposures"));
                        report.setReportTemplate(new StringType(statementIncludeReport.getExposures().getRealValue()));
                    }else if (statementIncludeReport.getReconciliationTradesOutput() != null) {
                        report.setReportType(new StringType("Reconciliation Trades Output"));
                        report.setReportTemplate(new StringType(statementIncludeReport.getReconciliationTradesOutput().getRealValue()));
                    }else if (statementIncludeReport.getAssetHoldingsandValuation() != null) {
                        report.setReportType(new StringType("Asset Holdings and Valuation"));
                        report.setReportTemplate(new StringType(statementIncludeReport.getAssetHoldingsandValuation().getRealValue()));
                    }
                    reportFreq.setReport(report);
                }
                if (distributionTask.getFrequency() != null)
                    reportFreq.setFrequency(new StringType(distributionTask.getFrequency().value()));
                if (distributionTask.getBusinessAdjustType() != null)
                    reportFreq.setBusinessAdjustType(new StringType(distributionTask.getBusinessAdjustType().value()));
                if (distributionTask.getFrequencyStart() != null)
                    reportFreq.setFrequencyStart(new StringType(distributionTask.getFrequencyStart().getRealValue()));
                if (distributionTask.getMedium() != null &amp;&amp; !distributionTask.getMedium().isEmpty()) {
                    StringBuffer stringBuffer = new StringBuffer();
                    java.util.Iterator&lt;LetterDistributionMediumType&gt; iterator = distributionTask.getMedium().iterator();
                    while (iterator.hasNext()) {
                        LetterDistributionMediumType letterDistributionMediumType = (LetterDistributionMediumType) iterator.next();
                        stringBuffer.append(letterDistributionMediumType.value());
                        if (iterator.hasNext())
                            stringBuffer.append(",");
                    }
                    reportFreq.setMedium(new StringType(stringBuffer.toString()));
                }
                if (distributionTask.getPrincipalContact() != null) {
                    PartyBranchInformation partyBranchInformation = distributionTask.getPrincipalContact();
                    if (partyBranchInformation.getPrimaryContact() != null)
                        reportFreq.setPrincipalContact(new StringType(partyBranchInformation.getPrimaryContact().getRealValue()));
                }
                if (distributionTask.getCounterpartyContact() != null) {
                    PartyBranchInformation partyBranchInformation = distributionTask.getCounterpartyContact();
                    if (partyBranchInformation.getPrimaryContact() != null)
                        reportFreq.setCptyContact(new StringType(partyBranchInformation.getPrimaryContact().getRealValue()));
                }
                reportFreqList.add(reportFreq);
            }
        }
        if (getLetterAttachment() != null &amp;&amp; !getLetterAttachment().isEmpty()) {
            LetterAttachment letterAttachment = getLetterAttachment().get(0);
            FeedAgreement.LettersAttachments lettersAttachments = new FeedAgreement.LettersAttachments();
            FeedAgreement.LettersAttachments.Letter letter = new FeedAgreement.LettersAttachments.Letter();
            if (letterAttachment.getLetterAttachmentReportType() != null)
                letter.setLetterType(new StringType(letterAttachment.getLetterAttachmentReportType().value()));
            if (letterAttachment.getLetterAttachmentDetail() != null &amp;&amp; !letterAttachment.getLetterAttachmentDetail().isEmpty()) {
                LetterAttachmentDetail letterAttachmentDetail = letterAttachment.getLetterAttachmentDetail().get(0);
                if (letterAttachmentDetail.getIncludeReport() != null)
                    letter.setReportType(new StringType(letterAttachmentDetail.getIncludeReport().getRealValue()));
                if (letterAttachmentDetail.getAttachedTemplate() != null &amp;&amp; letterAttachmentDetail.getAttachedTemplate().getLinkText() != null)
                    letter.setReportTemplate(letterAttachmentDetail.getAttachedTemplate().getLinkText());
//                protected List&lt;AttachedFormatType&gt; attachedFormat;
            }
            lettersAttachments.setLetter(letter);
            feedAgreement.setLettersAttachments(lettersAttachments);
        }
        if (getStp() != null) {
            feedAgreement.setEnableSTP(new StringType(getStp().value()));
        }
        if (getStatementSetName() != null)
            feedAgreement.setStatementSetName(new StringType(getStatementSetName().getRealValue()));
//        protected List&lt;StatementIncludeReport&gt; statementIncludeReport;
//        protected List&lt;StringType&gt; attachedFormat;
//        protected List&lt;StringType&gt; formSearch;
//        protected StringType agreementId;
        return feedAgreement;
    }

    private void convertAssetClassToFeedObject(FeedAgreement feedAgreement, List&lt;CollateralAssetClass&gt; collateralAssetClassList, java.lang.String applicableParty, java.lang.String applicableType) {
        if (collateralAssetClassList != null &amp;&amp; !collateralAssetClassList.isEmpty()) {
            FeedAgreement.AssetClasses assetClasses = feedAgreement.getAssetClasses() != null ? feedAgreement.getAssetClasses() : new FeedAgreement.AssetClasses();
            List&lt;FeedAgreement.AssetClasses.AssetClass&gt; assetClassList = assetClasses.getAssetClass();
            for (CollateralAssetClass collateralAssetClass : getCollateralAssetClass()) {
                FeedAgreement.AssetClasses.AssetClass assetClass = new FeedAgreement.AssetClasses.AssetClass();
                if (collateralAssetClass.getCollateralAssetClassName() != null)
                    assetClass.setAssetClassName(
                            new StringType(collateralAssetClass.getCollateralAssetClassName().getRealValue()));
                convertAssetClassConcentrationRulesToFeedAgreement(collateralAssetClass.getConcentrationLimitRule(),
                        assetClass.getConcentrationRules(), applicableParty, applicableType);
                if (collateralAssetClass.getAutoBookingRule() != null &amp;&amp; !collateralAssetClass.getAutoBookingRule().isEmpty()) {
                    List&lt;FeedAgreement.AutoBookingRules&gt; autoBookingRulesList = feedAgreement.getAutoBookingRules();
                    for (AutoBookingRule abr : collateralAssetClass.getAutoBookingRule()) {
                        FeedAgreement.AutoBookingRules autoBookingRule = new FeedAgreement.AutoBookingRules();
                        if (abr.getAssetType() != null)
                            autoBookingRule.setAssetType(new StringType(abr.getAssetType().getRealValue()));
                        if (abr.getApplicableTo() != null)
                            autoBookingRule.setApplicableTo(new StringType(abr.getApplicableTo().value()));
                        if (abr.getTolerance() != null)
                            autoBookingRule.setTolerance(new StringType(abr.getTolerance().value()));
                        if (abr.getValue() != null)
                            autoBookingRule.setValue(new StringType(abr.getValue().value()));
                        if (abr.getAmount() != null)
                            autoBookingRule.setToleranceAmount(new StringType(abr.getAmount().getRealValue()));
                        if (abr.getMovement() != null &amp;&amp; !abr.getMovement().isEmpty()) {
                            StringBuffer stringBuffer = new StringBuffer();
                            java.util.Iterator&lt;BookingMovementType&gt; iterator = abr.getMovement().iterator();
                            while (iterator.hasNext()) {
                                BookingMovementType bookingMovementType = (BookingMovementType) iterator.next();
                                stringBuffer.append(bookingMovementType.value());
                                if (iterator.hasNext())
                                    stringBuffer.append(",");
                            }
                            autoBookingRule.setMovement(new StringType(stringBuffer.toString()));
                        }
                        if (abr.getBookingStatus() != null)
                            autoBookingRule.setBookingStatus(new StringType(abr.getBookingStatus().value()));
                        if (Boolean.TRUE.equals(abr.isCreateWithLetter()))
                            autoBookingRule.setCreateWithLetter(new StringType(Boolean.TRUE.toString()));
                    }
                }
                if (collateralAssetClass.getCollateralAssetType() != null &amp;&amp; !collateralAssetClass.getCollateralAssetType().isEmpty()) {
                    List&lt;FeedAgreement.Asset&gt; assetList = feedAgreement.getAsset();
                    for (CollateralAssetType collateralAssetType : collateralAssetClass.getCollateralAssetType()) {
                        FeedAgreement.Asset asset = new FeedAgreement.Asset();
                        asset.setApplicableParty(new StringType(applicableParty));
                        asset.setApplicableType(new StringType(applicableType));
                        if (collateralAssetType.getCollateralAssetTypeName() != null)
                            asset.setAssetName(
                                    new StringType(collateralAssetType.getCollateralAssetTypeName().getRealValue()));
                        if (collateralAssetType.getTemplateVsAgreementEligibilityRules() != null)
                            asset.setTemplateVsAgreementEligibilityRule(new StringType(
                                    collateralAssetType.getTemplateVsAgreementEligibilityRules().getRealValue()));
//                        protected StringType operation;
                        if (collateralAssetType.getSettlementDate() != null)
                            asset.setSettlementDateAbbriviated(
                                    new StringType(collateralAssetType.getSettlementDate().getRealValue()));
                        if (collateralAssetType.getDeliveryPriority() != null)
                            asset.setDeliveryPriority(
                                    new StringType(collateralAssetType.getDeliveryPriority().value()));
                        if (collateralAssetType.getRecallPriority() != null)
                            asset.setRecallPriority(new StringType(collateralAssetType.getRecallPriority().value()));
                        if (collateralAssetType.getAssetNote1() != null)
                            asset.setNotes(new StringType(collateralAssetType.getAssetNote1().getRealValue()));
                        if (collateralAssetType.getAssetNote2() != null)
                            asset.setNotes2(new StringType(collateralAssetType.getAssetNote2().getRealValue()));
                        if (collateralAssetType.getAssetNote3() != null)
                            asset.setNotes3(new StringType(collateralAssetType.getAssetNote3().getRealValue()));
//                        asset.setInternalReusePolicy(new StringType());
                        convertAssetTypeConcentrationRulesToFeedAgreement(
                                collateralAssetType.getConcentrationLimitRule(), asset.getConcentrationRules());
                        if (collateralAssetType.getHaircutRule() != null) {
                            HaircutRule haircutRule = collateralAssetType.getHaircutRule();
                            convertAssetTypeHaircutAdjustment(haircutRule.getHaircutAdjustment(),
                                    asset.getHaircutAdjustments(), applicableParty, applicableType);
                            if (haircutRule.getHaircutSchedule() != null) {
                                HaircutSchedule haircutSchedule = haircutRule.getHaircutSchedule();
                                if (HaircutRuleType.FIXED.equals(
                                        haircutSchedule.getHaircutRule()) || haircutSchedule.getFixedValuation() != null) {
                                    asset.setFixedVal(true);
                                    if (haircutSchedule.getFixedValuation() != null)
                                        asset.setValuePercent(
                                                new StringType(haircutSchedule.getFixedValuation().getRealValue()));
                                } else {
                                    if (haircutSchedule.getLeftvaluationBasis() != null)
                                        asset.setValueBasis(
                                                new StringType(haircutSchedule.getLeftvaluationBasis().getRealValue()));
                                    if (haircutSchedule.getRightvaluationBasis() != null)
                                        asset.setValueBasis2(new StringType(
                                                haircutSchedule.getRightvaluationBasis().getRealValue()));
                                    if (haircutSchedule.getLeftApply() != null)
                                        asset.setRatingMethod(
                                                new StringType(haircutSchedule.getLeftApply().getRealValue()));
                                    if (haircutSchedule.getRightApply() != null)
                                        asset.setRatingMethod2(
                                                new StringType(haircutSchedule.getRightApply().getRealValue()));
                                    convertTimeBasedHaircutScheduleToFeedAgreement(
                                            haircutSchedule.getLeftValuationBasisRuleDetail(), asset.getTimeBasedVal());
                                    convertTimeBasedHaircutScheduleToFeedAgreement2(
                                            haircutSchedule.getRightValuationBasisRuleDetail(),
                                            asset.getTimeBasedVal2());
                                }
                            }
                        }
                        convertAssetTypeEligibilityRuleToFeedAgreement(collateralAssetType.getEligibilityRule(), asset);
                        if (collateralAssetType.getInterestRule() != null) {
                            InterestRule interestRule = collateralAssetType.getInterestRule();
                            if (interestRule.getAgreementRate() != null)
                                asset.setCashRate(new StringType(interestRule.getAgreementRate().getRealValue()));
                            if (interestRule.getBpSpread() != null &amp;&amp; !interestRule.getBpSpread().isEmpty()) {
                                List&lt;FeedAgreement.Asset.BpSpread&gt; bpSpreadList = asset.getBpSpread();
                                for (BpSpread bps : interestRule.getBpSpread()) {
                                    FeedAgreement.Asset.BpSpread bpSpread = new FeedAgreement.Asset.BpSpread();
                                    if (bps.getEffectiveDate() != null)
                                        bpSpread.setEffectivedate(
                                                new StringType(bps.getEffectiveDate().getRealValue()));
                                    if (bps.getEffectiveValue() != null)
                                        bpSpread.setEffectivevalue(
                                                new StringType(bps.getEffectiveValue().getRealValue()));
                                    bpSpreadList.add(bpSpread);
                                }
                            }
                            if (interestRule.getReinvestRate() != null)
                                asset.setReinvestRate(new StringType(interestRule.getReinvestRate().getRealValue()));
                        }
                        if (collateralAssetType.getWhtRule() != null) {
                            WhtRule whtRule = collateralAssetType.getWhtRule();
                            if (whtRule.getWhtRate() != null)
                                asset.setWhtRate(new StringType(whtRule.getWhtRate().getRealValue()));
                            if (whtRule.getWhtApplied() != null &amp;&amp; !whtRule.getWhtApplied().isEmpty()) {
                                List&lt;FeedAgreement.Asset.Wht&gt; whtList = asset.getWht();
                                for (WhtApplied wa : whtRule.getWhtApplied()) {
                                    FeedAgreement.Asset.Wht wht = new FeedAgreement.Asset.Wht();
                                    if (wa.getEffectiveDate() != null)
                                        wht.setEffectivedate(new StringType(wa.getEffectiveDate().getRealValue()));
                                    if (Boolean.TRUE.equals(wa.isCheck()) || Boolean.TRUE.equals(wa.isApplied()))
                                        wht.setApplied(true);
                                    whtList.add(wht);
                                }
                            }
                        }
                        assetList.add(asset);
                    }
                }
                assetClass.setApplicableParty(new StringType(applicableParty));
                assetClass.setApplicableType(new StringType(applicableType));
                assetClassList.add(assetClass);
            }
            feedAgreement.setAssetClasses(assetClasses);
        }
    }

    private void convertTimeBasedHaircutScheduleToFeedAgreement(List&lt;TimeBasedHairCutSchedule&gt; timeBasedHairCutScheduleList, List&lt;FeedAgreement.Asset.TimeBasedVal&gt; timeBasedValList) {
        if (timeBasedHairCutScheduleList != null &amp;&amp; !timeBasedHairCutScheduleList.isEmpty()) {
            for (TimeBasedHairCutSchedule timeBasedHairCutSchedule : timeBasedHairCutScheduleList) {
                FeedAgreement.Asset.TimeBasedVal timeBasedVal = new FeedAgreement.Asset.TimeBasedVal();
                if (timeBasedHairCutSchedule.getRatingInfo() != null) {
                    RatingInfo ratingInfo = timeBasedHairCutSchedule.getRatingInfo();
                    if (ratingInfo.getRatingFrom() != null)
                        timeBasedVal.setFromRatingLevel(new StringType(ratingInfo.getRatingFrom().getRealValue()));
                    if (ratingInfo.getRatingTo() != null)
                        timeBasedVal.setToRatingLevel(new StringType(ratingInfo.getRatingTo().getRealValue()));
                }
                if (timeBasedHairCutSchedule.getTimeInfo() != null &amp;&amp; !timeBasedHairCutSchedule.getTimeInfo().isEmpty()) {
                    TimeInfo timeInfo = timeBasedHairCutSchedule.getTimeInfo().get(0);
                    if (timeInfo.getTimeFrom() != null)
                        timeBasedVal.setFromTime(new StringType(timeInfo.getTimeFrom().getRealValue()));
                    if (timeInfo.getTimeTo() != null)
                        timeBasedVal.setToTime(new StringType(timeInfo.getTimeTo().getRealValue()));
                    if (timeInfo.getTimePercentage() != null)
                        timeBasedVal.setValuationPerc(new StringType(timeInfo.getTimePercentage().getRealValue()));
                }
                timeBasedValList.add(timeBasedVal);
            }
        }
    }

    private void convertTimeBasedHaircutScheduleToFeedAgreement2(List&lt;TimeBasedHairCutSchedule&gt; timeBasedHairCutScheduleList, List&lt;FeedAgreement.Asset.TimeBasedVal2&gt; timeBasedValList) {
        if (timeBasedHairCutScheduleList != null &amp;&amp; !timeBasedHairCutScheduleList.isEmpty()) {
            for (TimeBasedHairCutSchedule timeBasedHairCutSchedule : timeBasedHairCutScheduleList) {
                FeedAgreement.Asset.TimeBasedVal2 timeBasedVal = new FeedAgreement.Asset.TimeBasedVal2();
                if (timeBasedHairCutSchedule.getRatingInfo() != null) {
                    RatingInfo ratingInfo = timeBasedHairCutSchedule.getRatingInfo();
                    if (ratingInfo.getRatingFrom() != null)
                        timeBasedVal.setFromRatingLevel(new StringType(ratingInfo.getRatingFrom().getRealValue()));
                    if (ratingInfo.getRatingTo() != null)
                        timeBasedVal.setToRatingLevel(new StringType(ratingInfo.getRatingTo().getRealValue()));
                }
                if (timeBasedHairCutSchedule.getTimeInfo() != null &amp;&amp; !timeBasedHairCutSchedule.getTimeInfo().isEmpty()) {
                    TimeInfo timeInfo = timeBasedHairCutSchedule.getTimeInfo().get(0);
                    if (timeInfo.getTimeFrom() != null)
                        timeBasedVal.setFromTime(new StringType(timeInfo.getTimeFrom().getRealValue()));
                    if (timeInfo.getTimeTo() != null)
                        timeBasedVal.setToTime(new StringType(timeInfo.getTimeTo().getRealValue()));
                    if (timeInfo.getTimePercentage() != null)
                        timeBasedVal.setValuationPerc(new StringType(timeInfo.getTimePercentage().getRealValue()));
                }
                timeBasedValList.add(timeBasedVal);
            }
        }
    }

    private void convertAssetTypeEligibilityRuleToFeedAgreement(EligibilityRule eligibilityRule, FeedAgreement.Asset asset) {
        if (eligibilityRule != null) {
            List&lt;FeedAgreement.Asset.Eligibility&gt; eligibilityList = asset.getEligibility();
            if (eligibilityRule.getMinimumEligibilityRating() != null &amp;&amp; !eligibilityRule.getMinimumEligibilityRating().isEmpty()) {
                List&lt;FeedAgreement.Asset.Rating&gt; ratingList = asset.getRating();
                for (OrganisationRating organisationRating : eligibilityRule.getMinimumEligibilityRating()) {
                    FeedAgreement.Asset.Rating rating = new FeedAgreement.Asset.Rating();
                    if (organisationRating.getAgency() != null)
                        rating.setMinAgency(new StringType(organisationRating.getAgency().getRealValue()));
                    if (organisationRating.getRating() != null)
                        rating.setMinRating(new StringType(organisationRating.getRating().getRealValue()));
                    ratingList.add(rating);
                }
            }
            if (eligibilityRule.getRatingEligibilityMethod() != null) {
                asset.setEligMethod(new StringType(eligibilityRule.getRatingEligibilityMethod().getRealValue()));
            }
            FeedAgreement.Asset.Eligibility eligibility = new FeedAgreement.Asset.Eligibility();
            if (eligibilityRule.getMinEligibilityCqs() != null)
                eligibility.setMiniEligiblityCQS(new StringType(eligibilityRule.getMinEligibilityCqs().getRealValue()));
            if (eligibilityRule.getIssueDate() != null)
                eligibility.setEligIssueDate(new StringType(eligibilityRule.getIssueDate().getRealValue()));
            if (eligibilityRule.getMaturityBasis() != null)
                eligibility.setEligIssueMaturityType(new StringType(eligibilityRule.getMaturityBasis().getRealValue()));
            if (eligibilityRule.getMaturityTimeValue() != null)
                eligibility.setEligIssueMaturityLessThan(
                        new StringType(eligibilityRule.getMaturityTimeValue().getRealValue()));
            if (eligibilityRule.getMaturityTimeType() != null)
                eligibility.setEligIssueMaturityPeriodType(
                        new StringType(eligibilityRule.getMaturityTimeType().getRealValue()));
            if (eligibilityRule.getRoleCorrelation() != null &amp;&amp; !eligibilityRule.getRoleCorrelation().isEmpty()) {
                StringBuffer stringBuffer = new StringBuffer();
                java.util.Iterator&lt;StringType&gt; iterator = eligibilityRule.getRoleCorrelation().iterator();
                while (iterator.hasNext()) {
                    StringType stringType = (StringType) iterator.next();
                    stringBuffer.append(stringType.getRealValue());
                    if (iterator.hasNext())
                        stringBuffer.append(",");
                }
                eligibility.setEligRoleCorrelation(new StringType(stringBuffer.toString()));
            }
            if (Boolean.TRUE.equals(eligibilityRule.isUltimateParentCorrelation()))
                eligibility.setEligUltimateParentCorrelation(new StringType(Boolean.TRUE.toString()));
            if (Boolean.TRUE.equals(eligibilityRule.isCloseLinkCorrelation()))
                eligibility.setEligCloseLinkCorrelation(new StringType(Boolean.TRUE.toString()));
            if (Boolean.TRUE.equals(eligibilityRule.isIndustryCorrelation()))
                eligibility.setEligIndustryCorrelation(new StringType(Boolean.TRUE.toString()));
            if (eligibilityRule.getUdfRule() != null &amp;&amp; !eligibilityRule.getUdfRule().isEmpty()) {
                List&lt;FeedAgreement.Asset.Eligibility.UdfRule&gt; udfRuleList = eligibility.getUdfRule();
                for (UdfRule ur : eligibilityRule.getUdfRule()) {
                    FeedAgreement.Asset.Eligibility.UdfRule udfRule = new FeedAgreement.Asset.Eligibility.UdfRule();
                    if (ur.getSecurityUdf() != null)
                        udfRule.setField(new StringType(ur.getSecurityUdf().getRealValue()));
                    if (ur.getEligibilityRule() != null)
                        udfRule.setRule(new StringType(ur.getEligibilityRule().getRealValue()));
                    if (ur.getValue() != null &amp;&amp; !ur.getValue().isEmpty()) {
                        List&lt;StringType&gt; udfValueList = udfRule.getValue();
                        for (StringType stringType : ur.getValue()) {
                            udfValueList.add(new StringType(stringType.getRealValue()));
                        }
                    }
                    if (ur.getCurrency() != null)
                        udfRule.setUdfRuleCcy(new StringType(ur.getCurrency().getRealValue()));
                    udfRuleList.add(udfRule);
                }
            }
            if (eligibilityRule.getEligibleCurrency() != null &amp;&amp; !eligibilityRule.getEligibleCurrency().isEmpty()) {
                StringBuffer stringBuffer = new StringBuffer();
                java.util.Iterator&lt;StringType&gt; iterator = eligibilityRule.getEligibleCurrency().iterator();
                while (iterator.hasNext()) {
                    StringType stringType = (StringType) iterator.next();
                    stringBuffer.append(stringType.getRealValue());
                    if (iterator.hasNext())
                        stringBuffer.append(",");
                }
                eligibility.setEligCcy(new StringType(stringBuffer.toString()));
            }
            if (eligibilityRule.getEligibleCountry() != null &amp;&amp; !eligibilityRule.getEligibleCountry().isEmpty()) {
                StringBuffer stringBuffer = new StringBuffer();
                java.util.Iterator&lt;StringType&gt; iterator = eligibilityRule.getEligibleCountry().iterator();
                while (iterator.hasNext()) {
                    StringType stringType = (StringType) iterator.next();
                    stringBuffer.append(stringType.getRealValue());
                    if (iterator.hasNext())
                        stringBuffer.append(",");
                }
                eligibility.setEligCountry(new StringType(stringBuffer.toString()));
            }
            if (eligibilityRule.getEligibleIssuer() != null &amp;&amp; !eligibilityRule.getEligibleIssuer().isEmpty()) {
                StringBuffer stringBuffer = new StringBuffer();
                java.util.Iterator&lt;EligibleIssuerSimpleSearch&gt; iterator = eligibilityRule.getEligibleIssuer().iterator();
                while (iterator.hasNext()) {
                    EligibleIssuerSimpleSearch eligibleIssuerSimpleSearch = iterator.next();
                    if (eligibleIssuerSimpleSearch.getLinkText() != null)
                        stringBuffer.append(eligibleIssuerSimpleSearch.getLinkText().getRealValue());
                    if (iterator.hasNext())
                        stringBuffer.append(",");
                }
                eligibility.setEligIssuer(new StringType(stringBuffer.toString()));
            }
            if (eligibilityRule.getExcludeInstrument() != null &amp;&amp; !eligibilityRule.getExcludeInstrument().isEmpty()) {
                StringBuffer stringBuffer = new StringBuffer();
                java.util.Iterator&lt;SimpleSearch&gt; iterator = eligibilityRule.getExcludeInstrument().iterator();
                while (iterator.hasNext()) {
                    SimpleSearch simpleSearch = iterator.next();
                    if (simpleSearch.getLinkText() != null)
                        stringBuffer.append(simpleSearch.getLinkText().getRealValue());
                    if (iterator.hasNext())
                        stringBuffer.append(",");
                }
                eligibility.setEligExcInstrument(new StringType(stringBuffer.toString()));
            }
            eligibilityList.add(eligibility);
        }
    }

    private void convertAssetTypeHaircutAdjustment(List&lt;HaircutAdjustment&gt; haircutRule, List&lt;FeedAgreement.Asset.HaircutAdjustments&gt; haircutAdjustmentsList, java.lang.String applicableParty, java.lang.String applicableType) {
        if (haircutRule != null &amp;&amp; !haircutRule.isEmpty()) {
            if (haircutAdjustmentsList.isEmpty())
                haircutAdjustmentsList.add(new FeedAgreement.Asset.HaircutAdjustments());
            List&lt;FeedAgreement.Asset.HaircutAdjustments.HaircutAdjustment&gt; haircutAdjustmentList = haircutAdjustmentsList.get(
                    0).getHaircutAdjustment();
            for (HaircutAdjustment adjustment : haircutRule) {
                FeedAgreement.Asset.HaircutAdjustments.HaircutAdjustment haircutAdjustment = new FeedAgreement.Asset.HaircutAdjustments.HaircutAdjustment();
                if (adjustment.getType() != null)
                    haircutAdjustment.setAdjustmentType(new StringType(adjustment.getType().getRealValue()));
                if (adjustment.getInstrumentField() != null)
                    haircutAdjustment.setInstrumentField(
                            new StringType(adjustment.getInstrumentField().getRealValue()));
                if (adjustment.getRule() != null)
                    haircutAdjustment.setRule(new StringType(adjustment.getRule().getRealValue()));
                if (adjustment.getValue() != null &amp;&amp; !adjustment.getValue().isEmpty()) {
                    StringBuffer stringBuffer = new StringBuffer();
                    java.util.Iterator&lt;SimpleSearch&gt; iterator = adjustment.getValue().iterator();
                    while (iterator.hasNext()) {
                        SimpleSearch simpleSearch = (SimpleSearch) iterator.next();
                        if (simpleSearch.getLinkText() != null)
                            stringBuffer.append(simpleSearch.getLinkText().getRealValue());
                        if (iterator.hasNext())
                            stringBuffer.append(",");
                    }
                    haircutAdjustment.setValue(new StringType(stringBuffer.toString()));
                }
//                protected StringType operation;
                if (adjustment.getValuationPercentage() != null)
                    haircutAdjustment.setValuePercentage(
                            new StringType(adjustment.getValuationPercentage().getRealValue()));
                haircutAdjustmentList.add(haircutAdjustment);
            }
        }
    }

    private void convertAssetTypeConcentrationRulesToFeedAgreement(List&lt;ConcentrationLimitRule&gt; concentrationLimitRuleList, FeedAgreement.Asset.ConcentrationRules cr) {
        if (concentrationLimitRuleList != null &amp;&amp; !concentrationLimitRuleList.isEmpty()) {
            FeedAgreement.Asset.ConcentrationRules concentrationRules = cr != null ? cr : new FeedAgreement.Asset.ConcentrationRules();
            List&lt;FeedAgreement.Asset.ConcentrationRules.ConcentrationRule&gt; concentrationRuleList = concentrationRules.getConcentrationRule();
            for (ConcentrationLimitRule clr : concentrationLimitRuleList) {
                FeedAgreement.Asset.ConcentrationRules.ConcentrationRule concentrationRule = new FeedAgreement.Asset.ConcentrationRules.ConcentrationRule();
//                        if (clr.getAssetCategories() != null)
                if (clr.getRule() != null)
                    concentrationRule.setConcentrationRule(new StringType(clr.getRule().value()));
                if (clr.getFrom() != null)
                    concentrationRule.setRatingFrom(new StringType(clr.getFrom().getRealValue()));
                if (clr.getTo() != null)
                    concentrationRule.setRatingTo(new StringType(clr.getTo().getRealValue()));
                if (clr.getMethod() != null)
                    concentrationRule.setMethod(new StringType(clr.getMethod().value()));
                if (clr.getElement() != null &amp;&amp; !clr.getElement().isEmpty()) {
                    StringBuffer stringBuffer = new StringBuffer();
                    java.util.Iterator&lt;SimpleSearch&gt; iterator = clr.getElement().iterator();
                    while (iterator.hasNext()) {
                        SimpleSearch simpleSearch = (SimpleSearch) iterator.next();
                        if (simpleSearch.getLinkText() != null)
                            stringBuffer.append(simpleSearch.getLinkText().getRealValue());
                        if (iterator.hasNext())
                            stringBuffer.append(",");
                    }
                    concentrationRule.setElement(new StringType(stringBuffer.toString()));
                }
                if (clr.getValue() != null)
                    concentrationRule.setValue(new StringType(clr.getValue().getRealValue()));
                if (clr.getTrigger() != null)
                    concentrationRule.setTrigger(new StringType(clr.getTrigger().getRealValue()));
                if (clr.getCurrency() != null)
                    concentrationRule.setTriggerCCY(new StringType(clr.getCurrency().getRealValue()));
                if (clr.getGroup() != null)
                    concentrationRule.setGroup(new StringType(clr.getGroup().getRealValue()));
                concentrationRuleList.add(concentrationRule);
            }
        }
    }

    private void convertAssetClassConcentrationRulesToFeedAgreement(List&lt;ConcentrationLimitRule&gt; concentrationLimitRuleList, FeedAgreement.AssetClasses.AssetClass.ConcentrationRules cr, java.lang.String applicableParty, java.lang.String applicableType) {
        if (concentrationLimitRuleList != null &amp;&amp; !concentrationLimitRuleList.isEmpty()) {
            FeedAgreement.AssetClasses.AssetClass.ConcentrationRules concentrationRules = cr != null ? cr : new FeedAgreement.AssetClasses.AssetClass.ConcentrationRules();
            List&lt;FeedAgreement.AssetClasses.AssetClass.ConcentrationRules.ConcentrationRule&gt; concentrationRuleList = concentrationRules.getConcentrationRule();
            for (ConcentrationLimitRule clr : concentrationLimitRuleList) {
                FeedAgreement.AssetClasses.AssetClass.ConcentrationRules.ConcentrationRule concentrationRule = new FeedAgreement.AssetClasses.AssetClass.ConcentrationRules.ConcentrationRule();
//                        if (clr.getAssetCategories() != null)
                if (clr.getRule() != null)
                    concentrationRule.setConcentrationRule(new StringType(clr.getRule().value()));
                if (clr.getFrom() != null)
                    concentrationRule.setRatingFrom(new StringType(clr.getFrom().getRealValue()));
                if (clr.getTo() != null)
                    concentrationRule.setRatingTo(new StringType(clr.getTo().getRealValue()));
                if (clr.getMethod() != null)
                    concentrationRule.setMethod(new StringType(clr.getMethod().value()));
                if (clr.getElement() != null &amp;&amp; !clr.getElement().isEmpty()) {
                    StringBuffer stringBuffer = new StringBuffer();
                    java.util.Iterator&lt;SimpleSearch&gt; iterator = clr.getElement().iterator();
                    while (iterator.hasNext()) {
                        SimpleSearch simpleSearch = (SimpleSearch) iterator.next();
                        if (simpleSearch.getLinkText() != null)
                            stringBuffer.append(simpleSearch.getLinkText().getRealValue());
                        if (iterator.hasNext())
                            stringBuffer.append(",");
                    }
                    concentrationRule.setElement(new StringType(stringBuffer.toString()));
                }
                if (clr.getValue() != null)
                    concentrationRule.setValue(new StringType(clr.getValue().getRealValue()));
                if (clr.getTrigger() != null)
                    concentrationRule.setTrigger(new StringType(clr.getTrigger().getRealValue()));
                if (clr.getCurrency() != null)
                    concentrationRule.setTriggerCCY(new StringType(clr.getCurrency().getRealValue()));
                if (clr.getGroup() != null)
                    concentrationRule.setGroup(new StringType(clr.getGroup().getRealValue()));
                concentrationRule.setApplicableParty(new StringType(applicableParty));
                concentrationRule.setApplicableType(new StringType(applicableType));
                concentrationRuleList.add(concentrationRule);
            }
        }
    }
            </ci:code>
        </jaxb:bindings>
        <jaxb:bindings node="//xs:complexType[@name='organisation']">
            <ci:code>
    /**
     * Convert to OrganisationSearch
     *
     * @return
     *     possible object is
     *     {@link OrganisationSearch }
     *
     */
    public OrganisationSearch toOrganisationSearch(){
        OrganisationSearch organisationSearch = new OrganisationSearch();
        if(getRole() != null &amp;&amp; !getRole().isEmpty())
            organisationSearch.setRole(getRole().get(0));
        if(getStatus() != null)
            organisationSearch.setStatus(getStatus());
        if(getLinkage() != null)
            organisationSearch.setLinkage(new StringType(getLinkage().getRealValue()));
        if(getCode() != null) {
            organisationSearch.setCriteria(SearchCriteriaType.EXACTLY_MATCHING);
            organisationSearch.setType(SearchType.CODE);
            organisationSearch.setFilter(new StringType(getCode().getRealValue()));
            organisationSearch.setLinkText(new StringType(getCode().getRealValue()));
        }else if(getShortName() != null){
            organisationSearch.setCriteria(SearchCriteriaType.EXACTLY_MATCHING);
            organisationSearch.setType(SearchType.SHORT_NAME);
            organisationSearch.setFilter(new StringType(getShortName().getRealValue()));
            organisationSearch.setLinkText(new StringType(getShortName().getRealValue()));
        }else if(getLongName() != null){
            organisationSearch.setCriteria(SearchCriteriaType.EXACTLY_MATCHING);
            organisationSearch.setType(SearchType.LONG_NAME);
            organisationSearch.setFilter(new StringType(getLongName().getRealValue()));
            organisationSearch.setLinkText(new StringType(getLongName().getRealValue()));
        }
        return organisationSearch;
    }

    /**
     * Convert to OrganisationSearchResult
     *
     * @return
     *     possible object is
     *     {@link OrganisationSearchResult }
     *
     */
    public OrganisationSearchResult toOrganisationSearchResult(){
        OrganisationSearchResult organisationSearchResult = new OrganisationSearchResult();
        organisationSearchResult.setLongName(getLongName());
        organisationSearchResult.setShortName(getShortName());
        organisationSearchResult.setCode(getCode());
        organisationSearchResult.setStatus(getStatus());
        return organisationSearchResult;
    }

    /**
     * Convert to FeedOrganisation
     *
     * @return possible object is
     * {@link FeedOrganisation }
     */
    public FeedOrganisation toFeedOrganisation() {
        FeedOrganisation feedOrganisation = new FeedOrganisation();
        if (getLongName() != null || getShortName() != null || getCode() != null || getLei() != null) {
            FeedOrganisation.OrgHeader orgHeader = new FeedOrganisation.OrgHeader();
            if (getLongName() != null)
                orgHeader.setLongName(getLongName());
            if (getShortName() != null)
                orgHeader.setShortName(getShortName());
            if (getCode() != null)
                orgHeader.setOrgCode(getCode());
            if (getLei() != null)
                orgHeader.setLEI(getLei());
            feedOrganisation.setOrgHeader(orgHeader);
        }
        if (getRole() != null &amp;&amp; !getRole().isEmpty()) {
            for (StringType role : getRole()) {
                feedOrganisation.getOrgRole().add(role);
            }
        }
        if (getRiskCountry() != null)
            feedOrganisation.setCountryOfRisk(getRiskCountry());
        if (getIndustry() != null)
            feedOrganisation.setIndustry(getIndustry());
        if (getDebtClassification() != null &amp;&amp; !getDebtClassification().isEmpty()) {
            for (DebtClassification debtClassification : getDebtClassification()) {
                StringType debtName = null;
                if (debtClassification.getDebtName() != null)
                    debtName = debtClassification.getDebtName();
                if (debtClassification.getCreditRating() != null &amp;&amp; !debtClassification.getCreditRating().isEmpty()) {
                    for (OrganisationRating organisationRating : debtClassification.getCreditRating()) {
                        FeedOrganisation.OrgCreditRating orgCreditRating = new FeedOrganisation.OrgCreditRating();
                        orgCreditRating.setDebtClassification(debtName);
                        if (organisationRating.getAgency() != null)
                            orgCreditRating.setRatingAgency(organisationRating.getAgency());
                        if (organisationRating.getRating() != null)
                            orgCreditRating.setRating(organisationRating.getRating());
                        feedOrganisation.getOrgCreditRating().add(orgCreditRating);
                    }
                }
            }
        }
        if (getRelationship() != null &amp;&amp; !getRelationship().isEmpty()) {
            FeedOrganisation.Relationships feedRelationships = new FeedOrganisation.Relationships();
            for (Relationship relationship : getRelationship()) {
                if (relationship.isParent() != null &amp;&amp; !relationship.isParent()) {
                    FeedOrganisation.Relationships.Relationship feedRelationship = new FeedOrganisation.Relationships.Relationship();
                    if (relationship.getOrganisationSearch() != null &amp;&amp; relationship.getOrganisationSearch().getLinkText() != null)
                        feedRelationship.setSubOrg(relationship.getOrganisationSearch().getLinkText());
                    if (relationship.getType() != null)
                        feedRelationship.setRelationshipType(new StringType(relationship.getType().getRealValue().toUpperCase()));
                    feedRelationship.setRelationshipOperation(new StringType("a"));
                    feedRelationships.getRelationship().add(feedRelationship);
                }
            }
            feedOrganisation.setRelationships(feedRelationships);
        }
        if (getClRuleTemplate() != null)
            feedOrganisation.setClTemplateName(getClRuleTemplate());
        if (getClCurrency() != null)
            feedOrganisation.setClCurrency(getClCurrency());
        if (isClIncludeSubsidiaries() != null)
            feedOrganisation.setClIncludeSub(isClIncludeSubsidiaries());
        if (getImThreshold() != null)
            feedOrganisation.setImThresholdAmount(getImThreshold());
        if (getImThresholdCurrency() != null)
            feedOrganisation.setImThresholdCurrency(getImThresholdCurrency());
        if (isImIncludeSubsidiaries() != null)
            feedOrganisation.setImThresholdIncludeSub(isImIncludeSubsidiaries());
        if (isFinra4210Exempt() != null)
            feedOrganisation.setFinra4210Exempt(isFinra4210Exempt());
        //protected StringType extCode;
        if (getClassification() != null)
            feedOrganisation.setClassification(getClassification());
        if (getUltimateParent() != null &amp;&amp; !getUltimateParent().isEmpty()) {
            FeedOrganisation.UltimateParents feedUltimateParents = new FeedOrganisation.UltimateParents();
            for (OrganisationSearch organisationSearch : getUltimateParent()) {
                if (organisationSearch.getLinkText() != null)
                    feedUltimateParents.getUltimateParent().add(organisationSearch.getLinkText());
            }
            feedOrganisation.setUltimateParents(feedUltimateParents);
        }
        if (getCloseLink() != null &amp;&amp; !getCloseLink().isEmpty()) {
            FeedOrganisation.CloseLinks feedCloseLinks = new FeedOrganisation.CloseLinks();
            for (OrganisationSearch organisationSearch : getCloseLink()) {
                if (organisationSearch.getLinkText() != null)
                    feedCloseLinks.getCloseLink().add(organisationSearch.getLinkText());
            }
            feedOrganisation.setCloseLinks(feedCloseLinks);
        }
        if (getFlagCountry() != null)
            feedOrganisation.setFlagCountry(getFlagCountry());
        if (getRegion() != null &amp;&amp; !getRegion().isEmpty())
            feedOrganisation.setRegion(getRegion().get(0));
        if (getLinkage() != null)
            feedOrganisation.setLinkage(getLinkage());
        if (getAdditionalFields() != null &amp;&amp; !getAdditionalFields().isEmpty()) {
            for (AdditionalField additionalField : getAdditionalFields()) {
                FeedOrganisation.Udf feedUDF = new FeedOrganisation.Udf();
                if (additionalField.getUdfDescription() != null)
                    feedUDF.setUdfName(additionalField.getUdfDescription());
                if (additionalField.getUdfValue() != null)
                    feedUDF.setUdfValue(additionalField.getUdfValue());
                feedOrganisation.getUdf().add(feedUDF);
            }
        }
        if (getExternalCode() != null &amp;&amp; !getExternalCode().isEmpty()) {
            FeedOrganisation.ExternalCodes feedExternalCodes = new FeedOrganisation.ExternalCodes();
            for (ExternalCode externalCode : getExternalCode()) {
                FeedOrganisation.ExternalCodes.ExternalCode feedExternalCode = new FeedOrganisation.ExternalCodes.ExternalCode();
                if (externalCode.getSystemName() != null)
                    feedExternalCode.setSystem(externalCode.getSystemName());
                if (externalCode.getExternalCode() != null)
                    feedExternalCode.setExtCode(externalCode.getExternalCode());
                feedExternalCode.setOperation(new StringType("a"));
                feedExternalCodes.getExternalCode().add(feedExternalCode);
            }
        }
        if (getAddress() != null &amp;&amp; !getAddress().isEmpty()) {
            for (Address address : getAddress()) {
                FeedOrganisation.OrgAddress orgAddress = new FeedOrganisation.OrgAddress();
                if (address.getContact() != null)
                    orgAddress.setContactName(address.getContact());
                if (address.getAddress1() != null) {
                    StringBuffer addressVal = new StringBuffer();
                    addressVal.append(address.getAddress1().getRealValue());
                    if (address.getAddress2() != null)
                        addressVal.append("\n" + address.getAddress2().getRealValue());
                    if (address.getAddress3() != null)
                        addressVal.append("\n" + address.getAddress3().getRealValue());
                    if (address.getAddress4() != null)
                        addressVal.append("\n" + address.getAddress4().getRealValue());
                    if (address.getAddress5() != null)
                        addressVal.append("\n" + address.getAddress5().getRealValue());
                    orgAddress.setAddress(new StringType(addressVal.toString()));
                }
                if (address.getTitle() != null)
                    orgAddress.setTitle(address.getTitle());
                if (address.getLabel() != null)
                    orgAddress.setLabel(address.getLabel());
                if (address.getTel() != null)
                    orgAddress.setTelephoneNumber(address.getTel());
                if (address.getFax() != null)
                    orgAddress.setFaxNumber(address.getFax());
                if (address.getEmail() != null)
                    orgAddress.setEmail(address.getEmail());
                if (address.getFtp() != null)
                    orgAddress.setFtp(address.getFtp());
                if (address.getNotes() != null)
                    orgAddress.setNotes(address.getNotes());
                if (address.isEnable() != null)
                    orgAddress.setEnabled(address.isEnable());
                feedOrganisation.getOrgAddress().add(orgAddress);
            }
        }
        return feedOrganisation;
    }

            </ci:code>
        </jaxb:bindings>
        <jaxb:bindings node="//xs:complexType[@name='instrument']">
            <ci:code>
    /**
     * Convert to SecuritySearch
     *
     * @return
     *     possible object is
     *     {@link SecuritySearch }
     *
     */
    public SecuritySearch toSecuritySearch() {
        SecuritySearch securitySearch = new SecuritySearch();

        if (getAssetClass() != null)
            securitySearch.setAssetClass(new StringType(getAssetClass().getRealValue()));
        if (getAssetType() != null)
            securitySearch.setAssetType(new StringType(getAssetType().getRealValue()));
        //if (getAssetClassification() != null)
            //securitySearch.setAssetClassification(new StringType(getAssetClassification().getRealValue()));

        if (getMarket() != null) {
            SimpleSearch simpleSearch = new SimpleSearch();
            simpleSearch.setFilter(new StringType(getMarket().getRealValue()));
            simpleSearch.setLinkText(new StringType(getMarket().getRealValue()));
            securitySearch.setMarket(simpleSearch);
        }

        if (getPriceSource() != null &amp;&amp; !getPriceSource().isEmpty()) {
            if (getPriceSource().get(0).getCleanPrice() != null)
                securitySearch.setPrice(new StringType(getPriceSource().get(0).getCleanPrice().getRealValue()));
            if (getPriceSource().get(0).getPriceDate() != null) {
                securitySearch.setPriceDateFrom(new StringType(getPriceSource().get(0).getPriceDate().getRealValue()));
                securitySearch.setPriceDateTo(new StringType(getPriceSource().get(0).getPriceDate().getRealValue()));
            }
            if (getPriceSource().get(0).getPriceSourceName() != null)
                securitySearch.setPriceSource(new StringType(getPriceSource().get(0).getPriceSourceName().getRealValue()));
        }
        if (getInstrumentId() != null &amp;&amp; !getInstrumentId().isEmpty()) {
            SimpleSearch simpleSearch = new SimpleSearch();
            simpleSearch.setType(SearchCriteriaType.EXACTLY_MATCHING);
            if (getInstrumentId().get(0).getType() != null) {
                securitySearch.setInstrumentIdType(getInstrumentId().get(0).getType());
            }
            if (getInstrumentId().get(0).getValue() != null) {
                simpleSearch.setFilter(new StringType(getInstrumentId().get(0).getValue().getRealValue()));
                simpleSearch.setLinkText(new StringType(getInstrumentId().get(0).getValue().getRealValue()));
                securitySearch.setInstrumentId(simpleSearch);
                securitySearch.setLinkText(new StringType(getInstrumentId().get(0).getValue().getRealValue()));
            }
            securitySearch.setInstrument(simpleSearch);
        }

        if (getDescription() != null) {
            SimpleSearch simpleSearch = new SimpleSearch();
            simpleSearch.setFilter(new StringType(getDescription().getRealValue()));
            simpleSearch.setLinkText(new StringType(getDescription().getRealValue()));
            securitySearch.setDescription(simpleSearch);
        }

        if (getMaturityDate() != null) {
            securitySearch.setMaturityDate(new StringType(getMaturityDate().getRealValue()));
            securitySearch.setMaturityDateFrom(new StringType(getMaturityDate().getRealValue()));
            securitySearch.setMaturityDateTo(new StringType(getMaturityDate().getRealValue()));
        }

        if (getIssuer() != null &amp;&amp; getIssuer().getLinkText() != null) {
            SimpleSearch simpleSearch = new SimpleSearch();
            simpleSearch.setFilter(new StringType(getIssuer().getLinkText().getRealValue()));
            simpleSearch.setLinkText(new StringType(getIssuer().getLinkText().getRealValue()));
            securitySearch.setIssuer(simpleSearch);
        }

        if (getCurrencyOfDenomination() != null) {
            securitySearch.setCurrency(new StringType(getCurrencyOfDenomination().getRealValue()));
            securitySearch.setCurrencyofDenomination(new StringType(getCurrencyOfDenomination().getRealValue()));
        }
        if (getRecordDate() != null)
            securitySearch.setRecordDate(new StringType(getRecordDate().getRealValue()));
        if (getExDivDate() != null)
            securitySearch.setExDivDate(new StringType(getExDivDate().getRealValue()));

        if (getIssuerRating() != null &amp;&amp; !getIssuerRating().isEmpty()) {
            if(getIssueRating().get(0).getRating() != null) {
                securitySearch.setIssuerRatings(new StringType(getIssuerRating().get(0).getRating().getRealValue()));
                securitySearch.setIssueRatings(new StringType(getIssuerRating().get(0).getRating().getRealValue()));
            }
        }

        if (getDebtClassification() != null)
            securitySearch.setDebtClassification(new StringType(getDebtClassification().getRealValue()));
        if (getMinimumTradableAmount() != null)
            securitySearch.setMinimumTradableAmount(new StringType(getMinimumTradableAmount().getRealValue()));
        if (getCqs() != null &amp;&amp; !getCqs().isEmpty() &amp;&amp; getCqs().get(0).getRating() != null)
            securitySearch.setCqs(new StringType(getCqs().get(0).getRating().getRealValue()));
        if (getNotation() != null)
            securitySearch.setNotation(new StringType(getNotation().getRealValue()));
        if (getMultipleTradableAmount() != null)
            securitySearch.setMultipleTradableAmount(new StringType(getMultipleTradableAmount().getRealValue()));
        return securitySearch;
    }

    /**
     * Convert to SecuritySearchResult
     *
     * @return
     *     possible object is
     *     {@link SecuritySearchResult }
     *
     */
    public SecuritySearchResult toSecuritySearchResult(){
        SecuritySearchResult securitySearchResult = new SecuritySearchResult();
        SimpleSearch simpleSearch = new SimpleSearch();

        securitySearchResult.setAssetClass(getAssetClass());
        securitySearchResult.setAssetType(getAssetType());
        securitySearchResult.setMarket(getMarket());
        if(getInstrumentId() != null &amp;&amp; !getInstrumentId().isEmpty())
            securitySearchResult.setInstrument(getInstrumentId().get(0).getValue());
        securitySearchResult.setCurrency(getCurrencyOfDenomination());
        if(getPriceSource() != null &amp;&amp; !getPriceSource().isEmpty()){
            securitySearchResult.setPriceDate(getPriceSource().get(0).getPriceDate());
            securitySearchResult.setPrice(getPriceSource().get(0).getDirtyPrice());
            securitySearchResult.setLastPriceChange(getPriceSource().get(0).getLastPriceChange());
        }
        securitySearchResult.setLastUpdated(getLastUpdated());
        securitySearchResult.setMaturityDate(getMaturityDate());

        if(getIssuer() != null){
            simpleSearch.setFilter(getIssuer().getFilter());
            simpleSearch.setLinkText(getIssuer().getLinkText());
            securitySearchResult.setIssuer(simpleSearch.getLinkText());
            simpleSearch.setFilter(null);
            simpleSearch.setLinkText(null);
        }

        securitySearchResult.setDescription(getDescription());
        securitySearchResult.setStatus(getSecurityStatus());
        return securitySearchResult;
    }
            </ci:code>
        </jaxb:bindings>
        <jaxb:bindings node="//xs:complexType[@name='agreementSearchResult']">
            <ci:code>
    /**
     * Convert to AgreementSearch
     *
     * @return
     *     possible object is
     *     {@link AgreementSearch }
     *
     */
    public AgreementSearch toAgreementSearch(){
        AgreementSearch agreementSearch = new AgreementSearch();
        SimpleSearch simpleSearch = new SimpleSearch();
        AdvancedSearch advancedSearch = new AdvancedSearch();
        OrganisationSearch organisationSearch = new OrganisationSearch();

        agreementSearch.setSystemId(getAgreementId());

        organisationSearch.setFilter(getPrincipal());
        organisationSearch.setLinkText(getPrincipal());
        agreementSearch.setPrincipal(organisationSearch);
        organisationSearch.setFilter(null);
        organisationSearch.setLinkText(null);

        organisationSearch.setFilter(getCounterparty());
        organisationSearch.setLinkText(getCounterparty());
        agreementSearch.setCounterparty(organisationSearch);
        organisationSearch.setFilter(null);
        organisationSearch.setLinkText(null);

        agreementSearch.getRegion().add(getRegion());
        agreementSearch.setDocumentation(getCreditSupportDocumentation());

        simpleSearch.setFilter(getDescription());
        simpleSearch.setLinkText(getDescription());
        agreementSearch.setDescription(simpleSearch);
        simpleSearch.setFilter(null);
        simpleSearch.setLinkText(null);

        simpleSearch.setFilter(getExternalId());
        simpleSearch.setLinkText(getExternalId());
        agreementSearch.setExternalId(simpleSearch);
        simpleSearch.setFilter(null);
        simpleSearch.setLinkText(null);

        if(getStatus() != null)
            agreementSearch.getStatus().add(AgreementStatusType.fromValue(getStatus().getRealValue()));
        agreementSearch.getOwner().add(getOwner());
        advancedSearch.getBusinessLine().add(getBusinessLine());
        agreementSearch.setAdvancedSearch(advancedSearch);

        return agreementSearch;
    }
            </ci:code>
        </jaxb:bindings>
        <jaxb:bindings node="//xs:complexType[@name='agreementSearch']">
            <ci:code>
    /**
     * Convert Agreement Search to AgreementSearchResult
     *
     * @return possible object is
     * {@link AgreementSearchResult }
     */
    public AgreementSearchResult toAgreementSearchResult() {
        AgreementSearchResult agreementSearchResult = new AgreementSearchResult();
        if (getPrincipal() != null) {
            getPrincipal().getLinkText().getRealValue();
            agreementSearchResult.setPrincipal(getPrincipal().getLinkText());
        }
        if (getCounterparty() != null) {
            getCounterparty().getLinkText().getRealValue();
            agreementSearchResult.setCounterparty(getCounterparty().getLinkText());
            if (getCounterparty().getType() == SearchType.CODE) {
                agreementSearchResult.setCptyId(getCounterparty().getLinkText());
            }
        }
        if (getDocumentation() != null) {
            getDocumentation().getRealValue();
            agreementSearchResult.setCreditSupportDocumentation(getDocumentation());
        }
        if (getDescription() != null) {
            getDescription().getLinkText().getRealValue();
            agreementSearchResult.setDescription(getDescription().getLinkText());
        }
        if (getStatus() != null &amp;&amp; !getStatus().isEmpty())
            agreementSearchResult.setStatus(new StringType(getStatus().get(0).value()));
        if (getRegion() != null &amp;&amp; !getRegion().isEmpty())
            agreementSearchResult.setRegion(getRegion().get(0));
        if (getSystemId() != null) {
            getSystemId().getRealValue();
            agreementSearchResult.setAgreementId(getSystemId());
        }
        if (getExternalId() != null) {
            getExternalId().getLinkText().getRealValue();
            agreementSearchResult.setExternalId(getExternalId().getLinkText());
        }

        return agreementSearchResult;
    }
            </ci:code>
        </jaxb:bindings>
        <jaxb:bindings node="//xs:complexType[@name='organisationSearchResult']">
            <ci:code>
    /**
     * Convert to OrganisationSearch
     *
     * @return
     *     allowed object is
     *     {@link OrganisationSearch }
     *
     */
    public OrganisationSearch toOrganisationSearch(){
        OrganisationSearch organisationSearch = new OrganisationSearch();
        organisationSearch.setStatus(getStatus());
        organisationSearch.setCriteria(SearchCriteriaType.EXACTLY_MATCHING);
        if(getCode() != null) {
            organisationSearch.setType(SearchType.CODE);
            organisationSearch.setFilter(getCode());
            organisationSearch.setLinkText(getCode());
        }else if(getLongName() != null){
            organisationSearch.setType(SearchType.LONG_NAME);
            organisationSearch.setFilter(getLongName());
            organisationSearch.setLinkText(getLongName());
        }else if(getShortName() != null){
            organisationSearch.setType(SearchType.SHORT_NAME);
            organisationSearch.setFilter(getShortName());
            organisationSearch.setLinkText(getShortName());
        }
        return organisationSearch;
    }
            </ci:code>
        </jaxb:bindings>
        <jaxb:bindings node="//xs:complexType[@name='organisationSearch']">
            <ci:code>
    /**
     * Convert to OrganisationSearchResult
     *
     * @return
     *     possible object is
     *     {@link OrganisationSearchResult }
     *
     */
    public OrganisationSearchResult toOrganisationSearchResult(){
        OrganisationSearchResult organisationSearchResult = new OrganisationSearchResult();
        if(getType() == SearchType.CODE){
            organisationSearchResult.setCode(getLinkText());
        }else if(getType() == SearchType.LONG_NAME){
            organisationSearchResult.setLongName(getLinkText());
        }else if(getType() == SearchType.SHORT_NAME){
            organisationSearchResult.setShortName(getLinkText());
        }
        organisationSearchResult.setStatus(getStatus());
        return  organisationSearchResult;
    }

    /**
     * Convert to OrganisationSimpleSearch
     *
     * @return
     *     possible object is
     *     {@link OrganisationSimpleSearch }
     *
     */
    public OrganisationSimpleSearch toOrganisationSimpleSearch() {
        OrganisationSimpleSearch organisationSimpleSearch = new OrganisationSimpleSearch();
        SimpleSearch simpleSearch = new SimpleSearch();
        if (getCriteria() != null)
            simpleSearch.setType(getCriteria());
        if (getFilter() != null)
            simpleSearch.setFilter(new StringType(getFilter().getRealValue()));
        if (getLinkText() != null)
            simpleSearch.setLinkText(new StringType(getLinkText().getRealValue()));
        if (getType() == SearchType.CODE)
            organisationSimpleSearch.setCode(simpleSearch);
        else if (getType() == SearchType.LONG_NAME)
            organisationSimpleSearch.setLongName(simpleSearch);
        else if (getType() == SearchType.SHORT_NAME)
            organisationSimpleSearch.setShortName(simpleSearch);
        return organisationSimpleSearch;
    }
            </ci:code>
        </jaxb:bindings>
        <jaxb:bindings node="//xs:complexType[@name='securitySearchResult']">
            <ci:code>
    /**
     * Convert to SecuritySearch
     *
     * @return
     *     possible object is
     *     {@link SecuritySearch }
     *
     */
    public SecuritySearch toSecuritySearch(){
        SecuritySearch securitySearch = new SecuritySearch();
        SimpleSearch simpleSearch = new SimpleSearch();

        securitySearch.setAssetClass(getAssetClass());
        securitySearch.setAssetType(getAssetType());

        simpleSearch.setFilter(getMarket());
        simpleSearch.setLinkText(getMarket());
        securitySearch.setMarket(simpleSearch);
        simpleSearch.setFilter(null);
        simpleSearch.setLinkText(null);

        securitySearch.setPrice(getPrice());

        simpleSearch.setFilter(getInstrument());
        simpleSearch.setLinkText(getInstrument());
        securitySearch.setInstrumentId(simpleSearch);
        simpleSearch.setFilter(null);
        simpleSearch.setLinkText(null);

        securitySearch.setPriceDateFrom(getPriceDate());
        securitySearch.setPriceDateTo(getPriceDate());

        simpleSearch.setFilter(getDescription());
        simpleSearch.setLinkText(getDescription());
        securitySearch.setDescription(simpleSearch);
        simpleSearch.setFilter(null);
        simpleSearch.setLinkText(null);

        securitySearch.setMaturityDate(getMaturityDate());
        securitySearch.setMaturityDateFrom(getMaturityDate());
        securitySearch.setMaturityDateTo(getMaturityDate());

        securitySearch.getIssuer().setLinkText(getIssuer());

        securitySearch.setCurrency(getCurrency());
        securitySearch.setLinkText(getInstrument());
        return securitySearch;
    }
            </ci:code>
        </jaxb:bindings>
        <jaxb:bindings node="//xs:complexType[@name='securitySearch']">
            <ci:code>
    /**
     * Convert to SecuritySearchResult
     *
     * @return
     *     possible object is
     *     {@link SecuritySearchResult }
     *
     */
    public SecuritySearchResult toSecuritySearchResult(){
        SecuritySearchResult securitySearchResult = new SecuritySearchResult();

        securitySearchResult.setAssetClass(getAssetClass());
        securitySearchResult.setAssetType(getAssetType());
        if(getMarket() != null)
            securitySearchResult.setMarket(getMarket().getLinkText());
        if(getInstrumentId() != null)
            securitySearchResult.setInstrument(getInstrumentId().getLinkText());
        securitySearchResult.setCurrency(getCurrency());
        if(getPriceDateFrom() != null) {
            securitySearchResult.setPriceDate(getPriceDateFrom());
        }else{
            securitySearchResult.setPriceDate(getPriceDateTo());
        }
        securitySearchResult.setPrice(getPrice());
        securitySearchResult.setIssuer(getIssuer().getLinkText());
        if(getDescription() != null)
            securitySearchResult.setDescription(getDescription().getLinkText());
        return securitySearchResult;
    }
            </ci:code>
        </jaxb:bindings>
		<jaxb:bindings node="//xs:complexType[@name='collateralAssetClass']">
			<ci:code>
	public CollateralAssetType getCollateralAssetType(String name) throws Exception {
		return (CollateralAssetType) com.lombardrisk.util.Biz.filterListByName(this.getCollateralAssetType(), name);
	}
			</ci:code>
		</jaxb:bindings>
		<jaxb:bindings node="//xs:complexType[@name='stringType']">
			<ci:code>
	public StringType() {
		super();
	}

	public StringType(String value) {
		super();
		this.value = value;
	}
			
    /**
     * Gets the real value by property ref and random.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */			
	public String getRealValue() {
		if (ref != null &amp;&amp; ((StringType) ref).getRealValue() != null) {
			value = ((StringType) ref).getRealValue();
		} else if (random != null &amp;&amp; random) {
			value = com.lombardrisk.util.Biz.randomize();
			random = false;
		}
        if (prefix != null) {
            value = prefix + value;
            prefix = null;
        }
        if (suffix != null) {
            value = value + suffix;
            suffix = null;
        }
		return value;
	}
			</ci:code>
		</jaxb:bindings>	
		<jaxb:bindings node="//xs:complexType[@name='feedEligibilityRulesTemplate']//xs:element[@name='name']">
			<jaxb:property name="templateName"/>
		</jaxb:bindings>
	</jaxb:bindings>
</jaxb:bindings>
